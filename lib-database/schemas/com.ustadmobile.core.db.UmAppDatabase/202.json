{
  "formatVersion": 1,
  "database": {
    "version": 202,
    "identityHash": "4e97383b879db14ad7112516d979e38c",
    "entities": [
      {
        "tableName": "ClazzLog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzLogUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzLogClazzUid` INTEGER NOT NULL, `logDate` INTEGER NOT NULL, `timeRecorded` INTEGER NOT NULL, `clazzLogDone` INTEGER NOT NULL, `cancellationNote` TEXT, `clazzLogCancelled` INTEGER NOT NULL, `clazzLogNumPresent` INTEGER NOT NULL, `clazzLogNumAbsent` INTEGER NOT NULL, `clazzLogNumPartial` INTEGER NOT NULL, `clazzLogScheduleUid` INTEGER NOT NULL, `clazzLogStatusFlag` INTEGER NOT NULL, `clazzLogMSQN` INTEGER NOT NULL, `clazzLogLCSN` INTEGER NOT NULL, `clazzLogLCB` INTEGER NOT NULL, `clazzLogLastChangedTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzLogUid",
            "columnName": "clazzLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogClazzUid",
            "columnName": "clazzLogClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "logDate",
            "columnName": "logDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timeRecorded",
            "columnName": "timeRecorded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogDone",
            "columnName": "clazzLogDone",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cancellationNote",
            "columnName": "cancellationNote",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzLogCancelled",
            "columnName": "clazzLogCancelled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumPresent",
            "columnName": "clazzLogNumPresent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumAbsent",
            "columnName": "clazzLogNumAbsent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumPartial",
            "columnName": "clazzLogNumPartial",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogScheduleUid",
            "columnName": "clazzLogScheduleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogStatusFlag",
            "columnName": "clazzLogStatusFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogMSQN",
            "columnName": "clazzLogMSQN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLCSN",
            "columnName": "clazzLogLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLCB",
            "columnName": "clazzLogLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLastChangedTime",
            "columnName": "clazzLogLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "clazzLogUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzLogAttendanceRecord",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzLogAttendanceRecordUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzLogAttendanceRecordClazzLogUid` INTEGER NOT NULL, `clazzLogAttendanceRecordPersonUid` INTEGER NOT NULL, `attendanceStatus` INTEGER NOT NULL, `clazzLogAttendanceRecordMasterChangeSeqNum` INTEGER NOT NULL, `clazzLogAttendanceRecordLocalChangeSeqNum` INTEGER NOT NULL, `clazzLogAttendanceRecordLastChangedBy` INTEGER NOT NULL, `clazzLogAttendanceRecordLastChangedTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzLogAttendanceRecordUid",
            "columnName": "clazzLogAttendanceRecordUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordClazzLogUid",
            "columnName": "clazzLogAttendanceRecordClazzLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordPersonUid",
            "columnName": "clazzLogAttendanceRecordPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attendanceStatus",
            "columnName": "attendanceStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordMasterChangeSeqNum",
            "columnName": "clazzLogAttendanceRecordMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLocalChangeSeqNum",
            "columnName": "clazzLogAttendanceRecordLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLastChangedBy",
            "columnName": "clazzLogAttendanceRecordLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLastChangedTime",
            "columnName": "clazzLogAttendanceRecordLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "clazzLogAttendanceRecordUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Schedule",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scheduleUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sceduleStartTime` INTEGER NOT NULL, `scheduleEndTime` INTEGER NOT NULL, `scheduleDay` INTEGER NOT NULL, `scheduleMonth` INTEGER NOT NULL, `scheduleFrequency` INTEGER NOT NULL, `umCalendarUid` INTEGER NOT NULL, `scheduleClazzUid` INTEGER NOT NULL, `scheduleMasterChangeSeqNum` INTEGER NOT NULL, `scheduleLocalChangeSeqNum` INTEGER NOT NULL, `scheduleLastChangedBy` INTEGER NOT NULL, `scheduleLastChangedTime` INTEGER NOT NULL, `scheduleActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "scheduleUid",
            "columnName": "scheduleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sceduleStartTime",
            "columnName": "sceduleStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleEndTime",
            "columnName": "scheduleEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleDay",
            "columnName": "scheduleDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleMonth",
            "columnName": "scheduleMonth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleFrequency",
            "columnName": "scheduleFrequency",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarUid",
            "columnName": "umCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleClazzUid",
            "columnName": "scheduleClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleMasterChangeSeqNum",
            "columnName": "scheduleMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLocalChangeSeqNum",
            "columnName": "scheduleLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLastChangedBy",
            "columnName": "scheduleLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLastChangedTime",
            "columnName": "scheduleLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleActive",
            "columnName": "scheduleActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "scheduleUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "HolidayCalendar",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`umCalendarUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `umCalendarName` TEXT, `umCalendarCategory` INTEGER NOT NULL, `umCalendarActive` INTEGER NOT NULL, `umCalendarMasterChangeSeqNum` INTEGER NOT NULL, `umCalendarLocalChangeSeqNum` INTEGER NOT NULL, `umCalendarLastChangedBy` INTEGER NOT NULL, `umCalendarLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "umCalendarUid",
            "columnName": "umCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarName",
            "columnName": "umCalendarName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "umCalendarCategory",
            "columnName": "umCalendarCategory",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarActive",
            "columnName": "umCalendarActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarMasterChangeSeqNum",
            "columnName": "umCalendarMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLocalChangeSeqNum",
            "columnName": "umCalendarLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLastChangedBy",
            "columnName": "umCalendarLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLct",
            "columnName": "umCalendarLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "umCalendarUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Holiday",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`holUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `holMasterCsn` INTEGER NOT NULL, `holLocalCsn` INTEGER NOT NULL, `holLastModBy` INTEGER NOT NULL, `holLct` INTEGER NOT NULL, `holActive` INTEGER NOT NULL, `holHolidayCalendarUid` INTEGER NOT NULL, `holStartTime` INTEGER NOT NULL, `holEndTime` INTEGER NOT NULL, `holName` TEXT)",
        "fields": [
          {
            "fieldPath": "holUid",
            "columnName": "holUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holMasterCsn",
            "columnName": "holMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLocalCsn",
            "columnName": "holLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLastModBy",
            "columnName": "holLastModBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLct",
            "columnName": "holLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holActive",
            "columnName": "holActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holHolidayCalendarUid",
            "columnName": "holHolidayCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holStartTime",
            "columnName": "holStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holEndTime",
            "columnName": "holEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holName",
            "columnName": "holName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "holUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Person",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `username` TEXT, `firstNames` TEXT, `lastName` TEXT, `emailAddr` TEXT, `phoneNum` TEXT, `gender` INTEGER NOT NULL, `active` INTEGER NOT NULL, `isPersonalAccount` INTEGER NOT NULL, `dateOfBirth` INTEGER NOT NULL, `personAddress` TEXT, `personOrgId` TEXT, `personGroupUid` INTEGER NOT NULL, `personLct` INTEGER NOT NULL, `personCountry` TEXT, `personType` INTEGER NOT NULL DEFAULT 0, `personMasterChangeSeqNum` INTEGER NOT NULL, `personLocalChangeSeqNum` INTEGER NOT NULL, `personLastChangedBy` INTEGER NOT NULL, `admin` INTEGER NOT NULL, `personNotes` TEXT, `fatherName` TEXT, `fatherNumber` TEXT, `motherName` TEXT, `motherNum` TEXT)",
        "fields": [
          {
            "fieldPath": "personUid",
            "columnName": "personUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstNames",
            "columnName": "firstNames",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emailAddr",
            "columnName": "emailAddr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNum",
            "columnName": "phoneNum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPersonalAccount",
            "columnName": "isPersonalAccount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateOfBirth",
            "columnName": "dateOfBirth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personAddress",
            "columnName": "personAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personOrgId",
            "columnName": "personOrgId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personGroupUid",
            "columnName": "personGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLct",
            "columnName": "personLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personCountry",
            "columnName": "personCountry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personType",
            "columnName": "personType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "personMasterChangeSeqNum",
            "columnName": "personMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLocalChangeSeqNum",
            "columnName": "personLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLastChangedBy",
            "columnName": "personLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "admin",
            "columnName": "admin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personNotes",
            "columnName": "personNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fatherName",
            "columnName": "fatherName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fatherNumber",
            "columnName": "fatherNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "motherName",
            "columnName": "motherName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "motherNum",
            "columnName": "motherNum",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "personUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Clazz",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzName` TEXT, `clazzDesc` TEXT, `attendanceAverage` REAL NOT NULL, `clazzHolidayUMCalendarUid` INTEGER NOT NULL, `clazzScheuleUMCalendarUid` INTEGER NOT NULL, `isClazzActive` INTEGER NOT NULL, `clazzLocationUid` INTEGER NOT NULL, `clazzStartTime` INTEGER NOT NULL, `clazzEndTime` INTEGER NOT NULL, `clazzFeatures` INTEGER NOT NULL, `clazzSchoolUid` INTEGER NOT NULL, `clazzEnrolmentPolicy` INTEGER NOT NULL DEFAULT 102, `clazzTerminologyUid` INTEGER NOT NULL DEFAULT 25966, `clazzMasterChangeSeqNum` INTEGER NOT NULL, `clazzLocalChangeSeqNum` INTEGER NOT NULL, `clazzLastChangedBy` INTEGER NOT NULL, `clazzLct` INTEGER NOT NULL, `clazzTimeZone` TEXT, `clazzStudentsPersonGroupUid` INTEGER NOT NULL, `clazzTeachersPersonGroupUid` INTEGER NOT NULL, `clazzPendingStudentsPersonGroupUid` INTEGER NOT NULL, `clazzParentsPersonGroupUid` INTEGER NOT NULL, `clazzCode` TEXT, `clazzOwnerPersonUid` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "clazzUid",
            "columnName": "clazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzName",
            "columnName": "clazzName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzDesc",
            "columnName": "clazzDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attendanceAverage",
            "columnName": "attendanceAverage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "clazzHolidayUMCalendarUid",
            "columnName": "clazzHolidayUMCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzScheuleUMCalendarUid",
            "columnName": "clazzScheuleUMCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isClazzActive",
            "columnName": "isClazzActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLocationUid",
            "columnName": "clazzLocationUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzStartTime",
            "columnName": "clazzStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEndTime",
            "columnName": "clazzEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzFeatures",
            "columnName": "clazzFeatures",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzSchoolUid",
            "columnName": "clazzSchoolUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentPolicy",
            "columnName": "clazzEnrolmentPolicy",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "102"
          },
          {
            "fieldPath": "clazzTerminologyUid",
            "columnName": "clazzTerminologyUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "25966"
          },
          {
            "fieldPath": "clazzMasterChangeSeqNum",
            "columnName": "clazzMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLocalChangeSeqNum",
            "columnName": "clazzLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLastChangedBy",
            "columnName": "clazzLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLct",
            "columnName": "clazzLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzTimeZone",
            "columnName": "clazzTimeZone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzStudentsPersonGroupUid",
            "columnName": "clazzStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzTeachersPersonGroupUid",
            "columnName": "clazzTeachersPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzPendingStudentsPersonGroupUid",
            "columnName": "clazzPendingStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzParentsPersonGroupUid",
            "columnName": "clazzParentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzCode",
            "columnName": "clazzCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzOwnerPersonUid",
            "columnName": "clazzOwnerPersonUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "clazzUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzEnrolment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzEnrolmentUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzEnrolmentPersonUid` INTEGER NOT NULL, `clazzEnrolmentClazzUid` INTEGER NOT NULL, `clazzEnrolmentDateJoined` INTEGER NOT NULL, `clazzEnrolmentDateLeft` INTEGER NOT NULL, `clazzEnrolmentRole` INTEGER NOT NULL, `clazzEnrolmentAttendancePercentage` REAL NOT NULL, `clazzEnrolmentActive` INTEGER NOT NULL, `clazzEnrolmentLeavingReasonUid` INTEGER NOT NULL, `clazzEnrolmentOutcome` INTEGER NOT NULL, `clazzEnrolmentLocalChangeSeqNum` INTEGER NOT NULL, `clazzEnrolmentMasterChangeSeqNum` INTEGER NOT NULL, `clazzEnrolmentLastChangedBy` INTEGER NOT NULL, `clazzEnrolmentLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzEnrolmentUid",
            "columnName": "clazzEnrolmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentPersonUid",
            "columnName": "clazzEnrolmentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentClazzUid",
            "columnName": "clazzEnrolmentClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentDateJoined",
            "columnName": "clazzEnrolmentDateJoined",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentDateLeft",
            "columnName": "clazzEnrolmentDateLeft",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentRole",
            "columnName": "clazzEnrolmentRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentAttendancePercentage",
            "columnName": "clazzEnrolmentAttendancePercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentActive",
            "columnName": "clazzEnrolmentActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLeavingReasonUid",
            "columnName": "clazzEnrolmentLeavingReasonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentOutcome",
            "columnName": "clazzEnrolmentOutcome",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLocalChangeSeqNum",
            "columnName": "clazzEnrolmentLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentMasterChangeSeqNum",
            "columnName": "clazzEnrolmentMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLastChangedBy",
            "columnName": "clazzEnrolmentLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLct",
            "columnName": "clazzEnrolmentLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "clazzEnrolmentUid"
          ]
        },
        "indices": [
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentPersonUid_clazzEnrolmentClazzUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentPersonUid",
              "clazzEnrolmentClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentPersonUid_clazzEnrolmentClazzUid` ON `${TABLE_NAME}` (`clazzEnrolmentPersonUid`, `clazzEnrolmentClazzUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentPersonUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid",
              "clazzEnrolmentPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentPersonUid` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`, `clazzEnrolmentPersonUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentRole",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid",
              "clazzEnrolmentRole"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentRole` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`, `clazzEnrolmentRole`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentPersonUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentPersonUid` ON `${TABLE_NAME}` (`clazzEnrolmentPersonUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LeavingReason",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`leavingReasonUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `leavingReasonTitle` TEXT, `leavingReasonMCSN` INTEGER NOT NULL, `leavingReasonCSN` INTEGER NOT NULL, `leavingReasonLCB` INTEGER NOT NULL, `leavingReasonLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "leavingReasonUid",
            "columnName": "leavingReasonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonTitle",
            "columnName": "leavingReasonTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "leavingReasonMCSN",
            "columnName": "leavingReasonMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonCSN",
            "columnName": "leavingReasonCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonLCB",
            "columnName": "leavingReasonLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonLct",
            "columnName": "leavingReasonLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "leavingReasonUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentEntryUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT, `description` TEXT, `entryId` TEXT, `author` TEXT, `publisher` TEXT, `licenseType` INTEGER NOT NULL, `licenseName` TEXT, `licenseUrl` TEXT, `sourceUrl` TEXT, `thumbnailUrl` TEXT, `lastModified` INTEGER NOT NULL, `primaryLanguageUid` INTEGER NOT NULL, `languageVariantUid` INTEGER NOT NULL, `contentFlags` INTEGER NOT NULL, `leaf` INTEGER NOT NULL, `publik` INTEGER NOT NULL, `ceInactive` INTEGER NOT NULL, `completionCriteria` INTEGER NOT NULL, `minScore` INTEGER NOT NULL, `contentTypeFlag` INTEGER NOT NULL, `contentOwner` INTEGER NOT NULL, `contentOwnerType` INTEGER NOT NULL DEFAULT 1, `contentEntryLocalChangeSeqNum` INTEGER NOT NULL, `contentEntryMasterChangeSeqNum` INTEGER NOT NULL, `contentEntryLastChangedBy` INTEGER NOT NULL, `contentEntryLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentEntryUid",
            "columnName": "contentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "entryId",
            "columnName": "entryId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisher",
            "columnName": "publisher",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "licenseType",
            "columnName": "licenseType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "licenseName",
            "columnName": "licenseName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "licenseUrl",
            "columnName": "licenseUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sourceUrl",
            "columnName": "sourceUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastModified",
            "columnName": "lastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "primaryLanguageUid",
            "columnName": "primaryLanguageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languageVariantUid",
            "columnName": "languageVariantUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentFlags",
            "columnName": "contentFlags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leaf",
            "columnName": "leaf",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publik",
            "columnName": "publik",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceInactive",
            "columnName": "ceInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completionCriteria",
            "columnName": "completionCriteria",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minScore",
            "columnName": "minScore",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentTypeFlag",
            "columnName": "contentTypeFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentOwner",
            "columnName": "contentOwner",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentOwnerType",
            "columnName": "contentOwnerType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "contentEntryLocalChangeSeqNum",
            "columnName": "contentEntryLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryMasterChangeSeqNum",
            "columnName": "contentEntryMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryLastChangedBy",
            "columnName": "contentEntryLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryLct",
            "columnName": "contentEntryLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "contentEntryUid"
          ]
        },
        "indices": [
          {
            "name": "index_ContentEntry_primaryLanguageUid",
            "unique": false,
            "columnNames": [
              "primaryLanguageUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntry_primaryLanguageUid` ON `${TABLE_NAME}` (`primaryLanguageUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryContentCategoryJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ceccjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ceccjContentEntryUid` INTEGER NOT NULL, `ceccjContentCategoryUid` INTEGER NOT NULL, `ceccjLocalChangeSeqNum` INTEGER NOT NULL, `ceccjMasterChangeSeqNum` INTEGER NOT NULL, `ceccjLastChangedBy` INTEGER NOT NULL, `ceccjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ceccjUid",
            "columnName": "ceccjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjContentEntryUid",
            "columnName": "ceccjContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjContentCategoryUid",
            "columnName": "ceccjContentCategoryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLocalChangeSeqNum",
            "columnName": "ceccjLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjMasterChangeSeqNum",
            "columnName": "ceccjMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLastChangedBy",
            "columnName": "ceccjLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLct",
            "columnName": "ceccjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "ceccjUid"
          ]
        },
        "indices": [
          {
            "name": "index_ContentEntryContentCategoryJoin_ceccjContentEntryUid",
            "unique": false,
            "columnNames": [
              "ceccjContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryContentCategoryJoin_ceccjContentEntryUid` ON `${TABLE_NAME}` (`ceccjContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryParentChildJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cepcjParentContentEntryUid` INTEGER NOT NULL, `cepcjChildContentEntryUid` INTEGER NOT NULL, `childIndex` INTEGER NOT NULL, `cepcjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cepcjLocalChangeSeqNum` INTEGER NOT NULL, `cepcjMasterChangeSeqNum` INTEGER NOT NULL, `cepcjLastChangedBy` INTEGER NOT NULL, `cepcjLct` INTEGER NOT NULL, `cepcjDeleted` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "cepcjParentContentEntryUid",
            "columnName": "cepcjParentContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjChildContentEntryUid",
            "columnName": "cepcjChildContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "childIndex",
            "columnName": "childIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjUid",
            "columnName": "cepcjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLocalChangeSeqNum",
            "columnName": "cepcjLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjMasterChangeSeqNum",
            "columnName": "cepcjMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLastChangedBy",
            "columnName": "cepcjLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLct",
            "columnName": "cepcjLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjDeleted",
            "columnName": "cepcjDeleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cepcjUid"
          ]
        },
        "indices": [
          {
            "name": "parent_child",
            "unique": false,
            "columnNames": [
              "cepcjChildContentEntryUid",
              "cepcjParentContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `parent_child` ON `${TABLE_NAME}` (`cepcjChildContentEntryUid`, `cepcjParentContentEntryUid`)"
          },
          {
            "name": "index_ContentEntryParentChildJoin_cepcjParentContentEntryUid",
            "unique": false,
            "columnNames": [
              "cepcjParentContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoin_cepcjParentContentEntryUid` ON `${TABLE_NAME}` (`cepcjParentContentEntryUid`)"
          },
          {
            "name": "index_ContentEntryParentChildJoin_cepcjChildContentEntryUid",
            "unique": false,
            "columnNames": [
              "cepcjChildContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoin_cepcjChildContentEntryUid` ON `${TABLE_NAME}` (`cepcjChildContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryRelatedEntryJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cerejUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cerejContentEntryUid` INTEGER NOT NULL, `cerejRelatedEntryUid` INTEGER NOT NULL, `cerejLastChangedBy` INTEGER NOT NULL, `relType` INTEGER NOT NULL, `comment` TEXT, `cerejRelLanguageUid` INTEGER NOT NULL, `cerejLocalChangeSeqNum` INTEGER NOT NULL, `cerejMasterChangeSeqNum` INTEGER NOT NULL, `cerejLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cerejUid",
            "columnName": "cerejUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejContentEntryUid",
            "columnName": "cerejContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejRelatedEntryUid",
            "columnName": "cerejRelatedEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLastChangedBy",
            "columnName": "cerejLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "relType",
            "columnName": "relType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cerejRelLanguageUid",
            "columnName": "cerejRelLanguageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLocalChangeSeqNum",
            "columnName": "cerejLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejMasterChangeSeqNum",
            "columnName": "cerejMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLct",
            "columnName": "cerejLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cerejUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategorySchema",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentCategorySchemaUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `schemaName` TEXT, `schemaUrl` TEXT, `contentCategorySchemaLocalChangeSeqNum` INTEGER NOT NULL, `contentCategorySchemaMasterChangeSeqNum` INTEGER NOT NULL, `contentCategorySchemaLastChangedBy` INTEGER NOT NULL, `contentCategorySchemaLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentCategorySchemaUid",
            "columnName": "contentCategorySchemaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schemaName",
            "columnName": "schemaName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schemaUrl",
            "columnName": "schemaUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentCategorySchemaLocalChangeSeqNum",
            "columnName": "contentCategorySchemaLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaMasterChangeSeqNum",
            "columnName": "contentCategorySchemaMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaLastChangedBy",
            "columnName": "contentCategorySchemaLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaLct",
            "columnName": "contentCategorySchemaLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "contentCategorySchemaUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentCategoryUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ctnCatContentCategorySchemaUid` INTEGER NOT NULL, `name` TEXT, `contentCategoryLocalChangeSeqNum` INTEGER NOT NULL, `contentCategoryMasterChangeSeqNum` INTEGER NOT NULL, `contentCategoryLastChangedBy` INTEGER NOT NULL, `contentCategoryLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentCategoryUid",
            "columnName": "contentCategoryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctnCatContentCategorySchemaUid",
            "columnName": "ctnCatContentCategorySchemaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentCategoryLocalChangeSeqNum",
            "columnName": "contentCategoryLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryMasterChangeSeqNum",
            "columnName": "contentCategoryMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryLastChangedBy",
            "columnName": "contentCategoryLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryLct",
            "columnName": "contentCategoryLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "contentCategoryUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Language",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`langUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `iso_639_1_standard` TEXT, `iso_639_2_standard` TEXT, `iso_639_3_standard` TEXT, `Language_Type` TEXT, `languageActive` INTEGER NOT NULL, `langLocalChangeSeqNum` INTEGER NOT NULL, `langMasterChangeSeqNum` INTEGER NOT NULL, `langLastChangedBy` INTEGER NOT NULL, `langLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "langUid",
            "columnName": "langUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_1_standard",
            "columnName": "iso_639_1_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_2_standard",
            "columnName": "iso_639_2_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_3_standard",
            "columnName": "iso_639_3_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "Language_Type",
            "columnName": "Language_Type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "languageActive",
            "columnName": "languageActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLocalChangeSeqNum",
            "columnName": "langLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langMasterChangeSeqNum",
            "columnName": "langMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLastChangedBy",
            "columnName": "langLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLct",
            "columnName": "langLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "langUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LanguageVariant",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`langVariantUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `langUid` INTEGER NOT NULL, `countryCode` TEXT, `name` TEXT, `langVariantLocalChangeSeqNum` INTEGER NOT NULL, `langVariantMasterChangeSeqNum` INTEGER NOT NULL, `langVariantLastChangedBy` INTEGER NOT NULL, `langVariantLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "langVariantUid",
            "columnName": "langVariantUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langUid",
            "columnName": "langUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "countryCode",
            "columnName": "countryCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "langVariantLocalChangeSeqNum",
            "columnName": "langVariantLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantMasterChangeSeqNum",
            "columnName": "langVariantMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantLastChangedBy",
            "columnName": "langVariantLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantLct",
            "columnName": "langVariantLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "langVariantUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonAuth",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personAuthUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `passwordHash` TEXT, `personAuthStatus` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "personAuthUid",
            "columnName": "personAuthUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passwordHash",
            "columnName": "passwordHash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personAuthStatus",
            "columnName": "personAuthStatus",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "personAuthUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`groupUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupMasterCsn` INTEGER NOT NULL, `groupLocalCsn` INTEGER NOT NULL, `groupLastChangedBy` INTEGER NOT NULL, `groupLct` INTEGER NOT NULL, `groupName` TEXT, `groupActive` INTEGER NOT NULL, `personGroupFlag` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "groupUid",
            "columnName": "groupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMasterCsn",
            "columnName": "groupMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLocalCsn",
            "columnName": "groupLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLastChangedBy",
            "columnName": "groupLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLct",
            "columnName": "groupLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupName",
            "columnName": "groupName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "groupActive",
            "columnName": "groupActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personGroupFlag",
            "columnName": "personGroupFlag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "groupUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroupMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`groupMemberUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupMemberActive` INTEGER NOT NULL, `groupMemberPersonUid` INTEGER NOT NULL, `groupMemberGroupUid` INTEGER NOT NULL, `groupMemberMasterCsn` INTEGER NOT NULL, `groupMemberLocalCsn` INTEGER NOT NULL, `groupMemberLastChangedBy` INTEGER NOT NULL, `groupMemberLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "groupMemberUid",
            "columnName": "groupMemberUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberActive",
            "columnName": "groupMemberActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberPersonUid",
            "columnName": "groupMemberPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberGroupUid",
            "columnName": "groupMemberGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberMasterCsn",
            "columnName": "groupMemberMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLocalCsn",
            "columnName": "groupMemberLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLastChangedBy",
            "columnName": "groupMemberLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLct",
            "columnName": "groupMemberLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "groupMemberUid"
          ]
        },
        "indices": [
          {
            "name": "index_PersonGroupMember_groupMemberPersonUid",
            "unique": false,
            "columnNames": [
              "groupMemberPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMember_groupMemberPersonUid` ON `${TABLE_NAME}` (`groupMemberPersonUid`)"
          },
          {
            "name": "index_PersonGroupMember_groupMemberGroupUid",
            "unique": false,
            "columnNames": [
              "groupMemberGroupUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMember_groupMemberGroupUid` ON `${TABLE_NAME}` (`groupMemberGroupUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonPicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personPictureUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `personPictureLct` INTEGER NOT NULL, `personPictureUri` TEXT, `personPictureThumbnailUri` TEXT, `fileSize` INTEGER NOT NULL, `personPictureActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "personPictureUid",
            "columnName": "personPictureUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureLct",
            "columnName": "personPictureLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureUri",
            "columnName": "personPictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personPictureThumbnailUri",
            "columnName": "personPictureThumbnailUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureActive",
            "columnName": "personPictureActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "personPictureUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "VerbEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`verbUid` INTEGER NOT NULL, `verbUrlId` TEXT, `verbDeleted` INTEGER NOT NULL, `verbLct` INTEGER NOT NULL, PRIMARY KEY(`verbUid`))",
        "fields": [
          {
            "fieldPath": "verbUid",
            "columnName": "verbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbUrlId",
            "columnName": "verbUrlId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verbDeleted",
            "columnName": "verbDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLct",
            "columnName": "verbLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "verbUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ActivityEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`actUid` INTEGER NOT NULL, `actIdIri` TEXT, `actType` TEXT, `actMoreInfo` TEXT, `actInteractionType` INTEGER NOT NULL, `actCorrectResponsePatterns` TEXT, `actLct` INTEGER NOT NULL, PRIMARY KEY(`actUid`))",
        "fields": [
          {
            "fieldPath": "actUid",
            "columnName": "actUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actIdIri",
            "columnName": "actIdIri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actType",
            "columnName": "actType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actMoreInfo",
            "columnName": "actMoreInfo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actInteractionType",
            "columnName": "actInteractionType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actCorrectResponsePatterns",
            "columnName": "actCorrectResponsePatterns",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actLct",
            "columnName": "actLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "actUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StatementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`statementIdHi` INTEGER NOT NULL, `statementIdLo` INTEGER NOT NULL, `statementActorPersonUid` INTEGER NOT NULL, `statementVerbUid` INTEGER NOT NULL, `statementObjectType` INTEGER NOT NULL, `statementObjectUid1` INTEGER NOT NULL, `statementObjectUid2` INTEGER NOT NULL, `statementActorUid` INTEGER NOT NULL, `authorityActorUid` INTEGER NOT NULL, `teamUid` INTEGER NOT NULL, `resultCompletion` INTEGER, `resultSuccess` INTEGER, `resultScoreScaled` REAL, `resultScoreRaw` REAL, `resultScoreMin` REAL, `resultScoreMax` REAL, `resultDuration` INTEGER, `resultResponse` TEXT, `timestamp` INTEGER NOT NULL, `stored` INTEGER NOT NULL, `contextRegistrationHi` INTEGER NOT NULL, `contextRegistrationLo` INTEGER NOT NULL, `contextPlatform` TEXT, `contextStatementRefIdHi` INTEGER NOT NULL, `contextStatementRefIdLo` INTEGER NOT NULL, `contextInstructorActorUid` INTEGER NOT NULL, `statementLct` INTEGER NOT NULL, `extensionProgress` INTEGER, `completionOrProgress` INTEGER NOT NULL, `statementContentEntryUid` INTEGER NOT NULL, `statementLearnerGroupUid` INTEGER NOT NULL, `statementClazzUid` INTEGER NOT NULL, `statementCbUid` INTEGER NOT NULL, `statementDoorNode` INTEGER NOT NULL, `isSubStatement` INTEGER NOT NULL, PRIMARY KEY(`statementIdHi`, `statementIdLo`))",
        "fields": [
          {
            "fieldPath": "statementIdHi",
            "columnName": "statementIdHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementIdLo",
            "columnName": "statementIdLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementActorPersonUid",
            "columnName": "statementActorPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementVerbUid",
            "columnName": "statementVerbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementObjectType",
            "columnName": "statementObjectType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementObjectUid1",
            "columnName": "statementObjectUid1",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementObjectUid2",
            "columnName": "statementObjectUid2",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementActorUid",
            "columnName": "statementActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorityActorUid",
            "columnName": "authorityActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamUid",
            "columnName": "teamUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultCompletion",
            "columnName": "resultCompletion",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "resultSuccess",
            "columnName": "resultSuccess",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "resultScoreScaled",
            "columnName": "resultScoreScaled",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "resultScoreRaw",
            "columnName": "resultScoreRaw",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "resultScoreMin",
            "columnName": "resultScoreMin",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "resultScoreMax",
            "columnName": "resultScoreMax",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "resultDuration",
            "columnName": "resultDuration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "resultResponse",
            "columnName": "resultResponse",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stored",
            "columnName": "stored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextRegistrationHi",
            "columnName": "contextRegistrationHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextRegistrationLo",
            "columnName": "contextRegistrationLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextPlatform",
            "columnName": "contextPlatform",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contextStatementRefIdHi",
            "columnName": "contextStatementRefIdHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextStatementRefIdLo",
            "columnName": "contextStatementRefIdLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextInstructorActorUid",
            "columnName": "contextInstructorActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLct",
            "columnName": "statementLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "extensionProgress",
            "columnName": "extensionProgress",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "completionOrProgress",
            "columnName": "completionOrProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementContentEntryUid",
            "columnName": "statementContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLearnerGroupUid",
            "columnName": "statementLearnerGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementClazzUid",
            "columnName": "statementClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementCbUid",
            "columnName": "statementCbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementDoorNode",
            "columnName": "statementDoorNode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSubStatement",
            "columnName": "isSubStatement",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "statementIdHi",
            "statementIdLo"
          ]
        },
        "indices": [
          {
            "name": "idx_stmt_actor_person",
            "unique": false,
            "columnNames": [
              "statementActorPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_stmt_actor_person` ON `${TABLE_NAME}` (`statementActorPersonUid`)"
          },
          {
            "name": "idx_statement_clazz_person",
            "unique": false,
            "columnNames": [
              "statementClazzUid",
              "statementActorPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_statement_clazz_person` ON `${TABLE_NAME}` (`statementClazzUid`, `statementActorPersonUid`)"
          },
          {
            "name": "idx_statement_cbuid_actor",
            "unique": false,
            "columnNames": [
              "statementCbUid",
              "statementActorUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_statement_cbuid_actor` ON `${TABLE_NAME}` (`statementCbUid`, `statementActorUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ActorEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`actorUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `actorPersonUid` INTEGER NOT NULL, `actorName` TEXT, `actorMbox` TEXT, `actorMbox_sha1sum` TEXT, `actorOpenid` TEXT, `actorAccountName` TEXT, `actorAccountHomePage` TEXT, `actorEtag` INTEGER NOT NULL, `actorLct` INTEGER NOT NULL, `actorObjectType` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "actorUid",
            "columnName": "actorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actorPersonUid",
            "columnName": "actorPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actorName",
            "columnName": "actorName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorMbox",
            "columnName": "actorMbox",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorMbox_sha1sum",
            "columnName": "actorMbox_sha1sum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorOpenid",
            "columnName": "actorOpenid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorAccountName",
            "columnName": "actorAccountName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorAccountHomePage",
            "columnName": "actorAccountHomePage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "actorEtag",
            "columnName": "actorEtag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actorLct",
            "columnName": "actorLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actorObjectType",
            "columnName": "actorObjectType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "actorUid"
          ]
        },
        "indices": [
          {
            "name": "idx_actorentity_uid_personuid",
            "unique": false,
            "columnNames": [
              "actorPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_actorentity_uid_personuid` ON `${TABLE_NAME}` (`actorPersonUid`)"
          },
          {
            "name": "idx_actorentity_actorobjecttype",
            "unique": false,
            "columnNames": [
              "actorObjectType"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_actorentity_actorobjecttype` ON `${TABLE_NAME}` (`actorObjectType`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SyncNode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`nodeClientId` INTEGER NOT NULL, PRIMARY KEY(`nodeClientId`))",
        "fields": [
          {
            "fieldPath": "nodeClientId",
            "columnName": "nodeClientId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "nodeClientId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Comments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`commentsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `commentsText` TEXT, `commentsEntityUid` INTEGER NOT NULL, `commentsStatus` INTEGER NOT NULL, `commentsFromPersonUid` INTEGER NOT NULL, `commentsForSubmitterUid` INTEGER NOT NULL, `commentsFromSubmitterUid` INTEGER NOT NULL, `commentsFlagged` INTEGER NOT NULL, `commentsDeleted` INTEGER NOT NULL, `commentsDateTimeAdded` INTEGER NOT NULL, `commentsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "commentsUid",
            "columnName": "commentsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsText",
            "columnName": "commentsText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsEntityUid",
            "columnName": "commentsEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsStatus",
            "columnName": "commentsStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsFromPersonUid",
            "columnName": "commentsFromPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsForSubmitterUid",
            "columnName": "commentsForSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsFromSubmitterUid",
            "columnName": "commentsFromSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsFlagged",
            "columnName": "commentsFlagged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsDeleted",
            "columnName": "commentsDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsDateTimeAdded",
            "columnName": "commentsDateTimeAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsLct",
            "columnName": "commentsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "commentsUid"
          ]
        },
        "indices": [
          {
            "name": "idx_comments_entity_submitter",
            "unique": false,
            "columnNames": [
              "commentsEntityUid",
              "commentsForSubmitterUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_comments_entity_submitter` ON `${TABLE_NAME}` (`commentsEntityUid`, `commentsForSubmitterUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "Report",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`reportUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `reportOwnerUid` INTEGER NOT NULL, `xAxis` INTEGER NOT NULL, `reportDateRangeSelection` INTEGER NOT NULL, `fromDate` INTEGER NOT NULL, `fromRelTo` INTEGER NOT NULL, `fromRelOffSet` INTEGER NOT NULL, `fromRelUnit` INTEGER NOT NULL, `toDate` INTEGER NOT NULL, `toRelTo` INTEGER NOT NULL, `toRelOffSet` INTEGER NOT NULL, `toRelUnit` INTEGER NOT NULL, `reportTitle` TEXT, `reportDescription` TEXT, `reportSeries` TEXT, `reportInactive` INTEGER NOT NULL, `isTemplate` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `reportTitleId` INTEGER NOT NULL, `reportDescId` INTEGER NOT NULL, `reportMasterChangeSeqNum` INTEGER NOT NULL, `reportLocalChangeSeqNum` INTEGER NOT NULL, `reportLastChangedBy` INTEGER NOT NULL, `reportLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "reportUid",
            "columnName": "reportUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportOwnerUid",
            "columnName": "reportOwnerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xAxis",
            "columnName": "xAxis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportDateRangeSelection",
            "columnName": "reportDateRangeSelection",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromDate",
            "columnName": "fromDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelTo",
            "columnName": "fromRelTo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelOffSet",
            "columnName": "fromRelOffSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelUnit",
            "columnName": "fromRelUnit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toDate",
            "columnName": "toDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelTo",
            "columnName": "toRelTo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelOffSet",
            "columnName": "toRelOffSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelUnit",
            "columnName": "toRelUnit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportTitle",
            "columnName": "reportTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportDescription",
            "columnName": "reportDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportSeries",
            "columnName": "reportSeries",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportInactive",
            "columnName": "reportInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTemplate",
            "columnName": "isTemplate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportTitleId",
            "columnName": "reportTitleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportDescId",
            "columnName": "reportDescId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportMasterChangeSeqNum",
            "columnName": "reportMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLocalChangeSeqNum",
            "columnName": "reportLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLastChangedBy",
            "columnName": "reportLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLct",
            "columnName": "reportLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "reportUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Site",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`siteUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sitePcsn` INTEGER NOT NULL, `siteLcsn` INTEGER NOT NULL, `siteLcb` INTEGER NOT NULL, `siteLct` INTEGER NOT NULL, `siteName` TEXT, `guestLogin` INTEGER NOT NULL, `registrationAllowed` INTEGER NOT NULL, `authSalt` TEXT)",
        "fields": [
          {
            "fieldPath": "siteUid",
            "columnName": "siteUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sitePcsn",
            "columnName": "sitePcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLcsn",
            "columnName": "siteLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLcb",
            "columnName": "siteLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLct",
            "columnName": "siteLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteName",
            "columnName": "siteName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "guestLogin",
            "columnName": "guestLogin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "registrationAllowed",
            "columnName": "registrationAllowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authSalt",
            "columnName": "authSalt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "siteUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SiteTerms",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sTermsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `termsHtml` TEXT, `sTermsLang` TEXT, `sTermsLangUid` INTEGER NOT NULL, `sTermsActive` INTEGER NOT NULL, `sTermsLastChangedBy` INTEGER NOT NULL, `sTermsPrimaryCsn` INTEGER NOT NULL, `sTermsLocalCsn` INTEGER NOT NULL, `sTermsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "sTermsUid",
            "columnName": "sTermsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "termsHtml",
            "columnName": "termsHtml",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sTermsLang",
            "columnName": "sTermsLang",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sTermsLangUid",
            "columnName": "sTermsLangUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsActive",
            "columnName": "sTermsActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLastChangedBy",
            "columnName": "sTermsLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsPrimaryCsn",
            "columnName": "sTermsPrimaryCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLocalCsn",
            "columnName": "sTermsLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLct",
            "columnName": "sTermsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "sTermsUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonParentJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ppjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ppjPcsn` INTEGER NOT NULL, `ppjLcsn` INTEGER NOT NULL, `ppjLcb` INTEGER NOT NULL, `ppjLct` INTEGER NOT NULL, `ppjParentPersonUid` INTEGER NOT NULL, `ppjMinorPersonUid` INTEGER NOT NULL, `ppjRelationship` INTEGER NOT NULL, `ppjEmail` TEXT, `ppjPhone` TEXT, `ppjInactive` INTEGER NOT NULL, `ppjStatus` INTEGER NOT NULL, `ppjApprovalTiemstamp` INTEGER NOT NULL, `ppjApprovalIpAddr` TEXT)",
        "fields": [
          {
            "fieldPath": "ppjUid",
            "columnName": "ppjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjPcsn",
            "columnName": "ppjPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLcsn",
            "columnName": "ppjLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLcb",
            "columnName": "ppjLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLct",
            "columnName": "ppjLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjParentPersonUid",
            "columnName": "ppjParentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjMinorPersonUid",
            "columnName": "ppjMinorPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjRelationship",
            "columnName": "ppjRelationship",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjEmail",
            "columnName": "ppjEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppjPhone",
            "columnName": "ppjPhone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppjInactive",
            "columnName": "ppjInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjStatus",
            "columnName": "ppjStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjApprovalTiemstamp",
            "columnName": "ppjApprovalTiemstamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjApprovalIpAddr",
            "columnName": "ppjApprovalIpAddr",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "ppjUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ScopedGrant",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sgUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sgPcsn` INTEGER NOT NULL, `sgLcsn` INTEGER NOT NULL, `sgLcb` INTEGER NOT NULL, `sgLct` INTEGER NOT NULL, `sgTableId` INTEGER NOT NULL, `sgEntityUid` INTEGER NOT NULL, `sgPermissions` INTEGER NOT NULL, `sgGroupUid` INTEGER NOT NULL, `sgIndex` INTEGER NOT NULL, `sgFlags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "sgUid",
            "columnName": "sgUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgPcsn",
            "columnName": "sgPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLcsn",
            "columnName": "sgLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLcb",
            "columnName": "sgLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLct",
            "columnName": "sgLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgTableId",
            "columnName": "sgTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgEntityUid",
            "columnName": "sgEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgPermissions",
            "columnName": "sgPermissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgGroupUid",
            "columnName": "sgGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgIndex",
            "columnName": "sgIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgFlags",
            "columnName": "sgFlags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "sgUid"
          ]
        },
        "indices": [
          {
            "name": "idx_group_to_entity",
            "unique": false,
            "columnNames": [
              "sgGroupUid",
              "sgPermissions",
              "sgTableId",
              "sgEntityUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_group_to_entity` ON `${TABLE_NAME}` (`sgGroupUid`, `sgPermissions`, `sgTableId`, `sgEntityUid`)"
          },
          {
            "name": "idx_entity_to_group",
            "unique": false,
            "columnNames": [
              "sgTableId",
              "sgEntityUid",
              "sgPermissions",
              "sgGroupUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_entity_to_group` ON `${TABLE_NAME}` (`sgTableId`, `sgEntityUid`, `sgPermissions`, `sgGroupUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ErrorReport",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`errUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `errPcsn` INTEGER NOT NULL, `errLcsn` INTEGER NOT NULL, `errLcb` INTEGER NOT NULL, `errLct` INTEGER NOT NULL, `severity` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `presenterUri` TEXT, `appVersion` TEXT, `versionCode` INTEGER NOT NULL, `errorCode` INTEGER NOT NULL, `operatingSys` TEXT, `osVersion` TEXT, `stackTrace` TEXT, `message` TEXT)",
        "fields": [
          {
            "fieldPath": "errUid",
            "columnName": "errUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errPcsn",
            "columnName": "errPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLcsn",
            "columnName": "errLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLcb",
            "columnName": "errLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLct",
            "columnName": "errLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "severity",
            "columnName": "severity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "presenterUri",
            "columnName": "presenterUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appVersion",
            "columnName": "appVersion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorCode",
            "columnName": "errorCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "operatingSys",
            "columnName": "operatingSys",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "osVersion",
            "columnName": "osVersion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stackTrace",
            "columnName": "stackTrace",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "errUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`caUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `caTitle` TEXT, `caDescription` TEXT, `caGroupUid` INTEGER NOT NULL DEFAULT 0, `caActive` INTEGER NOT NULL, `caClassCommentEnabled` INTEGER NOT NULL, `caPrivateCommentsEnabled` INTEGER NOT NULL DEFAULT 1, `caCompletionCriteria` INTEGER NOT NULL DEFAULT 100, `caRequireFileSubmission` INTEGER NOT NULL DEFAULT 1, `caFileType` INTEGER NOT NULL DEFAULT 0, `caSizeLimit` INTEGER NOT NULL DEFAULT 50, `caNumberOfFiles` INTEGER NOT NULL DEFAULT 1, `caSubmissionPolicy` INTEGER NOT NULL DEFAULT 1, `caMarkingType` INTEGER NOT NULL DEFAULT 1, `caRequireTextSubmission` INTEGER NOT NULL DEFAULT 1, `caTextLimitType` INTEGER NOT NULL DEFAULT 1, `caTextLimit` INTEGER NOT NULL DEFAULT 500, `caXObjectUid` INTEGER NOT NULL DEFAULT 0, `caClazzUid` INTEGER NOT NULL, `caPeerReviewerCount` INTEGER NOT NULL DEFAULT 0, `caLocalChangeSeqNum` INTEGER NOT NULL, `caMasterChangeSeqNum` INTEGER NOT NULL, `caLastChangedBy` INTEGER NOT NULL, `caLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "caUid",
            "columnName": "caUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caTitle",
            "columnName": "caTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caDescription",
            "columnName": "caDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caGroupUid",
            "columnName": "caGroupUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caActive",
            "columnName": "caActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caClassCommentEnabled",
            "columnName": "caClassCommentEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caPrivateCommentsEnabled",
            "columnName": "caPrivateCommentsEnabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caCompletionCriteria",
            "columnName": "caCompletionCriteria",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "100"
          },
          {
            "fieldPath": "caRequireFileSubmission",
            "columnName": "caRequireFileSubmission",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caFileType",
            "columnName": "caFileType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caSizeLimit",
            "columnName": "caSizeLimit",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "50"
          },
          {
            "fieldPath": "caNumberOfFiles",
            "columnName": "caNumberOfFiles",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caSubmissionPolicy",
            "columnName": "caSubmissionPolicy",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caMarkingType",
            "columnName": "caMarkingType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caRequireTextSubmission",
            "columnName": "caRequireTextSubmission",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caTextLimitType",
            "columnName": "caTextLimitType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caTextLimit",
            "columnName": "caTextLimit",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "500"
          },
          {
            "fieldPath": "caXObjectUid",
            "columnName": "caXObjectUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caClazzUid",
            "columnName": "caClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caPeerReviewerCount",
            "columnName": "caPeerReviewerCount",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caLocalChangeSeqNum",
            "columnName": "caLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caMasterChangeSeqNum",
            "columnName": "caMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caLastChangedBy",
            "columnName": "caLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caLct",
            "columnName": "caLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "caUid"
          ]
        },
        "indices": [
          {
            "name": "index_ClazzAssignment_caClazzUid",
            "unique": false,
            "columnNames": [
              "caClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignment_caClazzUid` ON `${TABLE_NAME}` (`caClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `casAssignmentUid` INTEGER NOT NULL, `casSubmitterUid` INTEGER NOT NULL, `casSubmitterPersonUid` INTEGER NOT NULL, `casText` TEXT, `casType` INTEGER NOT NULL, `casTimestamp` INTEGER NOT NULL, `casClazzUid` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "casUid",
            "columnName": "casUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casAssignmentUid",
            "columnName": "casAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casSubmitterUid",
            "columnName": "casSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casSubmitterPersonUid",
            "columnName": "casSubmitterPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casText",
            "columnName": "casText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casType",
            "columnName": "casType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casTimestamp",
            "columnName": "casTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casClazzUid",
            "columnName": "casClazzUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "casUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmissionFile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casaUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `casaSubmissionUid` INTEGER NOT NULL, `casaSubmitterUid` INTEGER NOT NULL DEFAULT 0, `casaCaUid` INTEGER NOT NULL, `casaClazzUid` INTEGER NOT NULL, `casaMimeType` TEXT, `casaFileName` TEXT, `casaUri` TEXT, `casaSize` INTEGER NOT NULL, `casaTimestamp` INTEGER NOT NULL, `casaDeleted` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "casaUid",
            "columnName": "casaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaSubmissionUid",
            "columnName": "casaSubmissionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaSubmitterUid",
            "columnName": "casaSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "casaCaUid",
            "columnName": "casaCaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaClazzUid",
            "columnName": "casaClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaMimeType",
            "columnName": "casaMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaFileName",
            "columnName": "casaFileName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaUri",
            "columnName": "casaUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaSize",
            "columnName": "casaSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaTimestamp",
            "columnName": "casaTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaDeleted",
            "columnName": "casaDeleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "casaUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentMark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`camUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `camAssignmentUid` INTEGER NOT NULL, `camSubmitterUid` INTEGER NOT NULL, `camMarkerSubmitterUid` INTEGER NOT NULL DEFAULT 0, `camMarkerPersonUid` INTEGER NOT NULL DEFAULT 0, `camMarkerComment` TEXT, `camMark` REAL NOT NULL, `camMaxMark` REAL NOT NULL DEFAULT 1, `camPenalty` REAL NOT NULL, `camLct` INTEGER NOT NULL, `camClazzUid` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "camUid",
            "columnName": "camUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camAssignmentUid",
            "columnName": "camAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camSubmitterUid",
            "columnName": "camSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camMarkerSubmitterUid",
            "columnName": "camMarkerSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "camMarkerPersonUid",
            "columnName": "camMarkerPersonUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "camMarkerComment",
            "columnName": "camMarkerComment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "camMark",
            "columnName": "camMark",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "camMaxMark",
            "columnName": "camMaxMark",
            "affinity": "REAL",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "camPenalty",
            "columnName": "camPenalty",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "camLct",
            "columnName": "camLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camClazzUid",
            "columnName": "camClazzUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "camUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PeerReviewerAllocation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`praUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `praMarkerSubmitterUid` INTEGER NOT NULL, `praToMarkerSubmitterUid` INTEGER NOT NULL, `praAssignmentUid` INTEGER NOT NULL, `praActive` INTEGER NOT NULL, `praLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "praUid",
            "columnName": "praUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "praMarkerSubmitterUid",
            "columnName": "praMarkerSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "praToMarkerSubmitterUid",
            "columnName": "praToMarkerSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "praAssignmentUid",
            "columnName": "praAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "praActive",
            "columnName": "praActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "praLct",
            "columnName": "praLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "praUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonAuth2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pauthUid` INTEGER NOT NULL, `pauthMechanism` TEXT, `pauthAuth` TEXT, `pauthLcsn` INTEGER NOT NULL, `pauthPcsn` INTEGER NOT NULL, `pauthLcb` INTEGER NOT NULL, `pauthLct` INTEGER NOT NULL, PRIMARY KEY(`pauthUid`))",
        "fields": [
          {
            "fieldPath": "pauthUid",
            "columnName": "pauthUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthMechanism",
            "columnName": "pauthMechanism",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pauthAuth",
            "columnName": "pauthAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pauthLcsn",
            "columnName": "pauthLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthPcsn",
            "columnName": "pauthPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthLcb",
            "columnName": "pauthLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthLct",
            "columnName": "pauthLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pauthUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserSession",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`usUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `usPcsn` INTEGER NOT NULL, `usLcsn` INTEGER NOT NULL, `usLcb` INTEGER NOT NULL, `usLct` INTEGER NOT NULL, `usPersonUid` INTEGER NOT NULL, `usClientNodeId` INTEGER NOT NULL, `usStartTime` INTEGER NOT NULL, `usEndTime` INTEGER NOT NULL, `usStatus` INTEGER NOT NULL, `usReason` INTEGER NOT NULL, `usAuth` TEXT, `usSessionType` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "usUid",
            "columnName": "usUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usPcsn",
            "columnName": "usPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLcsn",
            "columnName": "usLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLcb",
            "columnName": "usLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLct",
            "columnName": "usLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usPersonUid",
            "columnName": "usPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usClientNodeId",
            "columnName": "usClientNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usStartTime",
            "columnName": "usStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usEndTime",
            "columnName": "usEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usStatus",
            "columnName": "usStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usReason",
            "columnName": "usReason",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usAuth",
            "columnName": "usAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "usSessionType",
            "columnName": "usSessionType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "usUid"
          ]
        },
        "indices": [
          {
            "name": "person_status_node_idx",
            "unique": false,
            "columnNames": [
              "usPersonUid",
              "usStatus",
              "usClientNodeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `person_status_node_idx` ON `${TABLE_NAME}` (`usPersonUid`, `usStatus`, `usClientNodeId`)"
          },
          {
            "name": "node_status_person_idx",
            "unique": false,
            "columnNames": [
              "usClientNodeId",
              "usStatus",
              "usPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `node_status_person_idx` ON `${TABLE_NAME}` (`usClientNodeId`, `usStatus`, `usPersonUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `toUri` TEXT, `cjProgress` INTEGER NOT NULL, `cjTotal` INTEGER NOT NULL, `cjNotificationTitle` TEXT, `cjIsMeteredAllowed` INTEGER NOT NULL, `params` TEXT, `cjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cjUid",
            "columnName": "cjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toUri",
            "columnName": "toUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjProgress",
            "columnName": "cjProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjTotal",
            "columnName": "cjTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjNotificationTitle",
            "columnName": "cjNotificationTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjIsMeteredAllowed",
            "columnName": "cjIsMeteredAllowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjLct",
            "columnName": "cjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cjUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryImportJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cjiUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sourceUri` TEXT, `cjiOriginalFilename` TEXT, `cjiContentEntryUid` INTEGER NOT NULL, `cjiParentContentEntryUid` INTEGER NOT NULL, `cjiContentEntryVersion` INTEGER NOT NULL, `cjiItemProgress` INTEGER NOT NULL, `cjiItemTotal` INTEGER NOT NULL, `cjiStatus` INTEGER NOT NULL, `cjiRecursiveStatus` INTEGER NOT NULL, `cjiPluginId` INTEGER NOT NULL, `cjiParentCjiUid` INTEGER NOT NULL, `cjiStartTime` INTEGER NOT NULL, `cjiFinishTime` INTEGER NOT NULL, `cjiContentDeletedOnCancellation` INTEGER NOT NULL, `cjiCompressionLevel` INTEGER NOT NULL DEFAULT 3, `cjiError` TEXT, `cjiErrorDismissed` INTEGER NOT NULL, `cjiOwnerPersonUid` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cjiUid",
            "columnName": "cjiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceUri",
            "columnName": "sourceUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjiOriginalFilename",
            "columnName": "cjiOriginalFilename",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjiContentEntryUid",
            "columnName": "cjiContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiParentContentEntryUid",
            "columnName": "cjiParentContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiContentEntryVersion",
            "columnName": "cjiContentEntryVersion",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiItemProgress",
            "columnName": "cjiItemProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiItemTotal",
            "columnName": "cjiItemTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiStatus",
            "columnName": "cjiStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiRecursiveStatus",
            "columnName": "cjiRecursiveStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiPluginId",
            "columnName": "cjiPluginId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiParentCjiUid",
            "columnName": "cjiParentCjiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiStartTime",
            "columnName": "cjiStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiFinishTime",
            "columnName": "cjiFinishTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiContentDeletedOnCancellation",
            "columnName": "cjiContentDeletedOnCancellation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiCompressionLevel",
            "columnName": "cjiCompressionLevel",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "3"
          },
          {
            "fieldPath": "cjiError",
            "columnName": "cjiError",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjiErrorDismissed",
            "columnName": "cjiErrorDismissed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiOwnerPersonUid",
            "columnName": "cjiOwnerPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cjiUid"
          ]
        },
        "indices": [
          {
            "name": "index_ContentEntryImportJob_cjiContentEntryUid_cjiFinishTime",
            "unique": false,
            "columnNames": [
              "cjiContentEntryUid",
              "cjiFinishTime"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryImportJob_cjiContentEntryUid_cjiFinishTime` ON `${TABLE_NAME}` (`cjiContentEntryUid`, `cjiFinishTime`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseBlock",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cbUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cbType` INTEGER NOT NULL, `cbIndentLevel` INTEGER NOT NULL, `cbModuleParentBlockUid` INTEGER NOT NULL, `cbTitle` TEXT, `cbDescription` TEXT, `cbCompletionCriteria` INTEGER NOT NULL, `cbHideUntilDate` INTEGER NOT NULL, `cbDeadlineDate` INTEGER NOT NULL, `cbLateSubmissionPenalty` INTEGER NOT NULL, `cbGracePeriodDate` INTEGER NOT NULL, `cbMaxPoints` REAL, `cbMinPoints` REAL, `cbIndex` INTEGER NOT NULL, `cbClazzUid` INTEGER NOT NULL, `cbClazzSourcedId` TEXT, `cbActive` INTEGER NOT NULL, `cbHidden` INTEGER NOT NULL, `cbEntityUid` INTEGER NOT NULL, `cbLct` INTEGER NOT NULL, `cbSourcedId` TEXT, `cbMetadata` TEXT, `cbCreatedByAppId` TEXT)",
        "fields": [
          {
            "fieldPath": "cbUid",
            "columnName": "cbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbType",
            "columnName": "cbType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbIndentLevel",
            "columnName": "cbIndentLevel",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbModuleParentBlockUid",
            "columnName": "cbModuleParentBlockUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbTitle",
            "columnName": "cbTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbDescription",
            "columnName": "cbDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbCompletionCriteria",
            "columnName": "cbCompletionCriteria",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbHideUntilDate",
            "columnName": "cbHideUntilDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbDeadlineDate",
            "columnName": "cbDeadlineDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbLateSubmissionPenalty",
            "columnName": "cbLateSubmissionPenalty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbGracePeriodDate",
            "columnName": "cbGracePeriodDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbMaxPoints",
            "columnName": "cbMaxPoints",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "cbMinPoints",
            "columnName": "cbMinPoints",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "cbIndex",
            "columnName": "cbIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbClazzUid",
            "columnName": "cbClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbClazzSourcedId",
            "columnName": "cbClazzSourcedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbActive",
            "columnName": "cbActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbHidden",
            "columnName": "cbHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbEntityUid",
            "columnName": "cbEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbLct",
            "columnName": "cbLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbSourcedId",
            "columnName": "cbSourcedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbMetadata",
            "columnName": "cbMetadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbCreatedByAppId",
            "columnName": "cbCreatedByAppId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cbUid"
          ]
        },
        "indices": [
          {
            "name": "idx_courseblock_cbclazzuid",
            "unique": false,
            "columnNames": [
              "cbClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_courseblock_cbclazzuid` ON `${TABLE_NAME}` (`cbClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseTerminology",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ctUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ctTitle` TEXT, `ctTerminology` TEXT, `ctLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ctUid",
            "columnName": "ctUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctTitle",
            "columnName": "ctTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ctTerminology",
            "columnName": "ctTerminology",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ctLct",
            "columnName": "ctLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "ctUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cgsName` TEXT, `cgsTotalGroups` INTEGER NOT NULL, `cgsActive` INTEGER NOT NULL, `cgsClazzUid` INTEGER NOT NULL, `cgsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cgsUid",
            "columnName": "cgsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsName",
            "columnName": "cgsName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cgsTotalGroups",
            "columnName": "cgsTotalGroups",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsActive",
            "columnName": "cgsActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsClazzUid",
            "columnName": "cgsClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsLct",
            "columnName": "cgsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cgsUid"
          ]
        },
        "indices": [
          {
            "name": "index_CourseGroupSet_cgsClazzUid",
            "unique": false,
            "columnNames": [
              "cgsClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupSet_cgsClazzUid` ON `${TABLE_NAME}` (`cgsClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgmUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cgmSetUid` INTEGER NOT NULL, `cgmGroupNumber` INTEGER NOT NULL, `cgmPersonUid` INTEGER NOT NULL, `cgmLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cgmUid",
            "columnName": "cgmUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmSetUid",
            "columnName": "cgmSetUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmGroupNumber",
            "columnName": "cgmGroupNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmPersonUid",
            "columnName": "cgmPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmLct",
            "columnName": "cgmLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cgmUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryPicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cepUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cepContentEntryUid` INTEGER NOT NULL, `cepUri` TEXT, `cepMd5` TEXT, `cepFileSize` INTEGER NOT NULL, `cepTimestamp` INTEGER NOT NULL, `cepMimeType` TEXT, `cepActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cepUid",
            "columnName": "cepUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepContentEntryUid",
            "columnName": "cepContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepUri",
            "columnName": "cepUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cepMd5",
            "columnName": "cepMd5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cepFileSize",
            "columnName": "cepFileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepTimestamp",
            "columnName": "cepTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepMimeType",
            "columnName": "cepMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cepActive",
            "columnName": "cepActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cepUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ActivityInteractionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`aieActivityUid` INTEGER NOT NULL, `aieHash` INTEGER NOT NULL, `aieProp` INTEGER NOT NULL, `aieId` TEXT, `aieLastMod` INTEGER NOT NULL, `aieIsDeleted` INTEGER NOT NULL, PRIMARY KEY(`aieActivityUid`, `aieHash`))",
        "fields": [
          {
            "fieldPath": "aieActivityUid",
            "columnName": "aieActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aieHash",
            "columnName": "aieHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aieProp",
            "columnName": "aieProp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aieId",
            "columnName": "aieId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "aieLastMod",
            "columnName": "aieLastMod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aieIsDeleted",
            "columnName": "aieIsDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "aieActivityUid",
            "aieHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CoursePicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`coursePictureUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coursePictureLct` INTEGER NOT NULL, `coursePictureUri` TEXT, `coursePictureThumbnailUri` TEXT, `coursePictureActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "coursePictureUid",
            "columnName": "coursePictureUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureLct",
            "columnName": "coursePictureLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureUri",
            "columnName": "coursePictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coursePictureThumbnailUri",
            "columnName": "coursePictureThumbnailUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coursePictureActive",
            "columnName": "coursePictureActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "coursePictureUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionPostUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `discussionPostReplyToPostUid` INTEGER NOT NULL, `discussionPostTitle` TEXT, `discussionPostMessage` TEXT, `discussionPostStartDate` INTEGER NOT NULL, `discussionPostCourseBlockUid` INTEGER NOT NULL, `dpDeleted` INTEGER NOT NULL, `discussionPostStartedPersonUid` INTEGER NOT NULL, `discussionPostClazzUid` INTEGER NOT NULL, `discussionPostLct` INTEGER NOT NULL, `discussionPostVisible` INTEGER NOT NULL, `discussionPostArchive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "discussionPostUid",
            "columnName": "discussionPostUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostReplyToPostUid",
            "columnName": "discussionPostReplyToPostUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostTitle",
            "columnName": "discussionPostTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionPostMessage",
            "columnName": "discussionPostMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionPostStartDate",
            "columnName": "discussionPostStartDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostCourseBlockUid",
            "columnName": "discussionPostCourseBlockUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dpDeleted",
            "columnName": "dpDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostStartedPersonUid",
            "columnName": "discussionPostStartedPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostClazzUid",
            "columnName": "discussionPostClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostLct",
            "columnName": "discussionPostLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostVisible",
            "columnName": "discussionPostVisible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostArchive",
            "columnName": "discussionPostArchive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "discussionPostUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ExternalAppPermission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`eapUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `eapPersonUid` INTEGER NOT NULL, `eapPackageId` TEXT, `eapStartTime` INTEGER NOT NULL, `eapExpireTime` INTEGER NOT NULL, `eapAuthToken` TEXT, `eapAndroidAccountName` TEXT)",
        "fields": [
          {
            "fieldPath": "eapUid",
            "columnName": "eapUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eapPersonUid",
            "columnName": "eapPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eapPackageId",
            "columnName": "eapPackageId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "eapStartTime",
            "columnName": "eapStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eapExpireTime",
            "columnName": "eapExpireTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eapAuthToken",
            "columnName": "eapAuthToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "eapAndroidAccountName",
            "columnName": "eapAndroidAccountName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "eapUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Message",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `messageSenderPersonUid` INTEGER NOT NULL, `messageToPersonUid` INTEGER NOT NULL, `messageText` TEXT, `messageTimestamp` INTEGER NOT NULL, `messageLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "messageUid",
            "columnName": "messageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageSenderPersonUid",
            "columnName": "messageSenderPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageToPersonUid",
            "columnName": "messageToPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageText",
            "columnName": "messageText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "messageTimestamp",
            "columnName": "messageTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageLct",
            "columnName": "messageLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "messageUid"
          ]
        },
        "indices": [
          {
            "name": "message_idx_send_to_time",
            "unique": false,
            "columnNames": [
              "messageSenderPersonUid",
              "messageToPersonUid",
              "messageTimestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `message_idx_send_to_time` ON `${TABLE_NAME}` (`messageSenderPersonUid`, `messageToPersonUid`, `messageTimestamp`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "StudentResult",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`srUid` INTEGER NOT NULL, `srSourcedId` TEXT, `srCourseBlockUid` INTEGER NOT NULL, `srLineItemSourcedId` TEXT, `srLineItemHref` TEXT, `srClazzUid` INTEGER NOT NULL, `srAssignmentUid` INTEGER NOT NULL, `srStatus` INTEGER NOT NULL, `srMetaData` TEXT, `srStudentPersonUid` INTEGER NOT NULL, `srStudentPersonSourcedId` TEXT, `srStudentGroupId` INTEGER NOT NULL, `srMarkerPersonUid` INTEGER NOT NULL, `srMarkerGroupId` INTEGER NOT NULL, `srScoreStatus` INTEGER NOT NULL, `srScore` REAL NOT NULL, `srScoreDate` INTEGER NOT NULL, `srLastModified` INTEGER NOT NULL, `srComment` TEXT, `srAppId` TEXT, `srDeleted` INTEGER NOT NULL, PRIMARY KEY(`srUid`))",
        "fields": [
          {
            "fieldPath": "srUid",
            "columnName": "srUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srSourcedId",
            "columnName": "srSourcedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srCourseBlockUid",
            "columnName": "srCourseBlockUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srLineItemSourcedId",
            "columnName": "srLineItemSourcedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srLineItemHref",
            "columnName": "srLineItemHref",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srClazzUid",
            "columnName": "srClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srAssignmentUid",
            "columnName": "srAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srStatus",
            "columnName": "srStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srMetaData",
            "columnName": "srMetaData",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srStudentPersonUid",
            "columnName": "srStudentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srStudentPersonSourcedId",
            "columnName": "srStudentPersonSourcedId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srStudentGroupId",
            "columnName": "srStudentGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srMarkerPersonUid",
            "columnName": "srMarkerPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srMarkerGroupId",
            "columnName": "srMarkerGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srScoreStatus",
            "columnName": "srScoreStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srScore",
            "columnName": "srScore",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "srScoreDate",
            "columnName": "srScoreDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srLastModified",
            "columnName": "srLastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "srComment",
            "columnName": "srComment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srAppId",
            "columnName": "srAppId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "srDeleted",
            "columnName": "srDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "srUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryVersion",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cevUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cevContentEntryUid` INTEGER NOT NULL, `cevOpenUri` TEXT, `cevContentType` TEXT, `cevManifestUrl` TEXT, `cevSize` INTEGER NOT NULL, `cevInActive` INTEGER NOT NULL, `cevLastModified` INTEGER NOT NULL, `cevLct` INTEGER NOT NULL, `cevStorageSize` INTEGER NOT NULL DEFAULT 0, `cevOriginalSize` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "cevUid",
            "columnName": "cevUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevContentEntryUid",
            "columnName": "cevContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevOpenUri",
            "columnName": "cevOpenUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cevContentType",
            "columnName": "cevContentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cevManifestUrl",
            "columnName": "cevManifestUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cevSize",
            "columnName": "cevSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevInActive",
            "columnName": "cevInActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevLastModified",
            "columnName": "cevLastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevLct",
            "columnName": "cevLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cevStorageSize",
            "columnName": "cevStorageSize",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cevOriginalSize",
            "columnName": "cevOriginalSize",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cevUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TransferJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `tjType` INTEGER NOT NULL, `tjStatus` INTEGER NOT NULL, `tjName` TEXT, `tjUuid` TEXT, `tjTableId` INTEGER NOT NULL DEFAULT 0, `tjEntityUid` INTEGER NOT NULL DEFAULT 0, `tjTimeCreated` INTEGER NOT NULL DEFAULT 0, `tjCreationType` INTEGER NOT NULL DEFAULT 0, `tjOiUid` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "tjUid",
            "columnName": "tjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjType",
            "columnName": "tjType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjStatus",
            "columnName": "tjStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjName",
            "columnName": "tjName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tjUuid",
            "columnName": "tjUuid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tjTableId",
            "columnName": "tjTableId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjEntityUid",
            "columnName": "tjEntityUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjTimeCreated",
            "columnName": "tjTimeCreated",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjCreationType",
            "columnName": "tjCreationType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjOiUid",
            "columnName": "tjOiUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "tjUid"
          ]
        },
        "indices": [
          {
            "name": "TransferJob_idx_tjTableId_EntityUid",
            "unique": false,
            "columnNames": [
              "tjTableId",
              "tjEntityUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `TransferJob_idx_tjTableId_EntityUid` ON `${TABLE_NAME}` (`tjTableId`, `tjEntityUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "TransferJobItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tjiUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `tjiTjUid` INTEGER NOT NULL, `tjTotalSize` INTEGER NOT NULL, `tjTransferred` INTEGER NOT NULL, `tjAttemptCount` INTEGER NOT NULL, `tjiSrc` TEXT, `tjiDest` TEXT, `tjiType` INTEGER NOT NULL, `tjiStatus` INTEGER NOT NULL, `tjiTableId` INTEGER NOT NULL, `tjiEntityUid` INTEGER NOT NULL, `tjiEntityEtag` INTEGER NOT NULL DEFAULT 0, `tjiLockIdToRelease` INTEGER NOT NULL DEFAULT 0, `tjiPartialTmpFile` TEXT)",
        "fields": [
          {
            "fieldPath": "tjiUid",
            "columnName": "tjiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiTjUid",
            "columnName": "tjiTjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjTotalSize",
            "columnName": "tjTotalSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjTransferred",
            "columnName": "tjTransferred",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjAttemptCount",
            "columnName": "tjAttemptCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiSrc",
            "columnName": "tjiSrc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tjiDest",
            "columnName": "tjiDest",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tjiType",
            "columnName": "tjiType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiStatus",
            "columnName": "tjiStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiTableId",
            "columnName": "tjiTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiEntityUid",
            "columnName": "tjiEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjiEntityEtag",
            "columnName": "tjiEntityEtag",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjiLockIdToRelease",
            "columnName": "tjiLockIdToRelease",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "tjiPartialTmpFile",
            "columnName": "tjiPartialTmpFile",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "tjiUid"
          ]
        },
        "indices": [
          {
            "name": "tji_table_entity_etag",
            "unique": false,
            "columnNames": [
              "tjiTableId",
              "tjiEntityUid",
              "tjiEntityEtag"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `tji_table_entity_etag` ON `${TABLE_NAME}` (`tjiTableId`, `tjiEntityUid`, `tjiEntityEtag`)"
          },
          {
            "name": "transferjob_tjuid",
            "unique": false,
            "columnNames": [
              "tjiTjUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `transferjob_tjuid` ON `${TABLE_NAME}` (`tjiTjUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CacheLockJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cljId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cljTableId` INTEGER NOT NULL, `cljEntityUid` INTEGER NOT NULL, `cljUrl` TEXT, `cljLockId` INTEGER NOT NULL, `cljStatus` INTEGER NOT NULL, `cljType` INTEGER NOT NULL, `cljOiUid` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "cljId",
            "columnName": "cljId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljTableId",
            "columnName": "cljTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljEntityUid",
            "columnName": "cljEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljUrl",
            "columnName": "cljUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cljLockId",
            "columnName": "cljLockId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljStatus",
            "columnName": "cljStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljType",
            "columnName": "cljType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cljOiUid",
            "columnName": "cljOiUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cljId"
          ]
        },
        "indices": [
          {
            "name": "idx_clj_table_entity_url",
            "unique": false,
            "columnNames": [
              "cljTableId",
              "cljEntityUid",
              "cljUrl"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_clj_table_entity_url` ON `${TABLE_NAME}` (`cljTableId`, `cljEntityUid`, `cljUrl`)"
          },
          {
            "name": "idx_clj_offline_item_uid",
            "unique": false,
            "columnNames": [
              "cljOiUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_clj_offline_item_uid` ON `${TABLE_NAME}` (`cljOiUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`oiUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `oiNodeId` INTEGER NOT NULL, `oiClazzUid` INTEGER NOT NULL, `oiCourseBlockUid` INTEGER NOT NULL, `oiContentEntryUid` INTEGER NOT NULL, `oiActive` INTEGER NOT NULL, `oiLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "oiUid",
            "columnName": "oiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiNodeId",
            "columnName": "oiNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiClazzUid",
            "columnName": "oiClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiCourseBlockUid",
            "columnName": "oiCourseBlockUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiContentEntryUid",
            "columnName": "oiContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiActive",
            "columnName": "oiActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiLct",
            "columnName": "oiLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "oiUid"
          ]
        },
        "indices": [
          {
            "name": "offline_item_node_content_entry",
            "unique": false,
            "columnNames": [
              "oiNodeId",
              "oiContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `offline_item_node_content_entry` ON `${TABLE_NAME}` (`oiNodeId`, `oiContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineItemPendingTransferJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`oiptjId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `oiptjOiUid` INTEGER NOT NULL, `oiptjTableId` INTEGER NOT NULL, `oiptjEntityUid` INTEGER NOT NULL, `oiptjUrl` TEXT, `oiptjType` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "oiptjId",
            "columnName": "oiptjId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiptjOiUid",
            "columnName": "oiptjOiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiptjTableId",
            "columnName": "oiptjTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiptjEntityUid",
            "columnName": "oiptjEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oiptjUrl",
            "columnName": "oiptjUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "oiptjType",
            "columnName": "oiptjType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "oiptjId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DeletedItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`delItemUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `delItemName` TEXT, `delItemIconUri` TEXT, `delItemLastModTime` INTEGER NOT NULL, `delItemTimeDeleted` INTEGER NOT NULL, `delItemEntityTable` INTEGER NOT NULL, `delItemEntityUid` INTEGER NOT NULL, `delItemDeletedByPersonUid` INTEGER NOT NULL, `delItemStatus` INTEGER NOT NULL, `delItemIsFolder` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "delItemUid",
            "columnName": "delItemUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemName",
            "columnName": "delItemName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "delItemIconUri",
            "columnName": "delItemIconUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "delItemLastModTime",
            "columnName": "delItemLastModTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemTimeDeleted",
            "columnName": "delItemTimeDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemEntityTable",
            "columnName": "delItemEntityTable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemEntityUid",
            "columnName": "delItemEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemDeletedByPersonUid",
            "columnName": "delItemDeletedByPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemStatus",
            "columnName": "delItemStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delItemIsFolder",
            "columnName": "delItemIsFolder",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "delItemUid"
          ]
        },
        "indices": [
          {
            "name": "delitem_idx_status_time",
            "unique": false,
            "columnNames": [
              "delItemStatus",
              "delItemTimeDeleted"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `delitem_idx_status_time` ON `${TABLE_NAME}` (`delItemStatus`, `delItemTimeDeleted`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "EnrolmentRequest",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`erUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `erClazzUid` INTEGER NOT NULL, `erClazzName` TEXT, `erPersonUid` INTEGER NOT NULL, `erPersonFullname` TEXT, `erPersonPictureUri` TEXT, `erPersonUsername` TEXT, `erRole` INTEGER NOT NULL, `erRequestTime` INTEGER NOT NULL, `erStatus` INTEGER NOT NULL, `erStatusSetByPersonUid` INTEGER NOT NULL, `erDeleted` INTEGER NOT NULL, `erStatusSetAuth` TEXT, `erLastModified` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "erUid",
            "columnName": "erUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erClazzUid",
            "columnName": "erClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erClazzName",
            "columnName": "erClazzName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "erPersonUid",
            "columnName": "erPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erPersonFullname",
            "columnName": "erPersonFullname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "erPersonPictureUri",
            "columnName": "erPersonPictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "erPersonUsername",
            "columnName": "erPersonUsername",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "erRole",
            "columnName": "erRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erRequestTime",
            "columnName": "erRequestTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erStatus",
            "columnName": "erStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erStatusSetByPersonUid",
            "columnName": "erStatusSetByPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erDeleted",
            "columnName": "erDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erStatusSetAuth",
            "columnName": "erStatusSetAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "erLastModified",
            "columnName": "erLastModified",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "erUid"
          ]
        },
        "indices": [
          {
            "name": "idx_enrolmentrequest_by_clazz",
            "unique": false,
            "columnNames": [
              "erClazzUid",
              "erStatus"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_enrolmentrequest_by_clazz` ON `${TABLE_NAME}` (`erClazzUid`, `erStatus`)"
          },
          {
            "name": "idx_enrolmentrequest_by_person",
            "unique": false,
            "columnNames": [
              "erPersonUid",
              "erStatus"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_enrolmentrequest_by_person` ON `${TABLE_NAME}` (`erPersonUid`, `erStatus`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CoursePermission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cpUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cpLastModified` INTEGER NOT NULL, `cpClazzUid` INTEGER NOT NULL, `cpToEnrolmentRole` INTEGER NOT NULL, `cpToPersonUid` INTEGER NOT NULL, `cpToGroupUid` INTEGER NOT NULL, `cpPermissionsFlag` INTEGER NOT NULL, `cpIsDeleted` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cpUid",
            "columnName": "cpUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpLastModified",
            "columnName": "cpLastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpClazzUid",
            "columnName": "cpClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpToEnrolmentRole",
            "columnName": "cpToEnrolmentRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpToPersonUid",
            "columnName": "cpToPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpToGroupUid",
            "columnName": "cpToGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpPermissionsFlag",
            "columnName": "cpPermissionsFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpIsDeleted",
            "columnName": "cpIsDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cpUid"
          ]
        },
        "indices": [
          {
            "name": "idx_coursepermission_clazzuid",
            "unique": false,
            "columnNames": [
              "cpClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_coursepermission_clazzuid` ON `${TABLE_NAME}` (`cpClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SystemPermission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`spUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `spToPersonUid` INTEGER NOT NULL, `spToGroupUid` INTEGER NOT NULL, `spPermissionsFlag` INTEGER NOT NULL, `spLastModified` INTEGER NOT NULL, `spIsDeleted` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "spUid",
            "columnName": "spUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spToPersonUid",
            "columnName": "spToPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spToGroupUid",
            "columnName": "spToGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spPermissionsFlag",
            "columnName": "spPermissionsFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spLastModified",
            "columnName": "spLastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spIsDeleted",
            "columnName": "spIsDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "spUid"
          ]
        },
        "indices": [
          {
            "name": "idx_systempermission_personuid",
            "unique": false,
            "columnNames": [
              "spToPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_systempermission_personuid` ON `${TABLE_NAME}` (`spToPersonUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseBlockPicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cbpUid` INTEGER NOT NULL, `cbpLct` INTEGER NOT NULL, `cbpPictureUri` TEXT, `cbpThumbnailUri` TEXT, PRIMARY KEY(`cbpUid`))",
        "fields": [
          {
            "fieldPath": "cbpUid",
            "columnName": "cbpUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbpLct",
            "columnName": "cbpLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbpPictureUri",
            "columnName": "cbpPictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbpThumbnailUri",
            "columnName": "cbpThumbnailUri",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "cbpUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryPicture2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cepUid` INTEGER NOT NULL, `cepLct` INTEGER NOT NULL, `cepPictureUri` TEXT, `cepThumbnailUri` TEXT, PRIMARY KEY(`cepUid`))",
        "fields": [
          {
            "fieldPath": "cepUid",
            "columnName": "cepUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepLct",
            "columnName": "cepLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepPictureUri",
            "columnName": "cepPictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cepThumbnailUri",
            "columnName": "cepThumbnailUri",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "cepUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TransferJobError",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tjeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `tjeTjUid` INTEGER NOT NULL, `tjeTime` INTEGER NOT NULL, `tjeErrorStr` TEXT, `tjeDismissed` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "tjeId",
            "columnName": "tjeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjeTjUid",
            "columnName": "tjeTjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjeTime",
            "columnName": "tjeTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tjeErrorStr",
            "columnName": "tjeErrorStr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tjeDismissed",
            "columnName": "tjeDismissed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "tjeId"
          ]
        },
        "indices": [
          {
            "name": "idx_transferjoberror_tjetjuid",
            "unique": false,
            "columnNames": [
              "tjeTjUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_transferjoberror_tjetjuid` ON `${TABLE_NAME}` (`tjeTjUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "VerbLangMapEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`vlmeVerbUid` INTEGER NOT NULL, `vlmeLangHash` INTEGER NOT NULL, `vlmeLangCode` TEXT, `vlmeEntryString` TEXT, `vlmeLastModified` INTEGER NOT NULL, PRIMARY KEY(`vlmeVerbUid`, `vlmeLangHash`))",
        "fields": [
          {
            "fieldPath": "vlmeVerbUid",
            "columnName": "vlmeVerbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vlmeLangHash",
            "columnName": "vlmeLangHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vlmeLangCode",
            "columnName": "vlmeLangCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "vlmeEntryString",
            "columnName": "vlmeEntryString",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "vlmeLastModified",
            "columnName": "vlmeLastModified",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "vlmeVerbUid",
            "vlmeLangHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GroupMemberActorJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`gmajGroupActorUid` INTEGER NOT NULL, `gmajMemberActorUid` INTEGER NOT NULL, `gmajLastMod` INTEGER NOT NULL, PRIMARY KEY(`gmajGroupActorUid`, `gmajMemberActorUid`))",
        "fields": [
          {
            "fieldPath": "gmajGroupActorUid",
            "columnName": "gmajGroupActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gmajMemberActorUid",
            "columnName": "gmajMemberActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gmajLastMod",
            "columnName": "gmajLastMod",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "gmajGroupActorUid",
            "gmajMemberActorUid"
          ]
        },
        "indices": [
          {
            "name": "idx_groupmemberactorjoin_gmajgroupactoruid",
            "unique": false,
            "columnNames": [
              "gmajGroupActorUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_groupmemberactorjoin_gmajgroupactoruid` ON `${TABLE_NAME}` (`gmajGroupActorUid`)"
          },
          {
            "name": "idx_groupmemberactorjoin_gmajmemberactoruid",
            "unique": false,
            "columnNames": [
              "gmajMemberActorUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_groupmemberactorjoin_gmajmemberactoruid` ON `${TABLE_NAME}` (`gmajMemberActorUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ActivityLangMapEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`almeActivityUid` INTEGER NOT NULL, `almeHash` INTEGER NOT NULL, `almeLangCode` TEXT, `almeValue` TEXT, `almeAieHash` INTEGER NOT NULL, `almeLastMod` INTEGER NOT NULL, PRIMARY KEY(`almeActivityUid`, `almeHash`))",
        "fields": [
          {
            "fieldPath": "almeActivityUid",
            "columnName": "almeActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "almeHash",
            "columnName": "almeHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "almeLangCode",
            "columnName": "almeLangCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "almeValue",
            "columnName": "almeValue",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "almeAieHash",
            "columnName": "almeAieHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "almeLastMod",
            "columnName": "almeLastMod",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "almeActivityUid",
            "almeHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ActivityExtensionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`aeeActivityUid` INTEGER NOT NULL, `aeeKeyHash` INTEGER NOT NULL, `aeeKey` TEXT, `aeeJson` TEXT, `aeeLastMod` INTEGER NOT NULL, `aeeIsDeleted` INTEGER NOT NULL, PRIMARY KEY(`aeeActivityUid`, `aeeKeyHash`))",
        "fields": [
          {
            "fieldPath": "aeeActivityUid",
            "columnName": "aeeActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aeeKeyHash",
            "columnName": "aeeKeyHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aeeKey",
            "columnName": "aeeKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "aeeJson",
            "columnName": "aeeJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "aeeLastMod",
            "columnName": "aeeLastMod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aeeIsDeleted",
            "columnName": "aeeIsDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "aeeActivityUid",
            "aeeKeyHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StatementContextActivityJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scajFromStatementIdHi` INTEGER NOT NULL, `scajFromStatementIdLo` INTEGER NOT NULL, `scajToHash` INTEGER NOT NULL, `scajContextType` INTEGER NOT NULL, `scajToActivityUid` INTEGER NOT NULL, `scajToActivityId` TEXT, `scajEtag` INTEGER NOT NULL, PRIMARY KEY(`scajFromStatementIdHi`, `scajFromStatementIdLo`, `scajToHash`))",
        "fields": [
          {
            "fieldPath": "scajFromStatementIdHi",
            "columnName": "scajFromStatementIdHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scajFromStatementIdLo",
            "columnName": "scajFromStatementIdLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scajToHash",
            "columnName": "scajToHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scajContextType",
            "columnName": "scajContextType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scajToActivityUid",
            "columnName": "scajToActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scajToActivityId",
            "columnName": "scajToActivityId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scajEtag",
            "columnName": "scajEtag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "scajFromStatementIdHi",
            "scajFromStatementIdLo",
            "scajToHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "XapiSessionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`xseUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `xseLastMod` INTEGER NOT NULL, `xseRegistrationHi` INTEGER NOT NULL, `xseRegistrationLo` INTEGER NOT NULL, `xseUsUid` INTEGER NOT NULL, `xseAccountPersonUid` INTEGER NOT NULL, `xseActorUid` INTEGER NOT NULL, `xseAccountUsername` TEXT NOT NULL, `xseClazzUid` INTEGER NOT NULL, `xseCbUid` INTEGER NOT NULL, `xseContentEntryUid` INTEGER NOT NULL, `xseRootActivityId` TEXT NOT NULL, `xseRootActivityUid` INTEGER NOT NULL, `xseStartTime` INTEGER NOT NULL, `xseExpireTime` INTEGER NOT NULL, `xseAuth` TEXT, `xseCompleted` INTEGER NOT NULL DEFAULT 0, `knownActorUidToPersonUids` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "xseUid",
            "columnName": "xseUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseLastMod",
            "columnName": "xseLastMod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseRegistrationHi",
            "columnName": "xseRegistrationHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseRegistrationLo",
            "columnName": "xseRegistrationLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseUsUid",
            "columnName": "xseUsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseAccountPersonUid",
            "columnName": "xseAccountPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseActorUid",
            "columnName": "xseActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseAccountUsername",
            "columnName": "xseAccountUsername",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "xseClazzUid",
            "columnName": "xseClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseCbUid",
            "columnName": "xseCbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseContentEntryUid",
            "columnName": "xseContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseRootActivityId",
            "columnName": "xseRootActivityId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "xseRootActivityUid",
            "columnName": "xseRootActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseStartTime",
            "columnName": "xseStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseExpireTime",
            "columnName": "xseExpireTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xseAuth",
            "columnName": "xseAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "xseCompleted",
            "columnName": "xseCompleted",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "knownActorUidToPersonUids",
            "columnName": "knownActorUidToPersonUids",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "xseUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StatementEntityJson",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`stmtJsonIdHi` INTEGER NOT NULL, `stmtJsonIdLo` INTEGER NOT NULL, `stmtEtag` INTEGER NOT NULL, `fullStatement` TEXT, PRIMARY KEY(`stmtJsonIdHi`, `stmtJsonIdLo`))",
        "fields": [
          {
            "fieldPath": "stmtJsonIdHi",
            "columnName": "stmtJsonIdHi",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stmtJsonIdLo",
            "columnName": "stmtJsonIdLo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stmtEtag",
            "columnName": "stmtEtag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fullStatement",
            "columnName": "fullStatement",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "stmtJsonIdHi",
            "stmtJsonIdLo"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonPasskey",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personPasskeyUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ppPersonUid` INTEGER NOT NULL, `ppAttestationObj` TEXT, `ppClientDataJson` TEXT, `ppOriginString` TEXT, `ppRpid` TEXT, `ppId` TEXT, `ppChallengeString` TEXT, `ppPublicKey` TEXT, `isRevoked` INTEGER NOT NULL, `ppPasskeyLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "personPasskeyUid",
            "columnName": "personPasskeyUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppPersonUid",
            "columnName": "ppPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppAttestationObj",
            "columnName": "ppAttestationObj",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppClientDataJson",
            "columnName": "ppClientDataJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppOriginString",
            "columnName": "ppOriginString",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppRpid",
            "columnName": "ppRpid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppId",
            "columnName": "ppId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppChallengeString",
            "columnName": "ppChallengeString",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppPublicKey",
            "columnName": "ppPublicKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRevoked",
            "columnName": "isRevoked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppPasskeyLct",
            "columnName": "ppPasskeyLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "personPasskeyUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`seActorUid` INTEGER NOT NULL, `seHash` INTEGER NOT NULL, `seActivityUid` INTEGER NOT NULL, `seStateId` TEXT NOT NULL, `seLastMod` INTEGER NOT NULL, `seTimeStored` INTEGER NOT NULL, `seContentType` TEXT NOT NULL, `seCompressed` INTEGER NOT NULL, `seContent` TEXT NOT NULL, `seDeleted` INTEGER NOT NULL, `seRegistrationHi` INTEGER, `seRegistrationLo` INTEGER, `seH5PPreloaded` INTEGER NOT NULL, `seH5PSubContentId` TEXT, PRIMARY KEY(`seActorUid`, `seHash`))",
        "fields": [
          {
            "fieldPath": "seActorUid",
            "columnName": "seActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seHash",
            "columnName": "seHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seActivityUid",
            "columnName": "seActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seStateId",
            "columnName": "seStateId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "seLastMod",
            "columnName": "seLastMod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seTimeStored",
            "columnName": "seTimeStored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seContentType",
            "columnName": "seContentType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "seCompressed",
            "columnName": "seCompressed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seContent",
            "columnName": "seContent",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "seDeleted",
            "columnName": "seDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seRegistrationHi",
            "columnName": "seRegistrationHi",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "seRegistrationLo",
            "columnName": "seRegistrationLo",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "seH5PPreloaded",
            "columnName": "seH5PPreloaded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seH5PSubContentId",
            "columnName": "seH5PSubContentId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "seActorUid",
            "seHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StateDeleteCommand",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sdcActorUid` INTEGER NOT NULL, `sdcHash` INTEGER NOT NULL, `sdcActivityUid` INTEGER NOT NULL, `sdcStateId` TEXT, `sdcLastMod` INTEGER NOT NULL, `sdcRegistrationHi` INTEGER, `sdcRegistrationLo` INTEGER, PRIMARY KEY(`sdcActorUid`, `sdcHash`))",
        "fields": [
          {
            "fieldPath": "sdcActorUid",
            "columnName": "sdcActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sdcHash",
            "columnName": "sdcHash",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sdcActivityUid",
            "columnName": "sdcActivityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sdcStateId",
            "columnName": "sdcStateId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sdcLastMod",
            "columnName": "sdcLastMod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sdcRegistrationHi",
            "columnName": "sdcRegistrationHi",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sdcRegistrationLo",
            "columnName": "sdcRegistrationLo",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "sdcActorUid",
            "sdcHash"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OutgoingReplication",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `destNodeId` INTEGER NOT NULL, `orTableId` INTEGER NOT NULL, `orPk1` INTEGER NOT NULL, `orPk2` INTEGER NOT NULL DEFAULT 0, `orPk3` INTEGER NOT NULL DEFAULT 0, `orPk4` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "orUid",
            "columnName": "orUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "destNodeId",
            "columnName": "destNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orTableId",
            "columnName": "orTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orPk1",
            "columnName": "orPk1",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orPk2",
            "columnName": "orPk2",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "orPk3",
            "columnName": "orPk3",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "orPk4",
            "columnName": "orPk4",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "orUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ReplicationOperation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`repOpRemoteNodeId` INTEGER NOT NULL, `repOpTableId` INTEGER NOT NULL, `repOpStatus` INTEGER NOT NULL, PRIMARY KEY(`repOpRemoteNodeId`, `repOpTableId`))",
        "fields": [
          {
            "fieldPath": "repOpRemoteNodeId",
            "columnName": "repOpRemoteNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "repOpTableId",
            "columnName": "repOpTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "repOpStatus",
            "columnName": "repOpStatus",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "repOpRemoteNodeId",
            "repOpTableId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PendingRepositorySession",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`rsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `remoteNodeId` INTEGER NOT NULL, `endpointUrl` TEXT)",
        "fields": [
          {
            "fieldPath": "rsUid",
            "columnName": "rsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteNodeId",
            "columnName": "remoteNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endpointUrl",
            "columnName": "endpointUrl",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "rsUid"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DoorNode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`nodeId` INTEGER NOT NULL, `auth` TEXT, `rel` INTEGER NOT NULL DEFAULT 2, PRIMARY KEY(`nodeId`))",
        "fields": [
          {
            "fieldPath": "nodeId",
            "columnName": "nodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auth",
            "columnName": "auth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rel",
            "columnName": "rel",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "2"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "nodeId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '4e97383b879db14ad7112516d979e38c')"
    ]
  }
}