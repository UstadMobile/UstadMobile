package com.ustadmobile.core.db

import com.ustadmobile.door.DoorDbType
import com.ustadmobile.door.DoorSqlDatabase
import com.ustadmobile.door.ext.dbType
import com.ustadmobile.door.migration.DoorMigrationSync

private fun DoorSqlDatabase.dropOldSqliteTriggers() {
    //Drop old triggers
    val db = this
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_14")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_14")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_14")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_14")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_15")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_15")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_15")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_15")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_21")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_21")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_21")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_21")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_17")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_17")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_17")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_17")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_28")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_28")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_28")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_28")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_99")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_99")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_99")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_99")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_173")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_173")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_173")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_173")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_53")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_53")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_53")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_53")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_56")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_56")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_56")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_56")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_57")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_57")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_57")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_57")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_55")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_55")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_55")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_55")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_9")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_9")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_9")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_9")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_6")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_6")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_6")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_6")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_65")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_65")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_65")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_65")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_410")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_410")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_410")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_410")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_178")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_178")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_178")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_178")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_42")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_42")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_42")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_42")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_3")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_3")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_3")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_3")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_7")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_7")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_7")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_7")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_8")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_8")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_8")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_8")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_2")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_2")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_2")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_2")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_1")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_1")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_1")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_1")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_13")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_13")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_13")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_13")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_10")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_10")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_10")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_10")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_45")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_45")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_45")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_45")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_47")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_47")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_47")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_47")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_43")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_43")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_43")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_43")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_44")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_44")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_44")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_44")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_50")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_50")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_50")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_50")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_51")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_51")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_51")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_51")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_62")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_62")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_62")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_62")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_64")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_64")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_64")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_64")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_60")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_60")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_60")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_60")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_66")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_66")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_66")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_66")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_68")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_68")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_68")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_68")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_70")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_70")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_70")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_70")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_72")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_72")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_72")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_72")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_74")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_74")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_74")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_74")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_164")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_164")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_164")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_164")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_200")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_200")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_200")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_200")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_208")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_208")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_208")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_208")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_101")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_101")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_101")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_101")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_189")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_189")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_189")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_189")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_301")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_301")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_301")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_301")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_300")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_300")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_300")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_300")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_302")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_302")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_302")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_302")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_272")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_272")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_272")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_272")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_134")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_134")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_134")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_134")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_512")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_512")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_512")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_512")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_48")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_48")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_48")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_48")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_419")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_419")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_419")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_419")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_520")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_520")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_520")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_520")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_521")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_521")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_521")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_521")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_678")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_678")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_678")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_678")
    db.execSQL("DROP TRIGGER IF EXISTS INS_LOC_679")
    db.execSQL("DROP TRIGGER IF EXISTS INS_PRI_679")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_LOC_679")
    db.execSQL("DROP TRIGGER IF EXISTS UPD_PRI_679")
}

private fun DoorSqlDatabase.dropOldPostgresTriggers() {
    /*
    select trigger_name, event_object_table, 'db.execSQL("DROP TRIGGER IF EXISTS ' || trigger_name || ' ON ' || event_object_table || '")'
    from information_schema.triggers
    WHERE trigger_name LIKE 'inc%';
     */
    val db = this
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_15_trig ON clazzlogattendancerecord")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_15_trig ON clazzlogattendancerecord")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_21_trig ON schedule")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_21_trig ON schedule")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_17_trig ON daterange")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_17_trig ON daterange")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_28_trig ON holidaycalendar")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_28_trig ON holidaycalendar")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_99_trig ON holiday")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_99_trig ON holiday")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_173_trig ON scheduledcheck")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_173_trig ON scheduledcheck")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_53_trig ON auditlog")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_53_trig ON auditlog")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_56_trig ON customfield")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_56_trig ON customfield")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_57_trig ON customfieldvalue")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_57_trig ON customfieldvalue")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_55_trig ON customfieldvalueoption")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_55_trig ON customfieldvalueoption")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_9_trig ON person")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_9_trig ON person")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_6_trig ON clazz")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_6_trig ON clazz")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_65_trig ON clazzenrolment")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_65_trig ON clazzenrolment")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_410_trig ON leavingreason")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_410_trig ON leavingreason")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_178_trig ON personcustomfieldvalue")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_178_trig ON personcustomfieldvalue")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_42_trig ON contententry")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_42_trig ON contententry")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_3_trig ON contententrycontentcategoryjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_3_trig ON contententrycontentcategoryjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_7_trig ON contententryparentchildjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_7_trig ON contententryparentchildjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_8_trig ON contententryrelatedentryjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_8_trig ON contententryrelatedentryjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_2_trig ON contentcategoryschema")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_2_trig ON contentcategoryschema")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_1_trig ON contentcategory")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_1_trig ON contentcategory")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_13_trig ON language")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_13_trig ON language")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_10_trig ON languagevariant")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_10_trig ON languagevariant")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_45_trig ON role")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_45_trig ON role")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_47_trig ON entityrole")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_47_trig ON entityrole")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_43_trig ON persongroup")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_43_trig ON persongroup")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_44_trig ON persongroupmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_44_trig ON persongroupmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_50_trig ON personpicture")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_50_trig ON personpicture")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_51_trig ON container")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_51_trig ON container")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_62_trig ON verbentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_62_trig ON verbentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_64_trig ON xobjectentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_64_trig ON xobjectentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_60_trig ON statemententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_60_trig ON statemententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_66_trig ON contextxobjectstatementjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_66_trig ON contextxobjectstatementjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_68_trig ON agententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_68_trig ON agententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_70_trig ON stateentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_70_trig ON stateentity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_72_trig ON statecontententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_72_trig ON statecontententity")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_74_trig ON xlangmapentry")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_74_trig ON xlangmapentry")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_164_trig ON school")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_164_trig ON school")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_200_trig ON schoolmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_200_trig ON schoolmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_208_trig ON comments")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_208_trig ON comments")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_101_trig ON report")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_101_trig ON report")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_189_trig ON site")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_189_trig ON site")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_301_trig ON learnergroup")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_301_trig ON learnergroup")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_300_trig ON learnergroupmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_300_trig ON learnergroupmember")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_302_trig ON grouplearningsession")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_302_trig ON grouplearningsession")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_272_trig ON siteterms")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_272_trig ON siteterms")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_134_trig ON clazzcontentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_134_trig ON clazzcontentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_512_trig ON personparentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_512_trig ON personparentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_48_trig ON scopedgrant")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_48_trig ON scopedgrant")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_419_trig ON errorreport")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_419_trig ON errorreport")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_520_trig ON clazzassignment")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_520_trig ON clazzassignment")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_521_trig ON clazzassignmentcontentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_521_trig ON clazzassignmentcontentjoin")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_678_trig ON personauth2")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_678_trig ON personauth2")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_679_trig ON usersession")
    db.execSQL("DROP TRIGGER IF EXISTS inccsn_679_trig ON usersession")
}

private fun DoorSqlDatabase.dropOldPostgresFunctions() {
    /*
    select routine_name, 'execSQL("DROP FUNCTION IF EXISTS ' || routine_name || '")'
     from information_schema.routines where routine_name like 'inccsn%'
     */
    execSQL("DROP FUNCTION IF EXISTS inccsn_101_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_10_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_134_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_13_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_14_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_15_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_164_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_173_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_178_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_17_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_189_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_1_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_200_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_208_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_21_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_272_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_28_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_2_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_300_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_301_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_302_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_3_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_410_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_419_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_42_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_43_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_44_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_45_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_47_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_48_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_50_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_512_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_51_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_520_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_521_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_53_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_55_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_56_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_57_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_60_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_62_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_64_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_65_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_66_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_678_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_679_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_68_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_6_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_70_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_72_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_74_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_7_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_8_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_99_fn")
    execSQL("DROP FUNCTION IF EXISTS inccsn_9_fn")

}

val UmAppDatabaseReplicationMigration89_90  = DoorMigrationSync(89, 90){ db ->
    db.execSQL("ALTER TABLE DoorNode ADD COLUMN rel INTEGER NOT NULL DEFAULT 2")
    db.execSQL("ALTER TABLE Person ADD COLUMN personType INTEGER NOT NULL DEFAULT 0")
    db.execSQL("DROP TABLE ChangeLog")
    db.execSQL("DROP TABLE SyncResult")
    db.execSQL("DROP TABLE TableSyncStatus")

    //Drop old TRK
    db.execSQL("DROP TABLE IF EXISTS ClazzLog_trk")
    db.execSQL("DROP TABLE IF EXISTS ClazzLogAttendanceRecord_trk")
    db.execSQL("DROP TABLE IF EXISTS Schedule_trk")
    db.execSQL("DROP TABLE IF EXISTS DateRange_trk")
    db.execSQL("DROP TABLE IF EXISTS HolidayCalendar_trk")
    db.execSQL("DROP TABLE IF EXISTS Holiday_trk")
    db.execSQL("DROP TABLE IF EXISTS ScheduledCheck_trk")
    db.execSQL("DROP TABLE IF EXISTS AuditLog_trk")
    db.execSQL("DROP TABLE IF EXISTS CustomField_trk")
    db.execSQL("DROP TABLE IF EXISTS CustomFieldValue_trk")
    db.execSQL("DROP TABLE IF EXISTS CustomFieldValueOption_trk")
    db.execSQL("DROP TABLE IF EXISTS Person_trk")
    db.execSQL("DROP TABLE IF EXISTS Clazz_trk")
    db.execSQL("DROP TABLE IF EXISTS ClazzEnrolment_trk")
    db.execSQL("DROP TABLE IF EXISTS LeavingReason_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonCustomFieldValue_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentEntry_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentEntryContentCategoryJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentEntryParentChildJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentEntryRelatedEntryJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentCategorySchema_trk")
    db.execSQL("DROP TABLE IF EXISTS ContentCategory_trk")
    db.execSQL("DROP TABLE IF EXISTS Language_trk")
    db.execSQL("DROP TABLE IF EXISTS LanguageVariant_trk")
    db.execSQL("DROP TABLE IF EXISTS Role_trk")
    db.execSQL("DROP TABLE IF EXISTS EntityRole_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonGroup_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonGroupMember_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonPicture_trk")
    db.execSQL("DROP TABLE IF EXISTS Container_trk")
    db.execSQL("DROP TABLE IF EXISTS VerbEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS XObjectEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS StatementEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS ContextXObjectStatementJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS AgentEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS StateEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS StateContentEntity_trk")
    db.execSQL("DROP TABLE IF EXISTS XLangMapEntry_trk")
    db.execSQL("DROP TABLE IF EXISTS School_trk")
    db.execSQL("DROP TABLE IF EXISTS SchoolMember_trk")
    db.execSQL("DROP TABLE IF EXISTS Comments_trk")
    db.execSQL("DROP TABLE IF EXISTS Report_trk")
    db.execSQL("DROP TABLE IF EXISTS Site_trk")
    db.execSQL("DROP TABLE IF EXISTS LearnerGroup_trk")
    db.execSQL("DROP TABLE IF EXISTS LearnerGroupMember_trk")
    db.execSQL("DROP TABLE IF EXISTS GroupLearningSession_trk")
    db.execSQL("DROP TABLE IF EXISTS SiteTerms_trk")
    db.execSQL("DROP TABLE IF EXISTS ClazzContentJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonParentJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS ScopedGrant_trk")
    db.execSQL("DROP TABLE IF EXISTS ErrorReport_trk")
    db.execSQL("DROP TABLE IF EXISTS ClazzAssignment_trk")
    db.execSQL("DROP TABLE IF EXISTS ClazzAssignmentContentJoin_trk")
    db.execSQL("DROP TABLE IF EXISTS PersonAuth2_trk")
    db.execSQL("DROP TABLE IF EXISTS UserSession_trk")




    if(db.dbType() == DoorDbType.SQLITE) {
        db.dropOldSqliteTriggers()

        //Create Replication Status
        db.execSQL( "CREATE TABLE IF NOT EXISTS ReplicationStatus (  tableId  INTEGER  NOT NULL , priority  INTEGER  NOT NULL , nodeId  INTEGER  NOT NULL , lastRemoteChangeTime  INTEGER  NOT NULL , lastFetchReplicationCompleteTime  INTEGER  NOT NULL , lastLocalChangeTime  INTEGER  NOT NULL , lastSendReplicationCompleteTime  INTEGER  NOT NULL , repStatusId  INTEGER  PRIMARY KEY  AUTOINCREMENT  NOT NULL )")
        db.execSQL("CREATE UNIQUE INDEX table_node_idx ON ReplicationStatus (tableId, nodeId)")

        //Create new changelog table
        db.execSQL("CREATE TABLE IF NOT EXISTS ChangeLog (  chTableId  INTEGER  NOT NULL , chEntityPk  INTEGER  NOT NULL , chType  INTEGER  NOT NULL , PRIMARY KEY (chTableId, chEntityPk) )")

        //trackers (temp)
        db.execSQL("CREATE TABLE IF NOT EXISTS UserSessionTrkr (  usForeignKey  INTEGER  NOT NULL , usVersionId  INTEGER  NOT NULL , usDestination  INTEGER  NOT NULL , usTrkrProcessed  INTEGER  NOT NULL  DEFAULT 0 , PRIMARY KEY (usForeignKey, usDestination) )")
        db.execSQL("CREATE TABLE IF NOT EXISTS SiteTrkr (  siteFk  INTEGER  NOT NULL , siteVersionId  INTEGER  NOT NULL , siteDestination  INTEGER  NOT NULL , siteTrkrProcessed  INTEGER  NOT NULL  DEFAULT 0 , PRIMARY KEY (siteFk, siteDestination) )")
        db.execSQL("CREATE TABLE IF NOT EXISTS ScopedGrantTrkr (  sgForeignKey  INTEGER  NOT NULL , sgVersionId  INTEGER  NOT NULL , sgDestination  INTEGER  NOT NULL , sgProcessed  INTEGER  NOT NULL , PRIMARY KEY (sgForeignKey, sgVersionId) )")
        db.execSQL("CREATE INDEX index_ScopedGrantTrkr_sgDestination_sgProcessed_sgForeignKey ON ScopedGrantTrkr (sgDestination, sgProcessed, sgForeignKey)")
        db.execSQL("CREATE TABLE IF NOT EXISTS AgentEntityTrkr (  aeTrkrForeignKey  INTEGER  NOT NULL , aeTrkrLastModified  INTEGER  NOT NULL , aeTrkrDestination  INTEGER  NOT NULL , aeTrkrProcessed  INTEGER  NOT NULL  DEFAULT 0 , PRIMARY KEY (aeTrkrForeignKey, aeTrkrDestination) )")
    }else {
        db.dropOldPostgresTriggers()
        db.dropOldPostgresFunctions()

        db.execSQL("CREATE TABLE IF NOT EXISTS ChangeLog (  chTableId  INTEGER  NOT NULL , chEntityPk  BIGINT  NOT NULL , chType  INTEGER  NOT NULL , PRIMARY KEY (chTableId, chEntityPk) )")

        db.execSQL("CREATE TABLE IF NOT EXISTS ReplicationStatus (  tableId  INTEGER  NOT NULL , priority  INTEGER  NOT NULL , nodeId  BIGINT  NOT NULL , lastRemoteChangeTime  BIGINT  NOT NULL , lastFetchReplicationCompleteTime  BIGINT  NOT NULL , lastLocalChangeTime  BIGINT  NOT NULL , lastSendReplicationCompleteTime  BIGINT  NOT NULL , repStatusId  SERIAL  PRIMARY KEY  NOT NULL )")
        db.execSQL("CREATE UNIQUE INDEX table_node_idx ON ReplicationStatus (tableId, nodeId)")
    }
}