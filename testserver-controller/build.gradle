plugins {
    id 'application'
    id 'kotlin'
    id 'com.github.johnrengelman.shadow' version "$version_shadow"
    id 'org.jetbrains.kotlin.plugin.serialization'
}


mainClassName = 'io.ktor.server.netty.EngineMain'

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":lib-util")
    implementation libs.mockwebserver
    implementation libs.nanohttpd
    implementation libs.json
    implementation libs.commons.cli
    implementation libs.ktor.serialization.kotlinx.json
    implementation libs.ktor.server.netty
    implementation libs.ktor.server.core
    implementation libs.ktor.server.cors
    implementation libs.ktor.server.call.logging
    implementation libs.ktor.server.content.negotiation
    implementation libs.ktor.server.conditional.headers
    implementation libs.logback.classic
    implementation libs.kotlinx.html.jvm
    implementation libs.xmlutil.core.jvm
    implementation libs.xmlutil.serialization.jvm
    implementation libs.kotlinx.serialization
    implementation libs.postgresql
    implementation libs.door.runtime

    testImplementation libs.junit
}

ext.buildConfigProperties = new Properties()
ext.buildConfigProperties.load(new FileInputStream(rootProject.file("buildconfig.default.properties")))
if(rootProject.file("buildconfig.local.properties").exists()) {
    ext.buildConfigProperties.load(new FileInputStream(rootProject.file("buildconfig.local.properties")))
}


sourceCompatibility = "17"
targetCompatibility = "17"
