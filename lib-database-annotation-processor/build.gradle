import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'kotlin'
    id "org.jetbrains.kotlin.kapt"
    id 'maven-publish'
    id 'com.github.psxpaul.execfork' version '0.1.13'
    id 'com.github.johnrengelman.shadow'
}

task fatJar(type: Jar) {
    baseName = 'lib-database-annotation-processor-all-in-one'
    duplicatesStrategy = "exclude"
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    from('src/jvmMain/resources')
    with jar
}

task testJar(type: ShadowJar) {
    classifier = "tests"
    from sourceSets.main.output, sourceSets.test.output
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
    configurations = [project.configurations.runtimeClasspath, project.configurations.testRuntimeClasspath]

    //Without this exclude other INDEX.LIST files will get pulled in and java -jar will not find the class, even when it's in the jar!
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
}

kapt {
    correctErrorTypes = true
    arguments {
        arg("doordb_android_out", "$buildDir/generated/source/doordb-android")
        arg("doordb_source_path", "$projectDir/src/test/kotlin")
        arg("doordb_js_out", rootProject.file("lib-database-annotation-processor-mpp-test/build/generated/sources/doordb-js"))

        //Uncomment lines below to allow debugging on generated source code.
//        arg("doordb_ktor_out", "$buildDir/generated/source/doordb-jvm")
//        arg("doordb_jvm_out", "$buildDir/generated/source/doordb-jvm")
    }
}


task testWebAppRun(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'io.ktor.server.netty.EngineMain'
    args '-port=8089'
}


/*
 * Unfortunately there is a bug on JavaExecFork and Gradle 5.6+
 */
task testWebAppRunFork(type: com.github.psxpaul.task.JavaExecFork) {
    //outputs.upToDateWhen { false }
    classpath = sourceSets.test.runtimeClasspath
    main = 'io.ktor.server.netty.EngineMain'
    args = ['-port=8089']
    waitForPort = 8089
    workingDir = "$projectDir/"
    standardOutput = "$projectDir/build/tmp/daemon.log"
    errorOutput = "$projectDir/build/tmp/daemon-error.log"
}

task startTestWebAppServer(type: Exec) {
    commandLine './testserver.sh', 'start'
}

startTestWebAppServer.dependsOn(testJar)

task stopTestWebAppServer(type: Exec) {
    commandLine './testserver.sh', 'stop'
}


//uncomment the line below to allow debugging on generated source code
//sourceSets.test.java.srcDirs += ["$buildDir/generated/source/doordb-jvm"]

compileKotlin{
    kotlinOptions.jvmTarget = "$version_kotlin_jvmTarget"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "$version_kotlin_jvmTarget"
}


dependencies {
    implementation project(":lib-database-annotations")
    implementation project(":lib-room-annotations")
    implementation project(":lib-door-runtime")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"

    implementation project(':lib-util')


    implementation "com.squareup:kotlinpoet:1.2.0"

    implementation "com.github.jsqlparser:jsqlparser:$version_jsqlparser"
    implementation "org.apache.commons:commons-text:$version_apache_commons_text"

    implementation "com.google.code.gson:gson:$version_gson"

    //SQLite dependencies
    implementation "com.github.h-thurow:simple-jndi:$version_simple_jndi"
    implementation "org.apache.commons:commons-pool2:$version_apache_commons_pool2"
    implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
    implementation "org.postgresql:postgresql:$version_postgres_jdbc"
    implementation "org.apache.commons:commons-dbcp2:$version_apache_commons_dbcp2"

    implementation "io.ktor:ktor-server-netty:$version_ktor"
    implementation "io.ktor:ktor-jackson:$version_ktor"
    implementation "io.ktor:ktor-gson:$version_ktor"


    implementation "io.ktor:ktor-client-okhttp:$version_ktor"
    implementation "io.ktor:ktor-client-gson:$version_ktor"

    implementation "org.nanohttpd:nanohttpd:$version_nanohttpd"
    implementation "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"

    implementation "ch.qos.logback:logback-classic:$version_logback"

    //KaptTest does not
    //kaptTest project(":lib-database-annotation-processor")
    kaptTest files("build/libs/lib-database-annotation-processor.jar")
    testImplementation project(":lib-database-annotation-processor-testdb")
    testImplementation "org.jetbrains.kotlin:kotlin-test:$version_kotlin"
    testImplementation "junit:junit:$version_junit"
    testImplementation "com.squareup.okhttp3:mockwebserver:$version_mockwebserver"
    testImplementation "com.google.code.gson:gson:$version_gson"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}

