{
  "formatVersion": 1,
  "database": {
    "version": 104,
    "identityHash": "5e9d04645b5feb24c488f344eb9e6a4c",
    "entities": [
      {
        "tableName": "NetworkNode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`nodeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `bluetoothMacAddress` TEXT, `ipAddress` TEXT, `wifiDirectMacAddress` TEXT, `deviceWifiDirectName` TEXT, `endpointUrl` TEXT, `lastUpdateTimeStamp` INTEGER NOT NULL, `networkServiceLastUpdated` INTEGER NOT NULL, `nsdServiceName` TEXT, `port` INTEGER NOT NULL, `numFailureCount` INTEGER NOT NULL, `wifiDirectDeviceStatus` INTEGER NOT NULL, `groupSsid` TEXT)",
        "fields": [
          {
            "fieldPath": "nodeId",
            "columnName": "nodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bluetoothMacAddress",
            "columnName": "bluetoothMacAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ipAddress",
            "columnName": "ipAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wifiDirectMacAddress",
            "columnName": "wifiDirectMacAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deviceWifiDirectName",
            "columnName": "deviceWifiDirectName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endpointUrl",
            "columnName": "endpointUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastUpdateTimeStamp",
            "columnName": "lastUpdateTimeStamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "networkServiceLastUpdated",
            "columnName": "networkServiceLastUpdated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nsdServiceName",
            "columnName": "nsdServiceName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "port",
            "columnName": "port",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "numFailureCount",
            "columnName": "numFailureCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wifiDirectDeviceStatus",
            "columnName": "wifiDirectDeviceStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupSsid",
            "columnName": "groupSsid",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "nodeId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_NetworkNode_bluetoothMacAddress",
            "unique": false,
            "columnNames": [
              "bluetoothMacAddress"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NetworkNode_bluetoothMacAddress` ON `${TABLE_NAME}` (`bluetoothMacAddress`)"
          },
          {
            "name": "index_NetworkNode_lastUpdateTimeStamp",
            "unique": false,
            "columnNames": [
              "lastUpdateTimeStamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_NetworkNode_lastUpdateTimeStamp` ON `${TABLE_NAME}` (`lastUpdateTimeStamp`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzLog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzLogUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzLogClazzUid` INTEGER NOT NULL, `logDate` INTEGER NOT NULL, `timeRecorded` INTEGER NOT NULL, `clazzLogDone` INTEGER NOT NULL, `cancellationNote` TEXT, `clazzLogCancelled` INTEGER NOT NULL, `clazzLogNumPresent` INTEGER NOT NULL, `clazzLogNumAbsent` INTEGER NOT NULL, `clazzLogNumPartial` INTEGER NOT NULL, `clazzLogScheduleUid` INTEGER NOT NULL, `clazzLogStatusFlag` INTEGER NOT NULL, `clazzLogMSQN` INTEGER NOT NULL, `clazzLogLCSN` INTEGER NOT NULL, `clazzLogLCB` INTEGER NOT NULL, `clazzLogLastChangedTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzLogUid",
            "columnName": "clazzLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogClazzUid",
            "columnName": "clazzLogClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "logDate",
            "columnName": "logDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timeRecorded",
            "columnName": "timeRecorded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogDone",
            "columnName": "clazzLogDone",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cancellationNote",
            "columnName": "cancellationNote",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzLogCancelled",
            "columnName": "clazzLogCancelled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumPresent",
            "columnName": "clazzLogNumPresent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumAbsent",
            "columnName": "clazzLogNumAbsent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogNumPartial",
            "columnName": "clazzLogNumPartial",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogScheduleUid",
            "columnName": "clazzLogScheduleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogStatusFlag",
            "columnName": "clazzLogStatusFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogMSQN",
            "columnName": "clazzLogMSQN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLCSN",
            "columnName": "clazzLogLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLCB",
            "columnName": "clazzLogLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogLastChangedTime",
            "columnName": "clazzLogLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clazzLogUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzLogAttendanceRecord",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzLogAttendanceRecordUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzLogAttendanceRecordClazzLogUid` INTEGER NOT NULL, `clazzLogAttendanceRecordPersonUid` INTEGER NOT NULL, `attendanceStatus` INTEGER NOT NULL, `clazzLogAttendanceRecordMasterChangeSeqNum` INTEGER NOT NULL, `clazzLogAttendanceRecordLocalChangeSeqNum` INTEGER NOT NULL, `clazzLogAttendanceRecordLastChangedBy` INTEGER NOT NULL, `clazzLogAttendanceRecordLastChangedTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzLogAttendanceRecordUid",
            "columnName": "clazzLogAttendanceRecordUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordClazzLogUid",
            "columnName": "clazzLogAttendanceRecordClazzLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordPersonUid",
            "columnName": "clazzLogAttendanceRecordPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attendanceStatus",
            "columnName": "attendanceStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordMasterChangeSeqNum",
            "columnName": "clazzLogAttendanceRecordMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLocalChangeSeqNum",
            "columnName": "clazzLogAttendanceRecordLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLastChangedBy",
            "columnName": "clazzLogAttendanceRecordLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLogAttendanceRecordLastChangedTime",
            "columnName": "clazzLogAttendanceRecordLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clazzLogAttendanceRecordUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Schedule",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scheduleUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sceduleStartTime` INTEGER NOT NULL, `scheduleEndTime` INTEGER NOT NULL, `scheduleDay` INTEGER NOT NULL, `scheduleMonth` INTEGER NOT NULL, `scheduleFrequency` INTEGER NOT NULL, `umCalendarUid` INTEGER NOT NULL, `scheduleClazzUid` INTEGER NOT NULL, `scheduleMasterChangeSeqNum` INTEGER NOT NULL, `scheduleLocalChangeSeqNum` INTEGER NOT NULL, `scheduleLastChangedBy` INTEGER NOT NULL, `scheduleLastChangedTime` INTEGER NOT NULL, `scheduleActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "scheduleUid",
            "columnName": "scheduleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sceduleStartTime",
            "columnName": "sceduleStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleEndTime",
            "columnName": "scheduleEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleDay",
            "columnName": "scheduleDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleMonth",
            "columnName": "scheduleMonth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleFrequency",
            "columnName": "scheduleFrequency",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarUid",
            "columnName": "umCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleClazzUid",
            "columnName": "scheduleClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleMasterChangeSeqNum",
            "columnName": "scheduleMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLocalChangeSeqNum",
            "columnName": "scheduleLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLastChangedBy",
            "columnName": "scheduleLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleLastChangedTime",
            "columnName": "scheduleLastChangedTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleActive",
            "columnName": "scheduleActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "scheduleUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DateRange",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`dateRangeUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `dateRangeLocalChangeSeqNum` INTEGER NOT NULL, `dateRangeMasterChangeSeqNum` INTEGER NOT NULL, `dateRangLastChangedBy` INTEGER NOT NULL, `dateRangeLct` INTEGER NOT NULL, `dateRangeFromDate` INTEGER NOT NULL, `dateRangeToDate` INTEGER NOT NULL, `dateRangeUMCalendarUid` INTEGER NOT NULL, `dateRangeName` TEXT, `dateRangeDesc` TEXT, `dateRangeActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "dateRangeUid",
            "columnName": "dateRangeUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeLocalChangeSeqNum",
            "columnName": "dateRangeLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeMasterChangeSeqNum",
            "columnName": "dateRangeMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangLastChangedBy",
            "columnName": "dateRangLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeLct",
            "columnName": "dateRangeLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeFromDate",
            "columnName": "dateRangeFromDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeToDate",
            "columnName": "dateRangeToDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeUMCalendarUid",
            "columnName": "dateRangeUMCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateRangeName",
            "columnName": "dateRangeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateRangeDesc",
            "columnName": "dateRangeDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateRangeActive",
            "columnName": "dateRangeActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "dateRangeUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "HolidayCalendar",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`umCalendarUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `umCalendarName` TEXT, `umCalendarCategory` INTEGER NOT NULL, `umCalendarActive` INTEGER NOT NULL, `umCalendarMasterChangeSeqNum` INTEGER NOT NULL, `umCalendarLocalChangeSeqNum` INTEGER NOT NULL, `umCalendarLastChangedBy` INTEGER NOT NULL, `umCalendarLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "umCalendarUid",
            "columnName": "umCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarName",
            "columnName": "umCalendarName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "umCalendarCategory",
            "columnName": "umCalendarCategory",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarActive",
            "columnName": "umCalendarActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarMasterChangeSeqNum",
            "columnName": "umCalendarMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLocalChangeSeqNum",
            "columnName": "umCalendarLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLastChangedBy",
            "columnName": "umCalendarLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "umCalendarLct",
            "columnName": "umCalendarLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "umCalendarUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Holiday",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`holUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `holMasterCsn` INTEGER NOT NULL, `holLocalCsn` INTEGER NOT NULL, `holLastModBy` INTEGER NOT NULL, `holLct` INTEGER NOT NULL, `holActive` INTEGER NOT NULL, `holHolidayCalendarUid` INTEGER NOT NULL, `holStartTime` INTEGER NOT NULL, `holEndTime` INTEGER NOT NULL, `holName` TEXT)",
        "fields": [
          {
            "fieldPath": "holUid",
            "columnName": "holUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holMasterCsn",
            "columnName": "holMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLocalCsn",
            "columnName": "holLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLastModBy",
            "columnName": "holLastModBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holLct",
            "columnName": "holLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holActive",
            "columnName": "holActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holHolidayCalendarUid",
            "columnName": "holHolidayCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holStartTime",
            "columnName": "holStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holEndTime",
            "columnName": "holEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holName",
            "columnName": "holName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "holUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ScheduledCheck",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scheduledCheckUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `checkTime` INTEGER NOT NULL, `checkType` INTEGER NOT NULL, `checkUuid` TEXT, `checkParameters` TEXT, `scClazzLogUid` INTEGER NOT NULL, `scheduledCheckMasterCsn` INTEGER NOT NULL, `scheduledCheckLocalCsn` INTEGER NOT NULL, `scheduledCheckLastChangedBy` INTEGER NOT NULL, `scheduledCheckLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "scheduledCheckUid",
            "columnName": "scheduledCheckUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "checkTime",
            "columnName": "checkTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "checkType",
            "columnName": "checkType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "checkUuid",
            "columnName": "checkUuid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "checkParameters",
            "columnName": "checkParameters",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scClazzLogUid",
            "columnName": "scClazzLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduledCheckMasterCsn",
            "columnName": "scheduledCheckMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduledCheckLocalCsn",
            "columnName": "scheduledCheckLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduledCheckLastChangedBy",
            "columnName": "scheduledCheckLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduledCheckLct",
            "columnName": "scheduledCheckLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "scheduledCheckUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "AuditLog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`auditLogUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `auditLogMasterChangeSeqNum` INTEGER NOT NULL, `auditLogLocalChangeSeqNum` INTEGER NOT NULL, `auditLogLastChangedBy` INTEGER NOT NULL, `auditLogLct` INTEGER NOT NULL, `auditLogActorPersonUid` INTEGER NOT NULL, `auditLogTableUid` INTEGER NOT NULL, `auditLogEntityUid` INTEGER NOT NULL, `auditLogDate` INTEGER NOT NULL, `notes` TEXT)",
        "fields": [
          {
            "fieldPath": "auditLogUid",
            "columnName": "auditLogUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogMasterChangeSeqNum",
            "columnName": "auditLogMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogLocalChangeSeqNum",
            "columnName": "auditLogLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogLastChangedBy",
            "columnName": "auditLogLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogLct",
            "columnName": "auditLogLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogActorPersonUid",
            "columnName": "auditLogActorPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogTableUid",
            "columnName": "auditLogTableUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogEntityUid",
            "columnName": "auditLogEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auditLogDate",
            "columnName": "auditLogDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "auditLogUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CustomField",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`customFieldUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customFieldName` TEXT, `customFieldNameAlt` TEXT, `customFieldLabelMessageID` INTEGER NOT NULL, `customFieldIcon` TEXT, `customFieldIconId` INTEGER NOT NULL, `actionOnClick` TEXT, `customFieldType` INTEGER NOT NULL, `customFieldEntityType` INTEGER NOT NULL, `customFieldActive` INTEGER NOT NULL, `customFieldDefaultValue` TEXT, `customFieldMCSN` INTEGER NOT NULL, `customFieldLCSN` INTEGER NOT NULL, `customFieldLCB` INTEGER NOT NULL, `customFieldLct` INTEGER NOT NULL, `customFieldInputType` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "customFieldUid",
            "columnName": "customFieldUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldName",
            "columnName": "customFieldName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldNameAlt",
            "columnName": "customFieldNameAlt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldLabelMessageID",
            "columnName": "customFieldLabelMessageID",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldIcon",
            "columnName": "customFieldIcon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldIconId",
            "columnName": "customFieldIconId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actionOnClick",
            "columnName": "actionOnClick",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldType",
            "columnName": "customFieldType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldEntityType",
            "columnName": "customFieldEntityType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldActive",
            "columnName": "customFieldActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldDefaultValue",
            "columnName": "customFieldDefaultValue",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldMCSN",
            "columnName": "customFieldMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldLCSN",
            "columnName": "customFieldLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldLCB",
            "columnName": "customFieldLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldLct",
            "columnName": "customFieldLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldInputType",
            "columnName": "customFieldInputType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "customFieldUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CustomFieldValue",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`customFieldValueUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customFieldValueFieldUid` INTEGER NOT NULL, `customFieldValueEntityUid` INTEGER NOT NULL, `customFieldValueValue` TEXT, `customFieldValueCustomFieldValueOptionUid` INTEGER NOT NULL, `customFieldValueMCSN` INTEGER NOT NULL, `customFieldValueLCSN` INTEGER NOT NULL, `customFieldValueLCB` INTEGER NOT NULL, `customFieldLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "customFieldValueUid",
            "columnName": "customFieldValueUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueFieldUid",
            "columnName": "customFieldValueFieldUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueEntityUid",
            "columnName": "customFieldValueEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueValue",
            "columnName": "customFieldValueValue",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldValueCustomFieldValueOptionUid",
            "columnName": "customFieldValueCustomFieldValueOptionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueMCSN",
            "columnName": "customFieldValueMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueLCSN",
            "columnName": "customFieldValueLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueLCB",
            "columnName": "customFieldValueLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldLct",
            "columnName": "customFieldLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "customFieldValueUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CustomFieldValueOption",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`customFieldValueOptionUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customFieldValueOptionName` TEXT, `customFieldValueOptionFieldUid` INTEGER NOT NULL, `customFieldValueOptionIcon` TEXT, `customFieldValueOptionMessageId` INTEGER NOT NULL, `customFieldValueOptionActive` INTEGER NOT NULL, `customFieldValueOptionMCSN` INTEGER NOT NULL, `customFieldValueOptionLCSN` INTEGER NOT NULL, `customFieldValueOptionLCB` INTEGER NOT NULL, `customFieldValueLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "customFieldValueOptionUid",
            "columnName": "customFieldValueOptionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionName",
            "columnName": "customFieldValueOptionName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldValueOptionFieldUid",
            "columnName": "customFieldValueOptionFieldUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionIcon",
            "columnName": "customFieldValueOptionIcon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customFieldValueOptionMessageId",
            "columnName": "customFieldValueOptionMessageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionActive",
            "columnName": "customFieldValueOptionActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionMCSN",
            "columnName": "customFieldValueOptionMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionLCSN",
            "columnName": "customFieldValueOptionLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueOptionLCB",
            "columnName": "customFieldValueOptionLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customFieldValueLct",
            "columnName": "customFieldValueLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "customFieldValueOptionUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Person",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `username` TEXT, `firstNames` TEXT, `lastName` TEXT, `emailAddr` TEXT, `phoneNum` TEXT, `gender` INTEGER NOT NULL, `active` INTEGER NOT NULL, `admin` INTEGER NOT NULL, `personNotes` TEXT, `fatherName` TEXT, `fatherNumber` TEXT, `motherName` TEXT, `motherNum` TEXT, `dateOfBirth` INTEGER NOT NULL, `personAddress` TEXT, `personOrgId` TEXT, `personGroupUid` INTEGER NOT NULL, `personMasterChangeSeqNum` INTEGER NOT NULL, `personLocalChangeSeqNum` INTEGER NOT NULL, `personLastChangedBy` INTEGER NOT NULL, `personLct` INTEGER NOT NULL, `personCountry` TEXT, `personType` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "personUid",
            "columnName": "personUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstNames",
            "columnName": "firstNames",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emailAddr",
            "columnName": "emailAddr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNum",
            "columnName": "phoneNum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "admin",
            "columnName": "admin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personNotes",
            "columnName": "personNotes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fatherName",
            "columnName": "fatherName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fatherNumber",
            "columnName": "fatherNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "motherName",
            "columnName": "motherName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "motherNum",
            "columnName": "motherNum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateOfBirth",
            "columnName": "dateOfBirth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personAddress",
            "columnName": "personAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personOrgId",
            "columnName": "personOrgId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personGroupUid",
            "columnName": "personGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personMasterChangeSeqNum",
            "columnName": "personMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLocalChangeSeqNum",
            "columnName": "personLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLastChangedBy",
            "columnName": "personLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personLct",
            "columnName": "personLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personCountry",
            "columnName": "personCountry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personType",
            "columnName": "personType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "personUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Clazz",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzName` TEXT, `clazzDesc` TEXT, `attendanceAverage` REAL NOT NULL, `clazzHolidayUMCalendarUid` INTEGER NOT NULL, `clazzScheuleUMCalendarUid` INTEGER NOT NULL, `isClazzActive` INTEGER NOT NULL, `clazzLocationUid` INTEGER NOT NULL, `clazzStartTime` INTEGER NOT NULL, `clazzEndTime` INTEGER NOT NULL, `clazzFeatures` INTEGER NOT NULL, `clazzSchoolUid` INTEGER NOT NULL, `clazzEnrolmentPolicy` INTEGER NOT NULL DEFAULT 102, `clazzTerminologyUid` INTEGER NOT NULL DEFAULT 25966, `clazzMasterChangeSeqNum` INTEGER NOT NULL, `clazzLocalChangeSeqNum` INTEGER NOT NULL, `clazzLastChangedBy` INTEGER NOT NULL, `clazzLct` INTEGER NOT NULL, `clazzTimeZone` TEXT, `clazzStudentsPersonGroupUid` INTEGER NOT NULL, `clazzTeachersPersonGroupUid` INTEGER NOT NULL, `clazzPendingStudentsPersonGroupUid` INTEGER NOT NULL, `clazzParentsPersonGroupUid` INTEGER NOT NULL, `clazzCode` TEXT)",
        "fields": [
          {
            "fieldPath": "clazzUid",
            "columnName": "clazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzName",
            "columnName": "clazzName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzDesc",
            "columnName": "clazzDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attendanceAverage",
            "columnName": "attendanceAverage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "clazzHolidayUMCalendarUid",
            "columnName": "clazzHolidayUMCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzScheuleUMCalendarUid",
            "columnName": "clazzScheuleUMCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isClazzActive",
            "columnName": "isClazzActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLocationUid",
            "columnName": "clazzLocationUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzStartTime",
            "columnName": "clazzStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEndTime",
            "columnName": "clazzEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzFeatures",
            "columnName": "clazzFeatures",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzSchoolUid",
            "columnName": "clazzSchoolUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentPolicy",
            "columnName": "clazzEnrolmentPolicy",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "102"
          },
          {
            "fieldPath": "clazzTerminologyUid",
            "columnName": "clazzTerminologyUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "25966"
          },
          {
            "fieldPath": "clazzMasterChangeSeqNum",
            "columnName": "clazzMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLocalChangeSeqNum",
            "columnName": "clazzLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLastChangedBy",
            "columnName": "clazzLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzLct",
            "columnName": "clazzLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzTimeZone",
            "columnName": "clazzTimeZone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzStudentsPersonGroupUid",
            "columnName": "clazzStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzTeachersPersonGroupUid",
            "columnName": "clazzTeachersPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzPendingStudentsPersonGroupUid",
            "columnName": "clazzPendingStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzParentsPersonGroupUid",
            "columnName": "clazzParentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzCode",
            "columnName": "clazzCode",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clazzUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzEnrolment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzEnrolmentUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `clazzEnrolmentPersonUid` INTEGER NOT NULL, `clazzEnrolmentClazzUid` INTEGER NOT NULL, `clazzEnrolmentDateJoined` INTEGER NOT NULL, `clazzEnrolmentDateLeft` INTEGER NOT NULL, `clazzEnrolmentRole` INTEGER NOT NULL, `clazzEnrolmentAttendancePercentage` REAL NOT NULL, `clazzEnrolmentActive` INTEGER NOT NULL, `clazzEnrolmentLeavingReasonUid` INTEGER NOT NULL, `clazzEnrolmentOutcome` INTEGER NOT NULL, `clazzEnrolmentLocalChangeSeqNum` INTEGER NOT NULL, `clazzEnrolmentMasterChangeSeqNum` INTEGER NOT NULL, `clazzEnrolmentLastChangedBy` INTEGER NOT NULL, `clazzEnrolmentLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "clazzEnrolmentUid",
            "columnName": "clazzEnrolmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentPersonUid",
            "columnName": "clazzEnrolmentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentClazzUid",
            "columnName": "clazzEnrolmentClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentDateJoined",
            "columnName": "clazzEnrolmentDateJoined",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentDateLeft",
            "columnName": "clazzEnrolmentDateLeft",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentRole",
            "columnName": "clazzEnrolmentRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentAttendancePercentage",
            "columnName": "clazzEnrolmentAttendancePercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentActive",
            "columnName": "clazzEnrolmentActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLeavingReasonUid",
            "columnName": "clazzEnrolmentLeavingReasonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentOutcome",
            "columnName": "clazzEnrolmentOutcome",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLocalChangeSeqNum",
            "columnName": "clazzEnrolmentLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentMasterChangeSeqNum",
            "columnName": "clazzEnrolmentMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLastChangedBy",
            "columnName": "clazzEnrolmentLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzEnrolmentLct",
            "columnName": "clazzEnrolmentLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clazzEnrolmentUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentPersonUid_clazzEnrolmentClazzUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentPersonUid",
              "clazzEnrolmentClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentPersonUid_clazzEnrolmentClazzUid` ON `${TABLE_NAME}` (`clazzEnrolmentPersonUid`, `clazzEnrolmentClazzUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentPersonUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid",
              "clazzEnrolmentPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentPersonUid` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`, `clazzEnrolmentPersonUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentRole",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid",
              "clazzEnrolmentRole"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid_clazzEnrolmentRole` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`, `clazzEnrolmentRole`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentPersonUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentPersonUid` ON `${TABLE_NAME}` (`clazzEnrolmentPersonUid`)"
          },
          {
            "name": "index_ClazzEnrolment_clazzEnrolmentClazzUid",
            "unique": false,
            "columnNames": [
              "clazzEnrolmentClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolment_clazzEnrolmentClazzUid` ON `${TABLE_NAME}` (`clazzEnrolmentClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LeavingReason",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`leavingReasonUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `leavingReasonTitle` TEXT, `leavingReasonMCSN` INTEGER NOT NULL, `leavingReasonCSN` INTEGER NOT NULL, `leavingReasonLCB` INTEGER NOT NULL, `leavingReasonLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "leavingReasonUid",
            "columnName": "leavingReasonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonTitle",
            "columnName": "leavingReasonTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "leavingReasonMCSN",
            "columnName": "leavingReasonMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonCSN",
            "columnName": "leavingReasonCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonLCB",
            "columnName": "leavingReasonLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leavingReasonLct",
            "columnName": "leavingReasonLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "leavingReasonUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentEntryUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT, `description` TEXT, `entryId` TEXT, `author` TEXT, `publisher` TEXT, `licenseType` INTEGER NOT NULL, `licenseName` TEXT, `licenseUrl` TEXT, `sourceUrl` TEXT, `thumbnailUrl` TEXT, `lastModified` INTEGER NOT NULL, `primaryLanguageUid` INTEGER NOT NULL, `languageVariantUid` INTEGER NOT NULL, `contentFlags` INTEGER NOT NULL, `leaf` INTEGER NOT NULL, `publik` INTEGER NOT NULL, `ceInactive` INTEGER NOT NULL, `completionCriteria` INTEGER NOT NULL, `minScore` INTEGER NOT NULL, `contentTypeFlag` INTEGER NOT NULL, `contentOwner` INTEGER NOT NULL, `contentEntryLocalChangeSeqNum` INTEGER NOT NULL, `contentEntryMasterChangeSeqNum` INTEGER NOT NULL, `contentEntryLastChangedBy` INTEGER NOT NULL, `contentEntryLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentEntryUid",
            "columnName": "contentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "entryId",
            "columnName": "entryId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisher",
            "columnName": "publisher",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "licenseType",
            "columnName": "licenseType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "licenseName",
            "columnName": "licenseName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "licenseUrl",
            "columnName": "licenseUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sourceUrl",
            "columnName": "sourceUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastModified",
            "columnName": "lastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "primaryLanguageUid",
            "columnName": "primaryLanguageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languageVariantUid",
            "columnName": "languageVariantUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentFlags",
            "columnName": "contentFlags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "leaf",
            "columnName": "leaf",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "publik",
            "columnName": "publik",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceInactive",
            "columnName": "ceInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completionCriteria",
            "columnName": "completionCriteria",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minScore",
            "columnName": "minScore",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentTypeFlag",
            "columnName": "contentTypeFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentOwner",
            "columnName": "contentOwner",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryLocalChangeSeqNum",
            "columnName": "contentEntryLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryMasterChangeSeqNum",
            "columnName": "contentEntryMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryLastChangedBy",
            "columnName": "contentEntryLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryLct",
            "columnName": "contentEntryLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contentEntryUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ContentEntry_primaryLanguageUid",
            "unique": false,
            "columnNames": [
              "primaryLanguageUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntry_primaryLanguageUid` ON `${TABLE_NAME}` (`primaryLanguageUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryContentCategoryJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ceccjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ceccjContentEntryUid` INTEGER NOT NULL, `ceccjContentCategoryUid` INTEGER NOT NULL, `ceccjLocalChangeSeqNum` INTEGER NOT NULL, `ceccjMasterChangeSeqNum` INTEGER NOT NULL, `ceccjLastChangedBy` INTEGER NOT NULL, `ceccjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ceccjUid",
            "columnName": "ceccjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjContentEntryUid",
            "columnName": "ceccjContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjContentCategoryUid",
            "columnName": "ceccjContentCategoryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLocalChangeSeqNum",
            "columnName": "ceccjLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjMasterChangeSeqNum",
            "columnName": "ceccjMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLastChangedBy",
            "columnName": "ceccjLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjLct",
            "columnName": "ceccjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ceccjUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ContentEntryContentCategoryJoin_ceccjContentEntryUid",
            "unique": false,
            "columnNames": [
              "ceccjContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryContentCategoryJoin_ceccjContentEntryUid` ON `${TABLE_NAME}` (`ceccjContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryParentChildJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cepcjParentContentEntryUid` INTEGER NOT NULL, `cepcjChildContentEntryUid` INTEGER NOT NULL, `childIndex` INTEGER NOT NULL, `cepcjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cepcjLocalChangeSeqNum` INTEGER NOT NULL, `cepcjMasterChangeSeqNum` INTEGER NOT NULL, `cepcjLastChangedBy` INTEGER NOT NULL, `cepcjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cepcjParentContentEntryUid",
            "columnName": "cepcjParentContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjChildContentEntryUid",
            "columnName": "cepcjChildContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "childIndex",
            "columnName": "childIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjUid",
            "columnName": "cepcjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLocalChangeSeqNum",
            "columnName": "cepcjLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjMasterChangeSeqNum",
            "columnName": "cepcjMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLastChangedBy",
            "columnName": "cepcjLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjLct",
            "columnName": "cepcjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cepcjUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "parent_child",
            "unique": false,
            "columnNames": [
              "cepcjChildContentEntryUid",
              "cepcjParentContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `parent_child` ON `${TABLE_NAME}` (`cepcjChildContentEntryUid`, `cepcjParentContentEntryUid`)"
          },
          {
            "name": "index_ContentEntryParentChildJoin_cepcjParentContentEntryUid",
            "unique": false,
            "columnNames": [
              "cepcjParentContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoin_cepcjParentContentEntryUid` ON `${TABLE_NAME}` (`cepcjParentContentEntryUid`)"
          },
          {
            "name": "index_ContentEntryParentChildJoin_cepcjChildContentEntryUid",
            "unique": false,
            "columnNames": [
              "cepcjChildContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoin_cepcjChildContentEntryUid` ON `${TABLE_NAME}` (`cepcjChildContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryRelatedEntryJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cerejUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cerejContentEntryUid` INTEGER NOT NULL, `cerejRelatedEntryUid` INTEGER NOT NULL, `cerejLastChangedBy` INTEGER NOT NULL, `relType` INTEGER NOT NULL, `comment` TEXT, `cerejRelLanguageUid` INTEGER NOT NULL, `cerejLocalChangeSeqNum` INTEGER NOT NULL, `cerejMasterChangeSeqNum` INTEGER NOT NULL, `cerejLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cerejUid",
            "columnName": "cerejUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejContentEntryUid",
            "columnName": "cerejContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejRelatedEntryUid",
            "columnName": "cerejRelatedEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLastChangedBy",
            "columnName": "cerejLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "relType",
            "columnName": "relType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cerejRelLanguageUid",
            "columnName": "cerejRelLanguageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLocalChangeSeqNum",
            "columnName": "cerejLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejMasterChangeSeqNum",
            "columnName": "cerejMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejLct",
            "columnName": "cerejLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cerejUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategorySchema",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentCategorySchemaUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `schemaName` TEXT, `schemaUrl` TEXT, `contentCategorySchemaLocalChangeSeqNum` INTEGER NOT NULL, `contentCategorySchemaMasterChangeSeqNum` INTEGER NOT NULL, `contentCategorySchemaLastChangedBy` INTEGER NOT NULL, `contentCategorySchemaLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentCategorySchemaUid",
            "columnName": "contentCategorySchemaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schemaName",
            "columnName": "schemaName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schemaUrl",
            "columnName": "schemaUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentCategorySchemaLocalChangeSeqNum",
            "columnName": "contentCategorySchemaLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaMasterChangeSeqNum",
            "columnName": "contentCategorySchemaMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaLastChangedBy",
            "columnName": "contentCategorySchemaLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategorySchemaLct",
            "columnName": "contentCategorySchemaLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contentCategorySchemaUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentCategoryUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ctnCatContentCategorySchemaUid` INTEGER NOT NULL, `name` TEXT, `contentCategoryLocalChangeSeqNum` INTEGER NOT NULL, `contentCategoryMasterChangeSeqNum` INTEGER NOT NULL, `contentCategoryLastChangedBy` INTEGER NOT NULL, `contentCategoryLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contentCategoryUid",
            "columnName": "contentCategoryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctnCatContentCategorySchemaUid",
            "columnName": "ctnCatContentCategorySchemaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentCategoryLocalChangeSeqNum",
            "columnName": "contentCategoryLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryMasterChangeSeqNum",
            "columnName": "contentCategoryMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryLastChangedBy",
            "columnName": "contentCategoryLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCategoryLct",
            "columnName": "contentCategoryLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contentCategoryUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Language",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`langUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `iso_639_1_standard` TEXT, `iso_639_2_standard` TEXT, `iso_639_3_standard` TEXT, `Language_Type` TEXT, `languageActive` INTEGER NOT NULL, `langLocalChangeSeqNum` INTEGER NOT NULL, `langMasterChangeSeqNum` INTEGER NOT NULL, `langLastChangedBy` INTEGER NOT NULL, `langLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "langUid",
            "columnName": "langUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_1_standard",
            "columnName": "iso_639_1_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_2_standard",
            "columnName": "iso_639_2_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso_639_3_standard",
            "columnName": "iso_639_3_standard",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "Language_Type",
            "columnName": "Language_Type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "languageActive",
            "columnName": "languageActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLocalChangeSeqNum",
            "columnName": "langLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langMasterChangeSeqNum",
            "columnName": "langMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLastChangedBy",
            "columnName": "langLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langLct",
            "columnName": "langLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "langUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LanguageVariant",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`langVariantUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `langUid` INTEGER NOT NULL, `countryCode` TEXT, `name` TEXT, `langVariantLocalChangeSeqNum` INTEGER NOT NULL, `langVariantMasterChangeSeqNum` INTEGER NOT NULL, `langVariantLastChangedBy` INTEGER NOT NULL, `langVariantLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "langVariantUid",
            "columnName": "langVariantUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langUid",
            "columnName": "langUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "countryCode",
            "columnName": "countryCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "langVariantLocalChangeSeqNum",
            "columnName": "langVariantLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantMasterChangeSeqNum",
            "columnName": "langVariantMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantLastChangedBy",
            "columnName": "langVariantLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "langVariantLct",
            "columnName": "langVariantLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "langVariantUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "AccessToken",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`token` TEXT NOT NULL, `accessTokenPersonUid` INTEGER NOT NULL, `expires` INTEGER NOT NULL, PRIMARY KEY(`token`))",
        "fields": [
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessTokenPersonUid",
            "columnName": "accessTokenPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expires",
            "columnName": "expires",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "token"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonAuth",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personAuthUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `passwordHash` TEXT, `personAuthStatus` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "personAuthUid",
            "columnName": "personAuthUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passwordHash",
            "columnName": "passwordHash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personAuthStatus",
            "columnName": "personAuthStatus",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "personAuthUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Role",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`roleUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `roleName` TEXT, `roleActive` INTEGER NOT NULL, `roleMasterCsn` INTEGER NOT NULL, `roleLocalCsn` INTEGER NOT NULL, `roleLastChangedBy` INTEGER NOT NULL, `roleLct` INTEGER NOT NULL, `rolePermissions` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "roleUid",
            "columnName": "roleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleName",
            "columnName": "roleName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "roleActive",
            "columnName": "roleActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleMasterCsn",
            "columnName": "roleMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleLocalCsn",
            "columnName": "roleLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleLastChangedBy",
            "columnName": "roleLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleLct",
            "columnName": "roleLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rolePermissions",
            "columnName": "rolePermissions",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "roleUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Role_rolePermissions",
            "unique": false,
            "columnNames": [
              "rolePermissions"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Role_rolePermissions` ON `${TABLE_NAME}` (`rolePermissions`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "EntityRole",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`erUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `erMasterCsn` INTEGER NOT NULL, `erLocalCsn` INTEGER NOT NULL, `erLastChangedBy` INTEGER NOT NULL, `erLct` INTEGER NOT NULL, `erTableId` INTEGER NOT NULL, `erEntityUid` INTEGER NOT NULL, `erGroupUid` INTEGER NOT NULL, `erRoleUid` INTEGER NOT NULL, `erActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "erUid",
            "columnName": "erUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erMasterCsn",
            "columnName": "erMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erLocalCsn",
            "columnName": "erLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erLastChangedBy",
            "columnName": "erLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erLct",
            "columnName": "erLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erTableId",
            "columnName": "erTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erEntityUid",
            "columnName": "erEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erGroupUid",
            "columnName": "erGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erRoleUid",
            "columnName": "erRoleUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erActive",
            "columnName": "erActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "erUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_EntityRole_erGroupUid_erRoleUid_erTableId",
            "unique": false,
            "columnNames": [
              "erGroupUid",
              "erRoleUid",
              "erTableId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntityRole_erGroupUid_erRoleUid_erTableId` ON `${TABLE_NAME}` (`erGroupUid`, `erRoleUid`, `erTableId`)"
          },
          {
            "name": "index_EntityRole_erTableId",
            "unique": false,
            "columnNames": [
              "erTableId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntityRole_erTableId` ON `${TABLE_NAME}` (`erTableId`)"
          },
          {
            "name": "index_EntityRole_erEntityUid",
            "unique": false,
            "columnNames": [
              "erEntityUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntityRole_erEntityUid` ON `${TABLE_NAME}` (`erEntityUid`)"
          },
          {
            "name": "index_EntityRole_erGroupUid",
            "unique": false,
            "columnNames": [
              "erGroupUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntityRole_erGroupUid` ON `${TABLE_NAME}` (`erGroupUid`)"
          },
          {
            "name": "index_EntityRole_erRoleUid",
            "unique": false,
            "columnNames": [
              "erRoleUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EntityRole_erRoleUid` ON `${TABLE_NAME}` (`erRoleUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`groupUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupMasterCsn` INTEGER NOT NULL, `groupLocalCsn` INTEGER NOT NULL, `groupLastChangedBy` INTEGER NOT NULL, `groupLct` INTEGER NOT NULL, `groupName` TEXT, `groupActive` INTEGER NOT NULL, `personGroupFlag` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "groupUid",
            "columnName": "groupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMasterCsn",
            "columnName": "groupMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLocalCsn",
            "columnName": "groupLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLastChangedBy",
            "columnName": "groupLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLct",
            "columnName": "groupLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupName",
            "columnName": "groupName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "groupActive",
            "columnName": "groupActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personGroupFlag",
            "columnName": "personGroupFlag",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "groupUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroupMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`groupMemberUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupMemberActive` INTEGER NOT NULL, `groupMemberPersonUid` INTEGER NOT NULL, `groupMemberGroupUid` INTEGER NOT NULL, `groupMemberMasterCsn` INTEGER NOT NULL, `groupMemberLocalCsn` INTEGER NOT NULL, `groupMemberLastChangedBy` INTEGER NOT NULL, `groupMemberLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "groupMemberUid",
            "columnName": "groupMemberUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberActive",
            "columnName": "groupMemberActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberPersonUid",
            "columnName": "groupMemberPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberGroupUid",
            "columnName": "groupMemberGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberMasterCsn",
            "columnName": "groupMemberMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLocalCsn",
            "columnName": "groupMemberLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLastChangedBy",
            "columnName": "groupMemberLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupMemberLct",
            "columnName": "groupMemberLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "groupMemberUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_PersonGroupMember_groupMemberPersonUid",
            "unique": false,
            "columnNames": [
              "groupMemberPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMember_groupMemberPersonUid` ON `${TABLE_NAME}` (`groupMemberPersonUid`)"
          },
          {
            "name": "index_PersonGroupMember_groupMemberGroupUid",
            "unique": false,
            "columnNames": [
              "groupMemberGroupUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMember_groupMemberGroupUid` ON `${TABLE_NAME}` (`groupMemberGroupUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonPicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personPictureUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `personPicturePersonUid` INTEGER NOT NULL, `personPictureMasterCsn` INTEGER NOT NULL, `personPictureLocalCsn` INTEGER NOT NULL, `personPictureLastChangedBy` INTEGER NOT NULL, `personPictureLct` INTEGER NOT NULL, `personPictureUri` TEXT, `personPictureMd5` TEXT, `fileSize` INTEGER NOT NULL, `picTimestamp` INTEGER NOT NULL, `mimeType` TEXT, `personPictureActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "personPictureUid",
            "columnName": "personPictureUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPicturePersonUid",
            "columnName": "personPicturePersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureMasterCsn",
            "columnName": "personPictureMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureLocalCsn",
            "columnName": "personPictureLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureLastChangedBy",
            "columnName": "personPictureLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureLct",
            "columnName": "personPictureLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPictureUri",
            "columnName": "personPictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personPictureMd5",
            "columnName": "personPictureMd5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "picTimestamp",
            "columnName": "picTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "personPictureActive",
            "columnName": "personPictureActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "personPictureUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ScrapeQueueItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sqiUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sqiContentEntryParentUid` INTEGER NOT NULL, `sqiContentEntryUid` INTEGER NOT NULL, `destDir` TEXT, `scrapeUrl` TEXT, `status` INTEGER NOT NULL, `runId` INTEGER NOT NULL, `itemType` INTEGER NOT NULL, `errorCode` INTEGER NOT NULL, `contentType` TEXT, `timeAdded` INTEGER NOT NULL, `timeStarted` INTEGER NOT NULL, `timeFinished` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `overrideEntry` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "sqiUid",
            "columnName": "sqiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sqiContentEntryParentUid",
            "columnName": "sqiContentEntryParentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sqiContentEntryUid",
            "columnName": "sqiContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "destDir",
            "columnName": "destDir",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scrapeUrl",
            "columnName": "scrapeUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "runId",
            "columnName": "runId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemType",
            "columnName": "itemType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorCode",
            "columnName": "errorCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timeAdded",
            "columnName": "timeAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timeStarted",
            "columnName": "timeStarted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timeFinished",
            "columnName": "timeFinished",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "overrideEntry",
            "columnName": "overrideEntry",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sqiUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ScrapeQueueItem_status_itemType",
            "unique": false,
            "columnNames": [
              "status",
              "itemType"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ScrapeQueueItem_status_itemType` ON `${TABLE_NAME}` (`status`, `itemType`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ScrapeRun",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scrapeRunUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scrapeType` TEXT, `scrapeRunStatus` INTEGER NOT NULL, `conversionParams` TEXT)",
        "fields": [
          {
            "fieldPath": "scrapeRunUid",
            "columnName": "scrapeRunUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scrapeType",
            "columnName": "scrapeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "scrapeRunStatus",
            "columnName": "scrapeRunStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "conversionParams",
            "columnName": "conversionParams",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "scrapeRunUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ConnectivityStatus",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`csUid` INTEGER NOT NULL, `connectivityState` INTEGER NOT NULL, `wifiSsid` TEXT, `connectedOrConnecting` INTEGER NOT NULL, PRIMARY KEY(`csUid`))",
        "fields": [
          {
            "fieldPath": "csUid",
            "columnName": "csUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "connectivityState",
            "columnName": "connectivityState",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wifiSsid",
            "columnName": "wifiSsid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "connectedOrConnecting",
            "columnName": "connectedOrConnecting",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "csUid"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Container",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`containerUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cntLocalCsn` INTEGER NOT NULL, `cntMasterCsn` INTEGER NOT NULL, `cntLastModBy` INTEGER NOT NULL, `cntLct` INTEGER NOT NULL, `fileSize` INTEGER NOT NULL, `containerContentEntryUid` INTEGER NOT NULL, `cntLastModified` INTEGER NOT NULL, `mimeType` TEXT, `remarks` TEXT, `mobileOptimized` INTEGER NOT NULL, `cntNumEntries` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "containerUid",
            "columnName": "containerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntLocalCsn",
            "columnName": "cntLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntMasterCsn",
            "columnName": "cntMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntLastModBy",
            "columnName": "cntLastModBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntLct",
            "columnName": "cntLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "containerContentEntryUid",
            "columnName": "containerContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntLastModified",
            "columnName": "cntLastModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remarks",
            "columnName": "remarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mobileOptimized",
            "columnName": "mobileOptimized",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cntNumEntries",
            "columnName": "cntNumEntries",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "containerUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "cnt_uid_to_most_recent",
            "unique": false,
            "columnNames": [
              "containerContentEntryUid",
              "cntLastModified"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `cnt_uid_to_most_recent` ON `${TABLE_NAME}` (`containerContentEntryUid`, `cntLastModified`)"
          },
          {
            "name": "index_Container_cntLastModified",
            "unique": false,
            "columnNames": [
              "cntLastModified"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Container_cntLastModified` ON `${TABLE_NAME}` (`cntLastModified`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContainerEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ceUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ceContainerUid` INTEGER NOT NULL, `cePath` TEXT, `ceCefUid` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ceUid",
            "columnName": "ceUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceContainerUid",
            "columnName": "ceContainerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cePath",
            "columnName": "cePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ceCefUid",
            "columnName": "ceCefUid",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ceUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ContainerEntry_ceContainerUid",
            "unique": false,
            "columnNames": [
              "ceContainerUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContainerEntry_ceContainerUid` ON `${TABLE_NAME}` (`ceContainerUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContainerEntryFile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cefUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cefMd5` TEXT, `cefPath` TEXT, `ceTotalSize` INTEGER NOT NULL, `ceCompressedSize` INTEGER NOT NULL, `compression` INTEGER NOT NULL, `lastModified` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cefUid",
            "columnName": "cefUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cefMd5",
            "columnName": "cefMd5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cefPath",
            "columnName": "cefPath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ceTotalSize",
            "columnName": "ceTotalSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceCompressedSize",
            "columnName": "ceCompressedSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "compression",
            "columnName": "compression",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastModified",
            "columnName": "lastModified",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cefUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ContainerEntryFile_cefMd5",
            "unique": false,
            "columnNames": [
              "cefMd5"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContainerEntryFile_cefMd5` ON `${TABLE_NAME}` (`cefMd5`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "VerbEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`verbUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `urlId` TEXT, `verbInActive` INTEGER NOT NULL, `verbMasterChangeSeqNum` INTEGER NOT NULL, `verbLocalChangeSeqNum` INTEGER NOT NULL, `verbLastChangedBy` INTEGER NOT NULL, `verbLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "verbUid",
            "columnName": "verbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "urlId",
            "columnName": "urlId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verbInActive",
            "columnName": "verbInActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbMasterChangeSeqNum",
            "columnName": "verbMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLocalChangeSeqNum",
            "columnName": "verbLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLastChangedBy",
            "columnName": "verbLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLct",
            "columnName": "verbLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "verbUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "XObjectEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`xObjectUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `objectType` TEXT, `objectId` TEXT, `definitionType` TEXT, `interactionType` TEXT, `correctResponsePattern` TEXT, `objectContentEntryUid` INTEGER NOT NULL, `objectStatementRefUid` INTEGER NOT NULL DEFAULT 0, `xObjectMasterChangeSeqNum` INTEGER NOT NULL, `xObjectocalChangeSeqNum` INTEGER NOT NULL, `xObjectLastChangedBy` INTEGER NOT NULL, `xObjectLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "xObjectUid",
            "columnName": "xObjectUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "objectType",
            "columnName": "objectType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "objectId",
            "columnName": "objectId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "definitionType",
            "columnName": "definitionType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "interactionType",
            "columnName": "interactionType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "correctResponsePattern",
            "columnName": "correctResponsePattern",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "objectContentEntryUid",
            "columnName": "objectContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "objectStatementRefUid",
            "columnName": "objectStatementRefUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "xObjectMasterChangeSeqNum",
            "columnName": "xObjectMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xObjectocalChangeSeqNum",
            "columnName": "xObjectocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xObjectLastChangedBy",
            "columnName": "xObjectLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xObjectLct",
            "columnName": "xObjectLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "xObjectUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StatementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`statementUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `statementId` TEXT, `statementPersonUid` INTEGER NOT NULL, `statementVerbUid` INTEGER NOT NULL, `xObjectUid` INTEGER NOT NULL, `subStatementActorUid` INTEGER NOT NULL, `substatementVerbUid` INTEGER NOT NULL, `subStatementObjectUid` INTEGER NOT NULL, `agentUid` INTEGER NOT NULL, `instructorUid` INTEGER NOT NULL, `authorityUid` INTEGER NOT NULL, `teamUid` INTEGER NOT NULL, `resultCompletion` INTEGER NOT NULL, `resultSuccess` INTEGER NOT NULL, `resultScoreScaled` REAL NOT NULL, `resultScoreRaw` INTEGER NOT NULL, `resultScoreMin` INTEGER NOT NULL, `resultScoreMax` INTEGER NOT NULL, `resultDuration` INTEGER NOT NULL, `resultResponse` TEXT, `timestamp` INTEGER NOT NULL, `stored` INTEGER NOT NULL, `contextRegistration` TEXT, `contextPlatform` TEXT, `contextStatementId` TEXT, `fullStatement` TEXT, `statementMasterChangeSeqNum` INTEGER NOT NULL, `statementLocalChangeSeqNum` INTEGER NOT NULL, `statementLastChangedBy` INTEGER NOT NULL, `statementLct` INTEGER NOT NULL, `extensionProgress` INTEGER NOT NULL, `contentEntryRoot` INTEGER NOT NULL, `statementContentEntryUid` INTEGER NOT NULL, `statementLearnerGroupUid` INTEGER NOT NULL, `statementClazzUid` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "statementUid",
            "columnName": "statementUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementId",
            "columnName": "statementId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statementPersonUid",
            "columnName": "statementPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementVerbUid",
            "columnName": "statementVerbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xObjectUid",
            "columnName": "xObjectUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subStatementActorUid",
            "columnName": "subStatementActorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "substatementVerbUid",
            "columnName": "substatementVerbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subStatementObjectUid",
            "columnName": "subStatementObjectUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "agentUid",
            "columnName": "agentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "instructorUid",
            "columnName": "instructorUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorityUid",
            "columnName": "authorityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "teamUid",
            "columnName": "teamUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultCompletion",
            "columnName": "resultCompletion",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultSuccess",
            "columnName": "resultSuccess",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultScoreScaled",
            "columnName": "resultScoreScaled",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "resultScoreRaw",
            "columnName": "resultScoreRaw",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultScoreMin",
            "columnName": "resultScoreMin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultScoreMax",
            "columnName": "resultScoreMax",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultDuration",
            "columnName": "resultDuration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resultResponse",
            "columnName": "resultResponse",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stored",
            "columnName": "stored",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextRegistration",
            "columnName": "contextRegistration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contextPlatform",
            "columnName": "contextPlatform",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contextStatementId",
            "columnName": "contextStatementId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fullStatement",
            "columnName": "fullStatement",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statementMasterChangeSeqNum",
            "columnName": "statementMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLocalChangeSeqNum",
            "columnName": "statementLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLastChangedBy",
            "columnName": "statementLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLct",
            "columnName": "statementLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "extensionProgress",
            "columnName": "extensionProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentEntryRoot",
            "columnName": "contentEntryRoot",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementContentEntryUid",
            "columnName": "statementContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLearnerGroupUid",
            "columnName": "statementLearnerGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementClazzUid",
            "columnName": "statementClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "statementUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_StatementEntity_statementContentEntryUid_statementPersonUid_contentEntryRoot_timestamp_statementLocalChangeSeqNum",
            "unique": false,
            "columnNames": [
              "statementContentEntryUid",
              "statementPersonUid",
              "contentEntryRoot",
              "timestamp",
              "statementLocalChangeSeqNum"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StatementEntity_statementContentEntryUid_statementPersonUid_contentEntryRoot_timestamp_statementLocalChangeSeqNum` ON `${TABLE_NAME}` (`statementContentEntryUid`, `statementPersonUid`, `contentEntryRoot`, `timestamp`, `statementLocalChangeSeqNum`)"
          },
          {
            "name": "index_StatementEntity_statementPersonUid",
            "unique": false,
            "columnNames": [
              "statementPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StatementEntity_statementPersonUid` ON `${TABLE_NAME}` (`statementPersonUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContextXObjectStatementJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contextXObjectStatementJoinUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `contextActivityFlag` INTEGER NOT NULL, `contextStatementUid` INTEGER NOT NULL, `contextXObjectUid` INTEGER NOT NULL, `verbMasterChangeSeqNum` INTEGER NOT NULL, `verbLocalChangeSeqNum` INTEGER NOT NULL, `verbLastChangedBy` INTEGER NOT NULL, `contextXObjectLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "contextXObjectStatementJoinUid",
            "columnName": "contextXObjectStatementJoinUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextActivityFlag",
            "columnName": "contextActivityFlag",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextStatementUid",
            "columnName": "contextStatementUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextXObjectUid",
            "columnName": "contextXObjectUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbMasterChangeSeqNum",
            "columnName": "verbMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLocalChangeSeqNum",
            "columnName": "verbLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verbLastChangedBy",
            "columnName": "verbLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextXObjectLct",
            "columnName": "contextXObjectLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contextXObjectStatementJoinUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "AgentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`agentUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `agentMbox` TEXT, `agentMbox_sha1sum` TEXT, `agentOpenid` TEXT, `agentAccountName` TEXT, `agentHomePage` TEXT, `agentPersonUid` INTEGER NOT NULL, `statementMasterChangeSeqNum` INTEGER NOT NULL, `statementLocalChangeSeqNum` INTEGER NOT NULL, `statementLastChangedBy` INTEGER NOT NULL, `agentLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "agentUid",
            "columnName": "agentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "agentMbox",
            "columnName": "agentMbox",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentMbox_sha1sum",
            "columnName": "agentMbox_sha1sum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentOpenid",
            "columnName": "agentOpenid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentAccountName",
            "columnName": "agentAccountName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentHomePage",
            "columnName": "agentHomePage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentPersonUid",
            "columnName": "agentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementMasterChangeSeqNum",
            "columnName": "statementMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLocalChangeSeqNum",
            "columnName": "statementLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLastChangedBy",
            "columnName": "statementLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "agentLct",
            "columnName": "agentLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "agentUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`stateUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `stateId` TEXT, `agentUid` INTEGER NOT NULL, `activityId` TEXT, `registration` TEXT, `isIsactive` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `stateMasterChangeSeqNum` INTEGER NOT NULL, `stateLocalChangeSeqNum` INTEGER NOT NULL, `stateLastChangedBy` INTEGER NOT NULL, `stateLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "stateUid",
            "columnName": "stateUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateId",
            "columnName": "stateId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "agentUid",
            "columnName": "agentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "activityId",
            "columnName": "activityId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "registration",
            "columnName": "registration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isIsactive",
            "columnName": "isIsactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateMasterChangeSeqNum",
            "columnName": "stateMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateLocalChangeSeqNum",
            "columnName": "stateLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateLastChangedBy",
            "columnName": "stateLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateLct",
            "columnName": "stateLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "stateUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "StateContentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`stateContentUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `stateContentStateUid` INTEGER NOT NULL, `stateContentKey` TEXT, `stateContentValue` TEXT, `isIsactive` INTEGER NOT NULL, `stateContentMasterChangeSeqNum` INTEGER NOT NULL, `stateContentLocalChangeSeqNum` INTEGER NOT NULL, `stateContentLastChangedBy` INTEGER NOT NULL, `stateContentLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "stateContentUid",
            "columnName": "stateContentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentStateUid",
            "columnName": "stateContentStateUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentKey",
            "columnName": "stateContentKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stateContentValue",
            "columnName": "stateContentValue",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isIsactive",
            "columnName": "isIsactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentMasterChangeSeqNum",
            "columnName": "stateContentMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentLocalChangeSeqNum",
            "columnName": "stateContentLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentLastChangedBy",
            "columnName": "stateContentLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateContentLct",
            "columnName": "stateContentLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "stateContentUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "XLangMapEntry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`verbLangMapUid` INTEGER NOT NULL, `objectLangMapUid` INTEGER NOT NULL, `languageLangMapUid` INTEGER NOT NULL, `languageVariantLangMapUid` INTEGER NOT NULL, `valueLangMap` TEXT, `statementLangMapMasterCsn` INTEGER NOT NULL, `statementLangMapLocalCsn` INTEGER NOT NULL, `statementLangMapLcb` INTEGER NOT NULL, `statementLangMapLct` INTEGER NOT NULL, `statementLangMapUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "verbLangMapUid",
            "columnName": "verbLangMapUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "objectLangMapUid",
            "columnName": "objectLangMapUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languageLangMapUid",
            "columnName": "languageLangMapUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languageVariantLangMapUid",
            "columnName": "languageVariantLangMapUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "valueLangMap",
            "columnName": "valueLangMap",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statementLangMapMasterCsn",
            "columnName": "statementLangMapMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLangMapLocalCsn",
            "columnName": "statementLangMapLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLangMapLcb",
            "columnName": "statementLangMapLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLangMapLct",
            "columnName": "statementLangMapLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statementLangMapUid",
            "columnName": "statementLangMapUid",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "statementLangMapUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_XLangMapEntry_verbLangMapUid",
            "unique": false,
            "columnNames": [
              "verbLangMapUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_XLangMapEntry_verbLangMapUid` ON `${TABLE_NAME}` (`verbLangMapUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SyncNode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`nodeClientId` INTEGER NOT NULL, PRIMARY KEY(`nodeClientId`))",
        "fields": [
          {
            "fieldPath": "nodeClientId",
            "columnName": "nodeClientId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "nodeClientId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LocallyAvailableContainer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`laContainerUid` INTEGER NOT NULL, PRIMARY KEY(`laContainerUid`))",
        "fields": [
          {
            "fieldPath": "laContainerUid",
            "columnName": "laContainerUid",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "laContainerUid"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContainerETag",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ceContainerUid` INTEGER NOT NULL, `cetag` TEXT, PRIMARY KEY(`ceContainerUid`))",
        "fields": [
          {
            "fieldPath": "ceContainerUid",
            "columnName": "ceContainerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cetag",
            "columnName": "cetag",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ceContainerUid"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "School",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`schoolUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `schoolName` TEXT, `schoolDesc` TEXT, `schoolAddress` TEXT, `schoolActive` INTEGER NOT NULL, `schoolPhoneNumber` TEXT, `schoolGender` INTEGER NOT NULL, `schoolHolidayCalendarUid` INTEGER NOT NULL, `schoolFeatures` INTEGER NOT NULL, `schoolLocationLong` REAL NOT NULL, `schoolLocationLatt` REAL NOT NULL, `schoolEmailAddress` TEXT, `schoolTeachersPersonGroupUid` INTEGER NOT NULL, `schoolStudentsPersonGroupUid` INTEGER NOT NULL, `schoolPendingStudentsPersonGroupUid` INTEGER NOT NULL, `schoolCode` TEXT, `schoolMasterChangeSeqNum` INTEGER NOT NULL, `schoolLocalChangeSeqNum` INTEGER NOT NULL, `schoolLastChangedBy` INTEGER NOT NULL, `schoolLct` INTEGER NOT NULL, `schoolTimeZone` TEXT)",
        "fields": [
          {
            "fieldPath": "schoolUid",
            "columnName": "schoolUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolName",
            "columnName": "schoolName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolDesc",
            "columnName": "schoolDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolAddress",
            "columnName": "schoolAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolActive",
            "columnName": "schoolActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolPhoneNumber",
            "columnName": "schoolPhoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolGender",
            "columnName": "schoolGender",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolHolidayCalendarUid",
            "columnName": "schoolHolidayCalendarUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolFeatures",
            "columnName": "schoolFeatures",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolLocationLong",
            "columnName": "schoolLocationLong",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "schoolLocationLatt",
            "columnName": "schoolLocationLatt",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "schoolEmailAddress",
            "columnName": "schoolEmailAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolTeachersPersonGroupUid",
            "columnName": "schoolTeachersPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolStudentsPersonGroupUid",
            "columnName": "schoolStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolPendingStudentsPersonGroupUid",
            "columnName": "schoolPendingStudentsPersonGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolCode",
            "columnName": "schoolCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "schoolMasterChangeSeqNum",
            "columnName": "schoolMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolLocalChangeSeqNum",
            "columnName": "schoolLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolLastChangedBy",
            "columnName": "schoolLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolLct",
            "columnName": "schoolLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolTimeZone",
            "columnName": "schoolTimeZone",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "schoolUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SchoolMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`schoolMemberUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `schoolMemberPersonUid` INTEGER NOT NULL, `schoolMemberSchoolUid` INTEGER NOT NULL, `schoolMemberJoinDate` INTEGER NOT NULL, `schoolMemberLeftDate` INTEGER NOT NULL, `schoolMemberRole` INTEGER NOT NULL, `schoolMemberActive` INTEGER NOT NULL, `schoolMemberLocalChangeSeqNum` INTEGER NOT NULL, `schoolMemberMasterChangeSeqNum` INTEGER NOT NULL, `schoolMemberLastChangedBy` INTEGER NOT NULL, `schoolMemberLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "schoolMemberUid",
            "columnName": "schoolMemberUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberPersonUid",
            "columnName": "schoolMemberPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberSchoolUid",
            "columnName": "schoolMemberSchoolUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberJoinDate",
            "columnName": "schoolMemberJoinDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberLeftDate",
            "columnName": "schoolMemberLeftDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberRole",
            "columnName": "schoolMemberRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberActive",
            "columnName": "schoolMemberActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberLocalChangeSeqNum",
            "columnName": "schoolMemberLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberMasterChangeSeqNum",
            "columnName": "schoolMemberMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberLastChangedBy",
            "columnName": "schoolMemberLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolMemberLct",
            "columnName": "schoolMemberLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "schoolMemberUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_SchoolMember_schoolMemberSchoolUid_schoolMemberActive_schoolMemberRole",
            "unique": false,
            "columnNames": [
              "schoolMemberSchoolUid",
              "schoolMemberActive",
              "schoolMemberRole"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolMember_schoolMemberSchoolUid_schoolMemberActive_schoolMemberRole` ON `${TABLE_NAME}` (`schoolMemberSchoolUid`, `schoolMemberActive`, `schoolMemberRole`)"
          },
          {
            "name": "index_SchoolMember_schoolMemberPersonUid",
            "unique": false,
            "columnNames": [
              "schoolMemberPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolMember_schoolMemberPersonUid` ON `${TABLE_NAME}` (`schoolMemberPersonUid`)"
          },
          {
            "name": "index_SchoolMember_schoolMemberSchoolUid",
            "unique": false,
            "columnNames": [
              "schoolMemberSchoolUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolMember_schoolMemberSchoolUid` ON `${TABLE_NAME}` (`schoolMemberSchoolUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "Comments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`commentsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `commentsText` TEXT, `commentsEntityType` INTEGER NOT NULL, `commentsEntityUid` INTEGER NOT NULL, `commentsPublic` INTEGER NOT NULL, `commentsStatus` INTEGER NOT NULL, `commentsPersonUid` INTEGER NOT NULL, `commentsToPersonUid` INTEGER NOT NULL, `commentSubmitterUid` INTEGER NOT NULL, `commentsFlagged` INTEGER NOT NULL, `commentsInActive` INTEGER NOT NULL, `commentsDateTimeAdded` INTEGER NOT NULL, `commentsDateTimeUpdated` INTEGER NOT NULL, `commentsMCSN` INTEGER NOT NULL, `commentsLCSN` INTEGER NOT NULL, `commentsLCB` INTEGER NOT NULL, `commentsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "commentsUid",
            "columnName": "commentsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsText",
            "columnName": "commentsText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsEntityType",
            "columnName": "commentsEntityType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsEntityUid",
            "columnName": "commentsEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsPublic",
            "columnName": "commentsPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsStatus",
            "columnName": "commentsStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsPersonUid",
            "columnName": "commentsPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsToPersonUid",
            "columnName": "commentsToPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentSubmitterUid",
            "columnName": "commentSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsFlagged",
            "columnName": "commentsFlagged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsInActive",
            "columnName": "commentsInActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsDateTimeAdded",
            "columnName": "commentsDateTimeAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsDateTimeUpdated",
            "columnName": "commentsDateTimeUpdated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsMCSN",
            "columnName": "commentsMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsLCSN",
            "columnName": "commentsLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsLCB",
            "columnName": "commentsLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsLct",
            "columnName": "commentsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "commentsUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Report",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`reportUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `reportOwnerUid` INTEGER NOT NULL, `xAxis` INTEGER NOT NULL, `reportDateRangeSelection` INTEGER NOT NULL, `fromDate` INTEGER NOT NULL, `fromRelTo` INTEGER NOT NULL, `fromRelOffSet` INTEGER NOT NULL, `fromRelUnit` INTEGER NOT NULL, `toDate` INTEGER NOT NULL, `toRelTo` INTEGER NOT NULL, `toRelOffSet` INTEGER NOT NULL, `toRelUnit` INTEGER NOT NULL, `reportTitle` TEXT, `reportDescription` TEXT, `reportSeries` TEXT, `reportInactive` INTEGER NOT NULL, `isTemplate` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `reportTitleId` INTEGER NOT NULL, `reportDescId` INTEGER NOT NULL, `reportMasterChangeSeqNum` INTEGER NOT NULL, `reportLocalChangeSeqNum` INTEGER NOT NULL, `reportLastChangedBy` INTEGER NOT NULL, `reportLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "reportUid",
            "columnName": "reportUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportOwnerUid",
            "columnName": "reportOwnerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xAxis",
            "columnName": "xAxis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportDateRangeSelection",
            "columnName": "reportDateRangeSelection",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromDate",
            "columnName": "fromDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelTo",
            "columnName": "fromRelTo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelOffSet",
            "columnName": "fromRelOffSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromRelUnit",
            "columnName": "fromRelUnit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toDate",
            "columnName": "toDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelTo",
            "columnName": "toRelTo",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelOffSet",
            "columnName": "toRelOffSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toRelUnit",
            "columnName": "toRelUnit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportTitle",
            "columnName": "reportTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportDescription",
            "columnName": "reportDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportSeries",
            "columnName": "reportSeries",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reportInactive",
            "columnName": "reportInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTemplate",
            "columnName": "isTemplate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportTitleId",
            "columnName": "reportTitleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportDescId",
            "columnName": "reportDescId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportMasterChangeSeqNum",
            "columnName": "reportMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLocalChangeSeqNum",
            "columnName": "reportLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLastChangedBy",
            "columnName": "reportLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportLct",
            "columnName": "reportLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "reportUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Site",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`siteUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sitePcsn` INTEGER NOT NULL, `siteLcsn` INTEGER NOT NULL, `siteLcb` INTEGER NOT NULL, `siteLct` INTEGER NOT NULL, `siteName` TEXT, `guestLogin` INTEGER NOT NULL, `registrationAllowed` INTEGER NOT NULL, `authSalt` TEXT)",
        "fields": [
          {
            "fieldPath": "siteUid",
            "columnName": "siteUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sitePcsn",
            "columnName": "sitePcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLcsn",
            "columnName": "siteLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLcb",
            "columnName": "siteLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteLct",
            "columnName": "siteLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteName",
            "columnName": "siteName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "guestLogin",
            "columnName": "guestLogin",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "registrationAllowed",
            "columnName": "registrationAllowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authSalt",
            "columnName": "authSalt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "siteUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContainerImportJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cijUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cijContainerUid` INTEGER NOT NULL, `cijUri` TEXT, `cijImportMode` INTEGER NOT NULL, `cijContainerBaseDir` TEXT, `cijContentEntryUid` INTEGER NOT NULL, `cijMimeType` TEXT, `cijSessionId` TEXT, `cijJobStatus` INTEGER NOT NULL, `cijBytesSoFar` INTEGER NOT NULL, `cijImportCompleted` INTEGER NOT NULL, `cijContentLength` INTEGER NOT NULL, `cijContainerEntryFileUids` TEXT, `cijConversionParams` TEXT)",
        "fields": [
          {
            "fieldPath": "cijUid",
            "columnName": "cijUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijContainerUid",
            "columnName": "cijContainerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijUri",
            "columnName": "cijUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cijImportMode",
            "columnName": "cijImportMode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijContainerBaseDir",
            "columnName": "cijContainerBaseDir",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cijContentEntryUid",
            "columnName": "cijContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijMimeType",
            "columnName": "cijMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cijSessionId",
            "columnName": "cijSessionId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cijJobStatus",
            "columnName": "cijJobStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijBytesSoFar",
            "columnName": "cijBytesSoFar",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijImportCompleted",
            "columnName": "cijImportCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijContentLength",
            "columnName": "cijContentLength",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cijContainerEntryFileUids",
            "columnName": "cijContainerEntryFileUids",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cijConversionParams",
            "columnName": "cijConversionParams",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cijUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LearnerGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`learnerGroupUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `learnerGroupName` TEXT, `learnerGroupDescription` TEXT, `learnerGroupActive` INTEGER NOT NULL, `learnerGroupMCSN` INTEGER NOT NULL, `learnerGroupCSN` INTEGER NOT NULL, `learnerGroupLCB` INTEGER NOT NULL, `learnerGroupLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "learnerGroupUid",
            "columnName": "learnerGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupName",
            "columnName": "learnerGroupName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "learnerGroupDescription",
            "columnName": "learnerGroupDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "learnerGroupActive",
            "columnName": "learnerGroupActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMCSN",
            "columnName": "learnerGroupMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupCSN",
            "columnName": "learnerGroupCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupLCB",
            "columnName": "learnerGroupLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupLct",
            "columnName": "learnerGroupLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "learnerGroupUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LearnerGroupMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`learnerGroupMemberUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `learnerGroupMemberPersonUid` INTEGER NOT NULL, `learnerGroupMemberLgUid` INTEGER NOT NULL, `learnerGroupMemberRole` INTEGER NOT NULL, `learnerGroupMemberActive` INTEGER NOT NULL, `learnerGroupMemberMCSN` INTEGER NOT NULL, `learnerGroupMemberCSN` INTEGER NOT NULL, `learnerGroupMemberLCB` INTEGER NOT NULL, `learnerGroupMemberLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "learnerGroupMemberUid",
            "columnName": "learnerGroupMemberUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberPersonUid",
            "columnName": "learnerGroupMemberPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberLgUid",
            "columnName": "learnerGroupMemberLgUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberRole",
            "columnName": "learnerGroupMemberRole",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberActive",
            "columnName": "learnerGroupMemberActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberMCSN",
            "columnName": "learnerGroupMemberMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberCSN",
            "columnName": "learnerGroupMemberCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberLCB",
            "columnName": "learnerGroupMemberLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "learnerGroupMemberLct",
            "columnName": "learnerGroupMemberLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "learnerGroupMemberUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GroupLearningSession",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`groupLearningSessionUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupLearningSessionContentUid` INTEGER NOT NULL, `groupLearningSessionLearnerGroupUid` INTEGER NOT NULL, `groupLearningSessionInactive` INTEGER NOT NULL, `groupLearningSessionMCSN` INTEGER NOT NULL, `groupLearningSessionCSN` INTEGER NOT NULL, `groupLearningSessionLCB` INTEGER NOT NULL, `groupLearningSessionLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "groupLearningSessionUid",
            "columnName": "groupLearningSessionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionContentUid",
            "columnName": "groupLearningSessionContentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionLearnerGroupUid",
            "columnName": "groupLearningSessionLearnerGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionInactive",
            "columnName": "groupLearningSessionInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionMCSN",
            "columnName": "groupLearningSessionMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionCSN",
            "columnName": "groupLearningSessionCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionLCB",
            "columnName": "groupLearningSessionLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupLearningSessionLct",
            "columnName": "groupLearningSessionLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "groupLearningSessionUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SiteTerms",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sTermsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `termsHtml` TEXT, `sTermsLang` TEXT, `sTermsLangUid` INTEGER NOT NULL, `sTermsActive` INTEGER NOT NULL, `sTermsLastChangedBy` INTEGER NOT NULL, `sTermsPrimaryCsn` INTEGER NOT NULL, `sTermsLocalCsn` INTEGER NOT NULL, `sTermsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "sTermsUid",
            "columnName": "sTermsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "termsHtml",
            "columnName": "termsHtml",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sTermsLang",
            "columnName": "sTermsLang",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sTermsLangUid",
            "columnName": "sTermsLangUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsActive",
            "columnName": "sTermsActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLastChangedBy",
            "columnName": "sTermsLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsPrimaryCsn",
            "columnName": "sTermsPrimaryCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLocalCsn",
            "columnName": "sTermsLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sTermsLct",
            "columnName": "sTermsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sTermsUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzContentJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ccjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ccjContentEntryUid` INTEGER NOT NULL, `ccjClazzUid` INTEGER NOT NULL, `ccjActive` INTEGER NOT NULL, `ccjLocalChangeSeqNum` INTEGER NOT NULL, `ccjMasterChangeSeqNum` INTEGER NOT NULL, `ccjLastChangedBy` INTEGER NOT NULL, `ccjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ccjUid",
            "columnName": "ccjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjContentEntryUid",
            "columnName": "ccjContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjClazzUid",
            "columnName": "ccjClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjActive",
            "columnName": "ccjActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjLocalChangeSeqNum",
            "columnName": "ccjLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjMasterChangeSeqNum",
            "columnName": "ccjMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjLastChangedBy",
            "columnName": "ccjLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjLct",
            "columnName": "ccjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ccjUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ClazzContentJoin_ccjContentEntryUid",
            "unique": false,
            "columnNames": [
              "ccjContentEntryUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzContentJoin_ccjContentEntryUid` ON `${TABLE_NAME}` (`ccjContentEntryUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonParentJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ppjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ppjPcsn` INTEGER NOT NULL, `ppjLcsn` INTEGER NOT NULL, `ppjLcb` INTEGER NOT NULL, `ppjLct` INTEGER NOT NULL, `ppjParentPersonUid` INTEGER NOT NULL, `ppjMinorPersonUid` INTEGER NOT NULL, `ppjRelationship` INTEGER NOT NULL, `ppjEmail` TEXT, `ppjPhone` TEXT, `ppjInactive` INTEGER NOT NULL, `ppjStatus` INTEGER NOT NULL, `ppjApprovalTiemstamp` INTEGER NOT NULL, `ppjApprovalIpAddr` TEXT)",
        "fields": [
          {
            "fieldPath": "ppjUid",
            "columnName": "ppjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjPcsn",
            "columnName": "ppjPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLcsn",
            "columnName": "ppjLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLcb",
            "columnName": "ppjLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjLct",
            "columnName": "ppjLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjParentPersonUid",
            "columnName": "ppjParentPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjMinorPersonUid",
            "columnName": "ppjMinorPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjRelationship",
            "columnName": "ppjRelationship",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjEmail",
            "columnName": "ppjEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppjPhone",
            "columnName": "ppjPhone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ppjInactive",
            "columnName": "ppjInactive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjStatus",
            "columnName": "ppjStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjApprovalTiemstamp",
            "columnName": "ppjApprovalTiemstamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjApprovalIpAddr",
            "columnName": "ppjApprovalIpAddr",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ppjUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ScopedGrant",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sgUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sgPcsn` INTEGER NOT NULL, `sgLcsn` INTEGER NOT NULL, `sgLcb` INTEGER NOT NULL, `sgLct` INTEGER NOT NULL, `sgTableId` INTEGER NOT NULL, `sgEntityUid` INTEGER NOT NULL, `sgPermissions` INTEGER NOT NULL, `sgGroupUid` INTEGER NOT NULL, `sgIndex` INTEGER NOT NULL, `sgFlags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "sgUid",
            "columnName": "sgUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgPcsn",
            "columnName": "sgPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLcsn",
            "columnName": "sgLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLcb",
            "columnName": "sgLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgLct",
            "columnName": "sgLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgTableId",
            "columnName": "sgTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgEntityUid",
            "columnName": "sgEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgPermissions",
            "columnName": "sgPermissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgGroupUid",
            "columnName": "sgGroupUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgIndex",
            "columnName": "sgIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgFlags",
            "columnName": "sgFlags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sgUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "idx_group_to_entity",
            "unique": false,
            "columnNames": [
              "sgGroupUid",
              "sgPermissions",
              "sgTableId",
              "sgEntityUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_group_to_entity` ON `${TABLE_NAME}` (`sgGroupUid`, `sgPermissions`, `sgTableId`, `sgEntityUid`)"
          },
          {
            "name": "idx_entity_to_group",
            "unique": false,
            "columnNames": [
              "sgTableId",
              "sgEntityUid",
              "sgPermissions",
              "sgGroupUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `idx_entity_to_group` ON `${TABLE_NAME}` (`sgTableId`, `sgEntityUid`, `sgPermissions`, `sgGroupUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ErrorReport",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`errUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `errPcsn` INTEGER NOT NULL, `errLcsn` INTEGER NOT NULL, `errLcb` INTEGER NOT NULL, `errLct` INTEGER NOT NULL, `severity` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `presenterUri` TEXT, `appVersion` TEXT, `versionCode` INTEGER NOT NULL, `errorCode` INTEGER NOT NULL, `operatingSys` TEXT, `osVersion` TEXT, `stackTrace` TEXT, `message` TEXT)",
        "fields": [
          {
            "fieldPath": "errUid",
            "columnName": "errUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errPcsn",
            "columnName": "errPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLcsn",
            "columnName": "errLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLcb",
            "columnName": "errLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errLct",
            "columnName": "errLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "severity",
            "columnName": "severity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "presenterUri",
            "columnName": "presenterUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appVersion",
            "columnName": "appVersion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorCode",
            "columnName": "errorCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "operatingSys",
            "columnName": "operatingSys",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "osVersion",
            "columnName": "osVersion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stackTrace",
            "columnName": "stackTrace",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "errUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`caUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `caTitle` TEXT, `caDescription` TEXT, `caGroupUid` INTEGER NOT NULL DEFAULT 0, `caActive` INTEGER NOT NULL, `caClassCommentEnabled` INTEGER NOT NULL, `caPrivateCommentsEnabled` INTEGER NOT NULL DEFAULT 1, `caCompletionCriteria` INTEGER NOT NULL DEFAULT 100, `caRequireFileSubmission` INTEGER NOT NULL DEFAULT 1, `caFileType` INTEGER NOT NULL DEFAULT 0, `caSizeLimit` INTEGER NOT NULL DEFAULT 50, `caNumberOfFiles` INTEGER NOT NULL DEFAULT 1, `caSubmissionPolicy` INTEGER NOT NULL DEFAULT 1, `caMarkingType` INTEGER NOT NULL DEFAULT 1, `caRequireTextSubmission` INTEGER NOT NULL DEFAULT 1, `caTextLimitType` INTEGER NOT NULL DEFAULT 1, `caTextLimit` INTEGER NOT NULL DEFAULT 500, `caXObjectUid` INTEGER NOT NULL DEFAULT 0, `caClazzUid` INTEGER NOT NULL, `caLocalChangeSeqNum` INTEGER NOT NULL, `caMasterChangeSeqNum` INTEGER NOT NULL, `caLastChangedBy` INTEGER NOT NULL, `caLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "caUid",
            "columnName": "caUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caTitle",
            "columnName": "caTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caDescription",
            "columnName": "caDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caGroupUid",
            "columnName": "caGroupUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caActive",
            "columnName": "caActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caClassCommentEnabled",
            "columnName": "caClassCommentEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caPrivateCommentsEnabled",
            "columnName": "caPrivateCommentsEnabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caCompletionCriteria",
            "columnName": "caCompletionCriteria",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "100"
          },
          {
            "fieldPath": "caRequireFileSubmission",
            "columnName": "caRequireFileSubmission",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caFileType",
            "columnName": "caFileType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caSizeLimit",
            "columnName": "caSizeLimit",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "50"
          },
          {
            "fieldPath": "caNumberOfFiles",
            "columnName": "caNumberOfFiles",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caSubmissionPolicy",
            "columnName": "caSubmissionPolicy",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caMarkingType",
            "columnName": "caMarkingType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caRequireTextSubmission",
            "columnName": "caRequireTextSubmission",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caTextLimitType",
            "columnName": "caTextLimitType",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          },
          {
            "fieldPath": "caTextLimit",
            "columnName": "caTextLimit",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "500"
          },
          {
            "fieldPath": "caXObjectUid",
            "columnName": "caXObjectUid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caClazzUid",
            "columnName": "caClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caLocalChangeSeqNum",
            "columnName": "caLocalChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caMasterChangeSeqNum",
            "columnName": "caMasterChangeSeqNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caLastChangedBy",
            "columnName": "caLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caLct",
            "columnName": "caLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "caUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ClazzAssignment_caClazzUid",
            "unique": false,
            "columnNames": [
              "caClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignment_caClazzUid` ON `${TABLE_NAME}` (`caClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignmentContentJoin",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cacjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cacjContentUid` INTEGER NOT NULL, `cacjAssignmentUid` INTEGER NOT NULL, `cacjActive` INTEGER NOT NULL, `cacjWeight` INTEGER NOT NULL DEFAULT 0, `cacjMCSN` INTEGER NOT NULL, `cacjLCSN` INTEGER NOT NULL, `cacjLCB` INTEGER NOT NULL, `cacjLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cacjUid",
            "columnName": "cacjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjContentUid",
            "columnName": "cacjContentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjAssignmentUid",
            "columnName": "cacjAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjActive",
            "columnName": "cacjActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjWeight",
            "columnName": "cacjWeight",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cacjMCSN",
            "columnName": "cacjMCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjLCSN",
            "columnName": "cacjLCSN",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjLCB",
            "columnName": "cacjLCB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjLct",
            "columnName": "cacjLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cacjUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `casAssignmentUid` INTEGER NOT NULL, `casSubmitterUid` INTEGER NOT NULL, `casSubmitterPersonUid` INTEGER NOT NULL, `casText` TEXT, `casType` INTEGER NOT NULL, `casTimestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "casUid",
            "columnName": "casUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casAssignmentUid",
            "columnName": "casAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casSubmitterUid",
            "columnName": "casSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casSubmitterPersonUid",
            "columnName": "casSubmitterPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casText",
            "columnName": "casText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casType",
            "columnName": "casType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casTimestamp",
            "columnName": "casTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "casUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmissionAttachment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casaUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `casaSubmissionUid` INTEGER NOT NULL, `casaMimeType` TEXT, `casaUri` TEXT, `casaMd5` TEXT, `casaSize` INTEGER NOT NULL, `casaTimestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "casaUid",
            "columnName": "casaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaSubmissionUid",
            "columnName": "casaSubmissionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaMimeType",
            "columnName": "casaMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaUri",
            "columnName": "casaUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaMd5",
            "columnName": "casaMd5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "casaSize",
            "columnName": "casaSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaTimestamp",
            "columnName": "casaTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "casaUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentMark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`camUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `camAssignmentUid` INTEGER NOT NULL, `camSubmitterUid` INTEGER NOT NULL, `camMark` REAL NOT NULL, `camPenalty` INTEGER NOT NULL, `camLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "camUid",
            "columnName": "camUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camAssignmentUid",
            "columnName": "camAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camSubmitterUid",
            "columnName": "camSubmitterUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camMark",
            "columnName": "camMark",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "camPenalty",
            "columnName": "camPenalty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camLct",
            "columnName": "camLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "camUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignmentRollUp",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cacheUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cachePersonUid` INTEGER NOT NULL, `cacheContentEntryUid` INTEGER NOT NULL, `cacheClazzAssignmentUid` INTEGER NOT NULL, `cacheStudentScore` INTEGER NOT NULL, `cacheMaxScore` INTEGER NOT NULL, `cacheFinalWeightScoreWithPenalty` REAL NOT NULL DEFAULT 0, `cacheWeight` INTEGER NOT NULL DEFAULT 0, `cacheProgress` INTEGER NOT NULL, `cacheContentComplete` INTEGER NOT NULL, `cacheSuccess` INTEGER NOT NULL, `cachePenalty` INTEGER NOT NULL, `lastCsnChecked` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cacheUid",
            "columnName": "cacheUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cachePersonUid",
            "columnName": "cachePersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheContentEntryUid",
            "columnName": "cacheContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheClazzAssignmentUid",
            "columnName": "cacheClazzAssignmentUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheStudentScore",
            "columnName": "cacheStudentScore",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheMaxScore",
            "columnName": "cacheMaxScore",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheFinalWeightScoreWithPenalty",
            "columnName": "cacheFinalWeightScoreWithPenalty",
            "affinity": "REAL",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cacheWeight",
            "columnName": "cacheWeight",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cacheProgress",
            "columnName": "cacheProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheContentComplete",
            "columnName": "cacheContentComplete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacheSuccess",
            "columnName": "cacheSuccess",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cachePenalty",
            "columnName": "cachePenalty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastCsnChecked",
            "columnName": "lastCsnChecked",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cacheUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ClazzAssignmentRollUp_cachePersonUid_cacheContentEntryUid_cacheClazzAssignmentUid",
            "unique": true,
            "columnNames": [
              "cachePersonUid",
              "cacheContentEntryUid",
              "cacheClazzAssignmentUid"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ClazzAssignmentRollUp_cachePersonUid_cacheContentEntryUid_cacheClazzAssignmentUid` ON `${TABLE_NAME}` (`cachePersonUid`, `cacheContentEntryUid`, `cacheClazzAssignmentUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonAuth2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pauthUid` INTEGER NOT NULL, `pauthMechanism` TEXT, `pauthAuth` TEXT, `pauthLcsn` INTEGER NOT NULL, `pauthPcsn` INTEGER NOT NULL, `pauthLcb` INTEGER NOT NULL, `pauthLct` INTEGER NOT NULL, PRIMARY KEY(`pauthUid`))",
        "fields": [
          {
            "fieldPath": "pauthUid",
            "columnName": "pauthUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthMechanism",
            "columnName": "pauthMechanism",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pauthAuth",
            "columnName": "pauthAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pauthLcsn",
            "columnName": "pauthLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthPcsn",
            "columnName": "pauthPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthLcb",
            "columnName": "pauthLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pauthLct",
            "columnName": "pauthLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "pauthUid"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserSession",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`usUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `usPcsn` INTEGER NOT NULL, `usLcsn` INTEGER NOT NULL, `usLcb` INTEGER NOT NULL, `usLct` INTEGER NOT NULL, `usPersonUid` INTEGER NOT NULL, `usClientNodeId` INTEGER NOT NULL, `usStartTime` INTEGER NOT NULL, `usEndTime` INTEGER NOT NULL, `usStatus` INTEGER NOT NULL, `usReason` INTEGER NOT NULL, `usAuth` TEXT, `usSessionType` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "usUid",
            "columnName": "usUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usPcsn",
            "columnName": "usPcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLcsn",
            "columnName": "usLcsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLcb",
            "columnName": "usLcb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usLct",
            "columnName": "usLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usPersonUid",
            "columnName": "usPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usClientNodeId",
            "columnName": "usClientNodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usStartTime",
            "columnName": "usStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usEndTime",
            "columnName": "usEndTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usStatus",
            "columnName": "usStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usReason",
            "columnName": "usReason",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usAuth",
            "columnName": "usAuth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "usSessionType",
            "columnName": "usSessionType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "usUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "person_status_node_idx",
            "unique": false,
            "columnNames": [
              "usPersonUid",
              "usStatus",
              "usClientNodeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `person_status_node_idx` ON `${TABLE_NAME}` (`usPersonUid`, `usStatus`, `usClientNodeId`)"
          },
          {
            "name": "node_status_person_idx",
            "unique": false,
            "columnNames": [
              "usClientNodeId",
              "usStatus",
              "usPersonUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `node_status_person_idx` ON `${TABLE_NAME}` (`usClientNodeId`, `usStatus`, `usPersonUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentJob",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cjUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `toUri` TEXT, `cjProgress` INTEGER NOT NULL, `cjTotal` INTEGER NOT NULL, `cjNotificationTitle` TEXT, `cjIsMeteredAllowed` INTEGER NOT NULL, `params` TEXT)",
        "fields": [
          {
            "fieldPath": "cjUid",
            "columnName": "cjUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toUri",
            "columnName": "toUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjProgress",
            "columnName": "cjProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjTotal",
            "columnName": "cjTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjNotificationTitle",
            "columnName": "cjNotificationTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjIsMeteredAllowed",
            "columnName": "cjIsMeteredAllowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cjUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ContentJobItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cjiUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cjiJobUid` INTEGER NOT NULL, `sourceUri` TEXT, `cjiIsLeaf` INTEGER NOT NULL, `cjiContentEntryUid` INTEGER NOT NULL, `cjiParentContentEntryUid` INTEGER NOT NULL, `cjiContainerUid` INTEGER NOT NULL, `cjiItemProgress` INTEGER NOT NULL, `cjiItemTotal` INTEGER NOT NULL, `cjiRecursiveProgress` INTEGER NOT NULL, `cjiRecursiveTotal` INTEGER NOT NULL, `cjiStatus` INTEGER NOT NULL, `cjiRecursiveStatus` INTEGER NOT NULL, `cjiConnectivityNeeded` INTEGER NOT NULL, `cjiPluginId` INTEGER NOT NULL, `cjiAttemptCount` INTEGER NOT NULL, `cjiParentCjiUid` INTEGER NOT NULL, `cjiServerJobId` INTEGER NOT NULL, `cjiStartTime` INTEGER NOT NULL, `cjiFinishTime` INTEGER NOT NULL, `cjiUploadSessionUid` TEXT, `cjiContentDeletedOnCancellation` INTEGER NOT NULL, `cjiContainerProcessed` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cjiUid",
            "columnName": "cjiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiJobUid",
            "columnName": "cjiJobUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceUri",
            "columnName": "sourceUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjiIsLeaf",
            "columnName": "cjiIsLeaf",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiContentEntryUid",
            "columnName": "cjiContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiParentContentEntryUid",
            "columnName": "cjiParentContentEntryUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiContainerUid",
            "columnName": "cjiContainerUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiItemProgress",
            "columnName": "cjiItemProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiItemTotal",
            "columnName": "cjiItemTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiRecursiveProgress",
            "columnName": "cjiRecursiveProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiRecursiveTotal",
            "columnName": "cjiRecursiveTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiStatus",
            "columnName": "cjiStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiRecursiveStatus",
            "columnName": "cjiRecursiveStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiConnectivityNeeded",
            "columnName": "cjiConnectivityNeeded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiPluginId",
            "columnName": "cjiPluginId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiAttemptCount",
            "columnName": "cjiAttemptCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiParentCjiUid",
            "columnName": "cjiParentCjiUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiServerJobId",
            "columnName": "cjiServerJobId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiStartTime",
            "columnName": "cjiStartTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiFinishTime",
            "columnName": "cjiFinishTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiUploadSessionUid",
            "columnName": "cjiUploadSessionUid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cjiContentDeletedOnCancellation",
            "columnName": "cjiContentDeletedOnCancellation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cjiContainerProcessed",
            "columnName": "cjiContainerProcessed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cjiUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ContentJobItem_cjiContentEntryUid_cjiFinishTime",
            "unique": false,
            "columnNames": [
              "cjiContentEntryUid",
              "cjiFinishTime"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentJobItem_cjiContentEntryUid_cjiFinishTime` ON `${TABLE_NAME}` (`cjiContentEntryUid`, `cjiFinishTime`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseBlock",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cbUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cbType` INTEGER NOT NULL, `cbIndentLevel` INTEGER NOT NULL, `cbModuleParentBlockUid` INTEGER NOT NULL, `cbTitle` TEXT, `cbDescription` TEXT, `cbCompletionCriteria` INTEGER NOT NULL, `cbHideUntilDate` INTEGER NOT NULL, `cbDeadlineDate` INTEGER NOT NULL, `cbLateSubmissionPenalty` INTEGER NOT NULL, `cbGracePeriodDate` INTEGER NOT NULL, `cbMaxPoints` INTEGER NOT NULL, `cbMinPoints` INTEGER NOT NULL, `cbIndex` INTEGER NOT NULL, `cbClazzUid` INTEGER NOT NULL, `cbActive` INTEGER NOT NULL, `cbHidden` INTEGER NOT NULL, `cbEntityUid` INTEGER NOT NULL, `cbLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cbUid",
            "columnName": "cbUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbType",
            "columnName": "cbType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbIndentLevel",
            "columnName": "cbIndentLevel",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbModuleParentBlockUid",
            "columnName": "cbModuleParentBlockUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbTitle",
            "columnName": "cbTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbDescription",
            "columnName": "cbDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cbCompletionCriteria",
            "columnName": "cbCompletionCriteria",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbHideUntilDate",
            "columnName": "cbHideUntilDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbDeadlineDate",
            "columnName": "cbDeadlineDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbLateSubmissionPenalty",
            "columnName": "cbLateSubmissionPenalty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbGracePeriodDate",
            "columnName": "cbGracePeriodDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbMaxPoints",
            "columnName": "cbMaxPoints",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbMinPoints",
            "columnName": "cbMinPoints",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbIndex",
            "columnName": "cbIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbClazzUid",
            "columnName": "cbClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbActive",
            "columnName": "cbActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbHidden",
            "columnName": "cbHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbEntityUid",
            "columnName": "cbEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbLct",
            "columnName": "cbLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cbUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_CourseBlock_cbClazzUid",
            "unique": false,
            "columnNames": [
              "cbClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseBlock_cbClazzUid` ON `${TABLE_NAME}` (`cbClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseTerminology",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ctUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ctTitle` TEXT, `ctTerminology` TEXT, `ctLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "ctUid",
            "columnName": "ctUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctTitle",
            "columnName": "ctTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ctTerminology",
            "columnName": "ctTerminology",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ctLct",
            "columnName": "ctLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ctUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupSet",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgsUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cgsName` TEXT, `cgsTotalGroups` INTEGER NOT NULL, `cgsActive` INTEGER NOT NULL, `cgsClazzUid` INTEGER NOT NULL, `cgsLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cgsUid",
            "columnName": "cgsUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsName",
            "columnName": "cgsName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cgsTotalGroups",
            "columnName": "cgsTotalGroups",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsActive",
            "columnName": "cgsActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsClazzUid",
            "columnName": "cgsClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsLct",
            "columnName": "cgsLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cgsUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_CourseGroupSet_cgsClazzUid",
            "unique": false,
            "columnNames": [
              "cgsClazzUid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupSet_cgsClazzUid` ON `${TABLE_NAME}` (`cgsClazzUid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgmUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cgmSetUid` INTEGER NOT NULL, `cgmGroupNumber` INTEGER NOT NULL, `cgmPersonUid` INTEGER NOT NULL, `cgmLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "cgmUid",
            "columnName": "cgmUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmSetUid",
            "columnName": "cgmSetUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmGroupNumber",
            "columnName": "cgmGroupNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmPersonUid",
            "columnName": "cgmPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmLct",
            "columnName": "cgmLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cgmUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SqliteChangeSeqNums",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sCsnTableId` INTEGER NOT NULL, `sCsnNextLocal` INTEGER NOT NULL, `sCsnNextPrimary` INTEGER NOT NULL, PRIMARY KEY(`sCsnTableId`))",
        "fields": [
          {
            "fieldPath": "sCsnTableId",
            "columnName": "sCsnTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sCsnNextLocal",
            "columnName": "sCsnNextLocal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sCsnNextPrimary",
            "columnName": "sCsnNextPrimary",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sCsnTableId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SqliteChangeSeqNums_sCsnNextLocal",
            "unique": false,
            "columnNames": [
              "sCsnNextLocal"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SqliteChangeSeqNums_sCsnNextLocal` ON `${TABLE_NAME}` (`sCsnNextLocal`)"
          },
          {
            "name": "index_SqliteChangeSeqNums_sCsnNextPrimary",
            "unique": false,
            "columnNames": [
              "sCsnNextPrimary"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SqliteChangeSeqNums_sCsnNextPrimary` ON `${TABLE_NAME}` (`sCsnNextPrimary`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "UpdateNotification",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pnUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `pnDeviceId` INTEGER NOT NULL, `pnTableId` INTEGER NOT NULL, `pnTimestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "pnUid",
            "columnName": "pnUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pnDeviceId",
            "columnName": "pnDeviceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pnTableId",
            "columnName": "pnTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pnTimestamp",
            "columnName": "pnTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "pnUid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_UpdateNotification_pnDeviceId_pnTableId",
            "unique": true,
            "columnNames": [
              "pnDeviceId",
              "pnTableId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_UpdateNotification_pnDeviceId_pnTableId` ON `${TABLE_NAME}` (`pnDeviceId`, `pnTableId`)"
          },
          {
            "name": "index_UpdateNotification_pnDeviceId_pnTimestamp",
            "unique": false,
            "columnNames": [
              "pnDeviceId",
              "pnTimestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UpdateNotification_pnDeviceId_pnTimestamp` ON `${TABLE_NAME}` (`pnDeviceId`, `pnTimestamp`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ChangeLog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chTableId` INTEGER NOT NULL, `chEntityPk` INTEGER NOT NULL, `chType` INTEGER NOT NULL, PRIMARY KEY(`chTableId`, `chEntityPk`))",
        "fields": [
          {
            "fieldPath": "chTableId",
            "columnName": "chTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chEntityPk",
            "columnName": "chEntityPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chType",
            "columnName": "chType",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chTableId",
            "chEntityPk"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ZombieAttachmentData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`zaUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `zaUri` TEXT)",
        "fields": [
          {
            "fieldPath": "zaUid",
            "columnName": "zaUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zaUri",
            "columnName": "zaUri",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "zaUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DoorNode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`nodeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `auth` TEXT, `rel` INTEGER NOT NULL DEFAULT 2)",
        "fields": [
          {
            "fieldPath": "nodeId",
            "columnName": "nodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "auth",
            "columnName": "auth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rel",
            "columnName": "rel",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "2"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "nodeId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ReplicationStatus",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`repStatusId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `tableId` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `nodeId` INTEGER NOT NULL, `lastRemoteChangeTime` INTEGER NOT NULL, `lastFetchReplicationCompleteTime` INTEGER NOT NULL, `lastLocalChangeTime` INTEGER NOT NULL, `lastSendReplicationCompleteTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "repStatusId",
            "columnName": "repStatusId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tableId",
            "columnName": "tableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nodeId",
            "columnName": "nodeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastRemoteChangeTime",
            "columnName": "lastRemoteChangeTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastFetchReplicationCompleteTime",
            "columnName": "lastFetchReplicationCompleteTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastLocalChangeTime",
            "columnName": "lastLocalChangeTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSendReplicationCompleteTime",
            "columnName": "lastSendReplicationCompleteTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "repStatusId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "table_node_idx",
            "unique": true,
            "columnNames": [
              "tableId",
              "nodeId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `table_node_idx` ON `${TABLE_NAME}` (`tableId`, `nodeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzLogReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clPk` INTEGER NOT NULL, `clVersionId` INTEGER NOT NULL DEFAULT 0, `clDestination` INTEGER NOT NULL, `clPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`clPk`, `clDestination`))",
        "fields": [
          {
            "fieldPath": "clPk",
            "columnName": "clPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clVersionId",
            "columnName": "clVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "clDestination",
            "columnName": "clDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clPending",
            "columnName": "clPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clPk",
            "clDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzLogReplicate_clPk_clDestination_clVersionId",
            "unique": false,
            "columnNames": [
              "clPk",
              "clDestination",
              "clVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzLogReplicate_clPk_clDestination_clVersionId` ON `${TABLE_NAME}` (`clPk`, `clDestination`, `clVersionId`)"
          },
          {
            "name": "index_ClazzLogReplicate_clDestination_clPending",
            "unique": false,
            "columnNames": [
              "clDestination",
              "clPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzLogReplicate_clDestination_clPending` ON `${TABLE_NAME}` (`clDestination`, `clPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzLogAttendanceRecordReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clarPk` INTEGER NOT NULL, `clarVersionId` INTEGER NOT NULL DEFAULT 0, `clarDestination` INTEGER NOT NULL, `clarPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`clarPk`, `clarDestination`))",
        "fields": [
          {
            "fieldPath": "clarPk",
            "columnName": "clarPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clarVersionId",
            "columnName": "clarVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "clarDestination",
            "columnName": "clarDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clarPending",
            "columnName": "clarPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clarPk",
            "clarDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzLogAttendanceRecordReplicate_clarPk_clarDestination_clarVersionId",
            "unique": false,
            "columnNames": [
              "clarPk",
              "clarDestination",
              "clarVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzLogAttendanceRecordReplicate_clarPk_clarDestination_clarVersionId` ON `${TABLE_NAME}` (`clarPk`, `clarDestination`, `clarVersionId`)"
          },
          {
            "name": "index_ClazzLogAttendanceRecordReplicate_clarDestination_clarPending",
            "unique": false,
            "columnNames": [
              "clarDestination",
              "clarPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzLogAttendanceRecordReplicate_clarDestination_clarPending` ON `${TABLE_NAME}` (`clarDestination`, `clarPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmissionReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casPk` INTEGER NOT NULL, `casVersionId` INTEGER NOT NULL DEFAULT 0, `casDestination` INTEGER NOT NULL, `casPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`casPk`, `casDestination`))",
        "fields": [
          {
            "fieldPath": "casPk",
            "columnName": "casPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casVersionId",
            "columnName": "casVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "casDestination",
            "columnName": "casDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casPending",
            "columnName": "casPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "casPk",
            "casDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseAssignmentSubmissionReplicate_casPk_casDestination_casVersionId",
            "unique": false,
            "columnNames": [
              "casPk",
              "casDestination",
              "casVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentSubmissionReplicate_casPk_casDestination_casVersionId` ON `${TABLE_NAME}` (`casPk`, `casDestination`, `casVersionId`)"
          },
          {
            "name": "index_CourseAssignmentSubmissionReplicate_casDestination_casPending",
            "unique": false,
            "columnNames": [
              "casDestination",
              "casPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentSubmissionReplicate_casDestination_casPending` ON `${TABLE_NAME}` (`casDestination`, `casPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentSubmissionAttachmentReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`casaPk` INTEGER NOT NULL, `casaVersionId` INTEGER NOT NULL DEFAULT 0, `casaDestination` INTEGER NOT NULL, `casaPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`casaPk`, `casaDestination`))",
        "fields": [
          {
            "fieldPath": "casaPk",
            "columnName": "casaPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaVersionId",
            "columnName": "casaVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "casaDestination",
            "columnName": "casaDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "casaPending",
            "columnName": "casaPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "casaPk",
            "casaDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseAssignmentSubmissionAttachmentReplicate_casaPk_casaDestination_casaVersionId",
            "unique": false,
            "columnNames": [
              "casaPk",
              "casaDestination",
              "casaVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentSubmissionAttachmentReplicate_casaPk_casaDestination_casaVersionId` ON `${TABLE_NAME}` (`casaPk`, `casaDestination`, `casaVersionId`)"
          },
          {
            "name": "index_CourseAssignmentSubmissionAttachmentReplicate_casaDestination_casaPending",
            "unique": false,
            "columnNames": [
              "casaDestination",
              "casaPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentSubmissionAttachmentReplicate_casaDestination_casaPending` ON `${TABLE_NAME}` (`casaDestination`, `casaPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseAssignmentMarkReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`camPk` INTEGER NOT NULL, `camVersionId` INTEGER NOT NULL DEFAULT 0, `camDestination` INTEGER NOT NULL, `camPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`camPk`, `camDestination`))",
        "fields": [
          {
            "fieldPath": "camPk",
            "columnName": "camPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camVersionId",
            "columnName": "camVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "camDestination",
            "columnName": "camDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "camPending",
            "columnName": "camPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "camPk",
            "camDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseAssignmentMarkReplicate_camPk_camDestination_camVersionId",
            "unique": false,
            "columnNames": [
              "camPk",
              "camDestination",
              "camVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentMarkReplicate_camPk_camDestination_camVersionId` ON `${TABLE_NAME}` (`camPk`, `camDestination`, `camVersionId`)"
          },
          {
            "name": "index_CourseAssignmentMarkReplicate_camDestination_camPending",
            "unique": false,
            "columnNames": [
              "camDestination",
              "camPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseAssignmentMarkReplicate_camDestination_camPending` ON `${TABLE_NAME}` (`camDestination`, `camPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseBlockReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cbPk` INTEGER NOT NULL, `cbVersionId` INTEGER NOT NULL DEFAULT 0, `cbDestination` INTEGER NOT NULL, `cbPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cbPk`, `cbDestination`))",
        "fields": [
          {
            "fieldPath": "cbPk",
            "columnName": "cbPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbVersionId",
            "columnName": "cbVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cbDestination",
            "columnName": "cbDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cbPending",
            "columnName": "cbPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cbPk",
            "cbDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseBlockReplicate_cbPk_cbDestination_cbVersionId",
            "unique": false,
            "columnNames": [
              "cbPk",
              "cbDestination",
              "cbVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseBlockReplicate_cbPk_cbDestination_cbVersionId` ON `${TABLE_NAME}` (`cbPk`, `cbDestination`, `cbVersionId`)"
          },
          {
            "name": "index_CourseBlockReplicate_cbDestination_cbPending",
            "unique": false,
            "columnNames": [
              "cbDestination",
              "cbPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseBlockReplicate_cbDestination_cbPending` ON `${TABLE_NAME}` (`cbDestination`, `cbPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseTerminologyReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ctPk` INTEGER NOT NULL, `ctVersionId` INTEGER NOT NULL DEFAULT 0, `ctDestination` INTEGER NOT NULL, `ctPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ctPk`, `ctDestination`))",
        "fields": [
          {
            "fieldPath": "ctPk",
            "columnName": "ctPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctVersionId",
            "columnName": "ctVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ctDestination",
            "columnName": "ctDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctPending",
            "columnName": "ctPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ctPk",
            "ctDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseTerminologyReplicate_ctPk_ctDestination_ctVersionId",
            "unique": false,
            "columnNames": [
              "ctPk",
              "ctDestination",
              "ctVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseTerminologyReplicate_ctPk_ctDestination_ctVersionId` ON `${TABLE_NAME}` (`ctPk`, `ctDestination`, `ctVersionId`)"
          },
          {
            "name": "index_CourseTerminologyReplicate_ctDestination_ctPending",
            "unique": false,
            "columnNames": [
              "ctDestination",
              "ctPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseTerminologyReplicate_ctDestination_ctPending` ON `${TABLE_NAME}` (`ctDestination`, `ctPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupSetReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgsPk` INTEGER NOT NULL, `cgsVersionId` INTEGER NOT NULL DEFAULT 0, `cgsDestination` INTEGER NOT NULL, `cgsPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cgsPk`, `cgsDestination`))",
        "fields": [
          {
            "fieldPath": "cgsPk",
            "columnName": "cgsPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsVersionId",
            "columnName": "cgsVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cgsDestination",
            "columnName": "cgsDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgsPending",
            "columnName": "cgsPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cgsPk",
            "cgsDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseGroupSetReplicate_cgsPk_cgsDestination_cgsVersionId",
            "unique": false,
            "columnNames": [
              "cgsPk",
              "cgsDestination",
              "cgsVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupSetReplicate_cgsPk_cgsDestination_cgsVersionId` ON `${TABLE_NAME}` (`cgsPk`, `cgsDestination`, `cgsVersionId`)"
          },
          {
            "name": "index_CourseGroupSetReplicate_cgsDestination_cgsPending",
            "unique": false,
            "columnNames": [
              "cgsDestination",
              "cgsPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupSetReplicate_cgsDestination_cgsPending` ON `${TABLE_NAME}` (`cgsDestination`, `cgsPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseGroupMemberReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cgmPk` INTEGER NOT NULL, `cgmVersionId` INTEGER NOT NULL DEFAULT 0, `cgmDestination` INTEGER NOT NULL, `cgmPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cgmPk`, `cgmDestination`))",
        "fields": [
          {
            "fieldPath": "cgmPk",
            "columnName": "cgmPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmVersionId",
            "columnName": "cgmVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cgmDestination",
            "columnName": "cgmDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cgmPending",
            "columnName": "cgmPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cgmPk",
            "cgmDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseGroupMemberReplicate_cgmPk_cgmDestination_cgmVersionId",
            "unique": false,
            "columnNames": [
              "cgmPk",
              "cgmDestination",
              "cgmVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupMemberReplicate_cgmPk_cgmDestination_cgmVersionId` ON `${TABLE_NAME}` (`cgmPk`, `cgmDestination`, `cgmVersionId`)"
          },
          {
            "name": "index_CourseGroupMemberReplicate_cgmDestination_cgmPending",
            "unique": false,
            "columnNames": [
              "cgmDestination",
              "cgmPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseGroupMemberReplicate_cgmDestination_cgmPending` ON `${TABLE_NAME}` (`cgmDestination`, `cgmPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ScheduleReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`schedulePk` INTEGER NOT NULL, `scheduleVersionId` INTEGER NOT NULL DEFAULT 0, `scheduleDestination` INTEGER NOT NULL, `schedulePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`schedulePk`, `scheduleDestination`))",
        "fields": [
          {
            "fieldPath": "schedulePk",
            "columnName": "schedulePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleVersionId",
            "columnName": "scheduleVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "scheduleDestination",
            "columnName": "scheduleDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schedulePending",
            "columnName": "schedulePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "schedulePk",
            "scheduleDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ScheduleReplicate_schedulePk_scheduleDestination_scheduleVersionId",
            "unique": false,
            "columnNames": [
              "schedulePk",
              "scheduleDestination",
              "scheduleVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ScheduleReplicate_schedulePk_scheduleDestination_scheduleVersionId` ON `${TABLE_NAME}` (`schedulePk`, `scheduleDestination`, `scheduleVersionId`)"
          },
          {
            "name": "index_ScheduleReplicate_scheduleDestination_schedulePending",
            "unique": false,
            "columnNames": [
              "scheduleDestination",
              "schedulePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ScheduleReplicate_scheduleDestination_schedulePending` ON `${TABLE_NAME}` (`scheduleDestination`, `schedulePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "HolidayCalendarReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`hcPk` INTEGER NOT NULL, `hcVersionId` INTEGER NOT NULL DEFAULT 0, `hcDestination` INTEGER NOT NULL, `hcPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`hcPk`, `hcDestination`))",
        "fields": [
          {
            "fieldPath": "hcPk",
            "columnName": "hcPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hcVersionId",
            "columnName": "hcVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "hcDestination",
            "columnName": "hcDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hcPending",
            "columnName": "hcPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "hcPk",
            "hcDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_HolidayCalendarReplicate_hcPk_hcDestination_hcVersionId",
            "unique": false,
            "columnNames": [
              "hcPk",
              "hcDestination",
              "hcVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_HolidayCalendarReplicate_hcPk_hcDestination_hcVersionId` ON `${TABLE_NAME}` (`hcPk`, `hcDestination`, `hcVersionId`)"
          },
          {
            "name": "index_HolidayCalendarReplicate_hcDestination_hcPending",
            "unique": false,
            "columnNames": [
              "hcDestination",
              "hcPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_HolidayCalendarReplicate_hcDestination_hcPending` ON `${TABLE_NAME}` (`hcDestination`, `hcPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "HolidayReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`holidayPk` INTEGER NOT NULL, `holidayVersionId` INTEGER NOT NULL DEFAULT 0, `holidayDestination` INTEGER NOT NULL, `holidayPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`holidayPk`, `holidayDestination`))",
        "fields": [
          {
            "fieldPath": "holidayPk",
            "columnName": "holidayPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holidayVersionId",
            "columnName": "holidayVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "holidayDestination",
            "columnName": "holidayDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "holidayPending",
            "columnName": "holidayPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "holidayPk",
            "holidayDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_HolidayReplicate_holidayPk_holidayDestination_holidayVersionId",
            "unique": false,
            "columnNames": [
              "holidayPk",
              "holidayDestination",
              "holidayVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_HolidayReplicate_holidayPk_holidayDestination_holidayVersionId` ON `${TABLE_NAME}` (`holidayPk`, `holidayDestination`, `holidayVersionId`)"
          },
          {
            "name": "index_HolidayReplicate_holidayDestination_holidayPending",
            "unique": false,
            "columnNames": [
              "holidayDestination",
              "holidayPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_HolidayReplicate_holidayDestination_holidayPending` ON `${TABLE_NAME}` (`holidayDestination`, `holidayPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`personPk` INTEGER NOT NULL, `personVersionId` INTEGER NOT NULL DEFAULT 0, `personDestination` INTEGER NOT NULL, `personPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`personPk`, `personDestination`))",
        "fields": [
          {
            "fieldPath": "personPk",
            "columnName": "personPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personVersionId",
            "columnName": "personVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "personDestination",
            "columnName": "personDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personPending",
            "columnName": "personPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "personPk",
            "personDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonReplicate_personPk_personDestination_personVersionId",
            "unique": false,
            "columnNames": [
              "personPk",
              "personDestination",
              "personVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonReplicate_personPk_personDestination_personVersionId` ON `${TABLE_NAME}` (`personPk`, `personDestination`, `personVersionId`)"
          },
          {
            "name": "index_PersonReplicate_personDestination_personPending",
            "unique": false,
            "columnNames": [
              "personDestination",
              "personPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonReplicate_personDestination_personPending` ON `${TABLE_NAME}` (`personDestination`, `personPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`clazzPk` INTEGER NOT NULL, `clazzVersionId` INTEGER NOT NULL DEFAULT 0, `clazzDestination` INTEGER NOT NULL, `clazzPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`clazzPk`, `clazzDestination`))",
        "fields": [
          {
            "fieldPath": "clazzPk",
            "columnName": "clazzPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzVersionId",
            "columnName": "clazzVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "clazzDestination",
            "columnName": "clazzDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clazzPending",
            "columnName": "clazzPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "clazzPk",
            "clazzDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzReplicate_clazzPk_clazzDestination_clazzVersionId",
            "unique": false,
            "columnNames": [
              "clazzPk",
              "clazzDestination",
              "clazzVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzReplicate_clazzPk_clazzDestination_clazzVersionId` ON `${TABLE_NAME}` (`clazzPk`, `clazzDestination`, `clazzVersionId`)"
          },
          {
            "name": "index_ClazzReplicate_clazzDestination_clazzPending",
            "unique": false,
            "columnNames": [
              "clazzDestination",
              "clazzPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzReplicate_clazzDestination_clazzPending` ON `${TABLE_NAME}` (`clazzDestination`, `clazzPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzEnrolmentReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cePk` INTEGER NOT NULL, `ceVersionId` INTEGER NOT NULL DEFAULT 0, `ceDestination` INTEGER NOT NULL, `cePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cePk`, `ceDestination`))",
        "fields": [
          {
            "fieldPath": "cePk",
            "columnName": "cePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceVersionId",
            "columnName": "ceVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ceDestination",
            "columnName": "ceDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cePending",
            "columnName": "cePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cePk",
            "ceDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzEnrolmentReplicate_cePk_ceDestination_ceVersionId",
            "unique": false,
            "columnNames": [
              "cePk",
              "ceDestination",
              "ceVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolmentReplicate_cePk_ceDestination_ceVersionId` ON `${TABLE_NAME}` (`cePk`, `ceDestination`, `ceVersionId`)"
          },
          {
            "name": "index_ClazzEnrolmentReplicate_ceDestination_cePending",
            "unique": false,
            "columnNames": [
              "ceDestination",
              "cePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzEnrolmentReplicate_ceDestination_cePending` ON `${TABLE_NAME}` (`ceDestination`, `cePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LeavingReasonReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`lrPk` INTEGER NOT NULL, `lrVersionId` INTEGER NOT NULL DEFAULT 0, `lrDestination` INTEGER NOT NULL, `lrPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`lrPk`, `lrDestination`))",
        "fields": [
          {
            "fieldPath": "lrPk",
            "columnName": "lrPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lrVersionId",
            "columnName": "lrVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lrDestination",
            "columnName": "lrDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lrPending",
            "columnName": "lrPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "lrPk",
            "lrDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_LeavingReasonReplicate_lrPk_lrDestination_lrVersionId",
            "unique": false,
            "columnNames": [
              "lrPk",
              "lrDestination",
              "lrVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LeavingReasonReplicate_lrPk_lrDestination_lrVersionId` ON `${TABLE_NAME}` (`lrPk`, `lrDestination`, `lrVersionId`)"
          },
          {
            "name": "index_LeavingReasonReplicate_lrDestination_lrPending",
            "unique": false,
            "columnNames": [
              "lrDestination",
              "lrPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LeavingReasonReplicate_lrDestination_lrPending` ON `${TABLE_NAME}` (`lrDestination`, `lrPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cePk` INTEGER NOT NULL, `ceVersionId` INTEGER NOT NULL DEFAULT 0, `ceDestination` INTEGER NOT NULL, `cePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cePk`, `ceDestination`))",
        "fields": [
          {
            "fieldPath": "cePk",
            "columnName": "cePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceVersionId",
            "columnName": "ceVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ceDestination",
            "columnName": "ceDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cePending",
            "columnName": "cePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cePk",
            "ceDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentEntryReplicate_cePk_ceDestination_ceVersionId",
            "unique": false,
            "columnNames": [
              "cePk",
              "ceDestination",
              "ceVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryReplicate_cePk_ceDestination_ceVersionId` ON `${TABLE_NAME}` (`cePk`, `ceDestination`, `ceVersionId`)"
          },
          {
            "name": "index_ContentEntryReplicate_ceDestination_cePending",
            "unique": false,
            "columnNames": [
              "ceDestination",
              "cePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryReplicate_ceDestination_cePending` ON `${TABLE_NAME}` (`ceDestination`, `cePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryContentCategoryJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ceccjPk` INTEGER NOT NULL, `ceccjVersionId` INTEGER NOT NULL DEFAULT 0, `ceccjDestination` INTEGER NOT NULL, `ceccjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ceccjPk`, `ceccjDestination`))",
        "fields": [
          {
            "fieldPath": "ceccjPk",
            "columnName": "ceccjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjVersionId",
            "columnName": "ceccjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ceccjDestination",
            "columnName": "ceccjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ceccjPending",
            "columnName": "ceccjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ceccjPk",
            "ceccjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentEntryContentCategoryJoinReplicate_ceccjPk_ceccjDestination_ceccjVersionId",
            "unique": false,
            "columnNames": [
              "ceccjPk",
              "ceccjDestination",
              "ceccjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryContentCategoryJoinReplicate_ceccjPk_ceccjDestination_ceccjVersionId` ON `${TABLE_NAME}` (`ceccjPk`, `ceccjDestination`, `ceccjVersionId`)"
          },
          {
            "name": "index_ContentEntryContentCategoryJoinReplicate_ceccjDestination_ceccjPending",
            "unique": false,
            "columnNames": [
              "ceccjDestination",
              "ceccjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryContentCategoryJoinReplicate_ceccjDestination_ceccjPending` ON `${TABLE_NAME}` (`ceccjDestination`, `ceccjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryParentChildJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cepcjPk` INTEGER NOT NULL, `cepcjVersionId` INTEGER NOT NULL DEFAULT 0, `cepcjDestination` INTEGER NOT NULL, `cepcjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cepcjPk`, `cepcjDestination`))",
        "fields": [
          {
            "fieldPath": "cepcjPk",
            "columnName": "cepcjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjVersionId",
            "columnName": "cepcjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cepcjDestination",
            "columnName": "cepcjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cepcjPending",
            "columnName": "cepcjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cepcjPk",
            "cepcjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentEntryParentChildJoinReplicate_cepcjPk_cepcjDestination_cepcjVersionId",
            "unique": false,
            "columnNames": [
              "cepcjPk",
              "cepcjDestination",
              "cepcjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoinReplicate_cepcjPk_cepcjDestination_cepcjVersionId` ON `${TABLE_NAME}` (`cepcjPk`, `cepcjDestination`, `cepcjVersionId`)"
          },
          {
            "name": "index_ContentEntryParentChildJoinReplicate_cepcjDestination_cepcjPending",
            "unique": false,
            "columnNames": [
              "cepcjDestination",
              "cepcjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryParentChildJoinReplicate_cepcjDestination_cepcjPending` ON `${TABLE_NAME}` (`cepcjDestination`, `cepcjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentEntryRelatedEntryJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cerejPk` INTEGER NOT NULL, `cerejVersionId` INTEGER NOT NULL DEFAULT 0, `cerejDestination` INTEGER NOT NULL, `cerejPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cerejPk`, `cerejDestination`))",
        "fields": [
          {
            "fieldPath": "cerejPk",
            "columnName": "cerejPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejVersionId",
            "columnName": "cerejVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cerejDestination",
            "columnName": "cerejDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cerejPending",
            "columnName": "cerejPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cerejPk",
            "cerejDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentEntryRelatedEntryJoinReplicate_cerejPk_cerejDestination_cerejVersionId",
            "unique": false,
            "columnNames": [
              "cerejPk",
              "cerejDestination",
              "cerejVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryRelatedEntryJoinReplicate_cerejPk_cerejDestination_cerejVersionId` ON `${TABLE_NAME}` (`cerejPk`, `cerejDestination`, `cerejVersionId`)"
          },
          {
            "name": "index_ContentEntryRelatedEntryJoinReplicate_cerejDestination_cerejPending",
            "unique": false,
            "columnNames": [
              "cerejDestination",
              "cerejPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentEntryRelatedEntryJoinReplicate_cerejDestination_cerejPending` ON `${TABLE_NAME}` (`cerejDestination`, `cerejPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategorySchemaReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ccsPk` INTEGER NOT NULL, `ccsVersionId` INTEGER NOT NULL DEFAULT 0, `ccsDestination` INTEGER NOT NULL, `ccsPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ccsPk`, `ccsDestination`))",
        "fields": [
          {
            "fieldPath": "ccsPk",
            "columnName": "ccsPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccsVersionId",
            "columnName": "ccsVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ccsDestination",
            "columnName": "ccsDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccsPending",
            "columnName": "ccsPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ccsPk",
            "ccsDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentCategorySchemaReplicate_ccsPk_ccsDestination_ccsVersionId",
            "unique": false,
            "columnNames": [
              "ccsPk",
              "ccsDestination",
              "ccsVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentCategorySchemaReplicate_ccsPk_ccsDestination_ccsVersionId` ON `${TABLE_NAME}` (`ccsPk`, `ccsDestination`, `ccsVersionId`)"
          },
          {
            "name": "index_ContentCategorySchemaReplicate_ccsDestination_ccsPending",
            "unique": false,
            "columnNames": [
              "ccsDestination",
              "ccsPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentCategorySchemaReplicate_ccsDestination_ccsPending` ON `${TABLE_NAME}` (`ccsDestination`, `ccsPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContentCategoryReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ccPk` INTEGER NOT NULL, `ccVersionId` INTEGER NOT NULL DEFAULT 0, `ccDestination` INTEGER NOT NULL, `ccPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ccPk`, `ccDestination`))",
        "fields": [
          {
            "fieldPath": "ccPk",
            "columnName": "ccPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccVersionId",
            "columnName": "ccVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ccDestination",
            "columnName": "ccDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccPending",
            "columnName": "ccPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ccPk",
            "ccDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContentCategoryReplicate_ccPk_ccDestination_ccVersionId",
            "unique": false,
            "columnNames": [
              "ccPk",
              "ccDestination",
              "ccVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentCategoryReplicate_ccPk_ccDestination_ccVersionId` ON `${TABLE_NAME}` (`ccPk`, `ccDestination`, `ccVersionId`)"
          },
          {
            "name": "index_ContentCategoryReplicate_ccDestination_ccPending",
            "unique": false,
            "columnNames": [
              "ccDestination",
              "ccPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContentCategoryReplicate_ccDestination_ccPending` ON `${TABLE_NAME}` (`ccDestination`, `ccPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LanguageReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`languagePk` INTEGER NOT NULL, `languageVersionId` INTEGER NOT NULL DEFAULT 0, `languageDestination` INTEGER NOT NULL, `languagePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`languagePk`, `languageDestination`))",
        "fields": [
          {
            "fieldPath": "languagePk",
            "columnName": "languagePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languageVersionId",
            "columnName": "languageVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "languageDestination",
            "columnName": "languageDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "languagePending",
            "columnName": "languagePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "languagePk",
            "languageDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_LanguageReplicate_languagePk_languageDestination_languageVersionId",
            "unique": false,
            "columnNames": [
              "languagePk",
              "languageDestination",
              "languageVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LanguageReplicate_languagePk_languageDestination_languageVersionId` ON `${TABLE_NAME}` (`languagePk`, `languageDestination`, `languageVersionId`)"
          },
          {
            "name": "index_LanguageReplicate_languageDestination_languagePending",
            "unique": false,
            "columnNames": [
              "languageDestination",
              "languagePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LanguageReplicate_languageDestination_languagePending` ON `${TABLE_NAME}` (`languageDestination`, `languagePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LanguageVariantReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`lvPk` INTEGER NOT NULL, `lvVersionId` INTEGER NOT NULL DEFAULT 0, `lvDestination` INTEGER NOT NULL, `lvPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`lvPk`, `lvDestination`))",
        "fields": [
          {
            "fieldPath": "lvPk",
            "columnName": "lvPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lvVersionId",
            "columnName": "lvVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lvDestination",
            "columnName": "lvDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lvPending",
            "columnName": "lvPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "lvPk",
            "lvDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_LanguageVariantReplicate_lvPk_lvDestination_lvVersionId",
            "unique": false,
            "columnNames": [
              "lvPk",
              "lvDestination",
              "lvVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LanguageVariantReplicate_lvPk_lvDestination_lvVersionId` ON `${TABLE_NAME}` (`lvPk`, `lvDestination`, `lvVersionId`)"
          },
          {
            "name": "index_LanguageVariantReplicate_lvDestination_lvPending",
            "unique": false,
            "columnNames": [
              "lvDestination",
              "lvPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LanguageVariantReplicate_lvDestination_lvPending` ON `${TABLE_NAME}` (`lvDestination`, `lvPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroupReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pgPk` INTEGER NOT NULL, `pgVersionId` INTEGER NOT NULL DEFAULT 0, `pgDestination` INTEGER NOT NULL, `pgPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`pgPk`, `pgDestination`))",
        "fields": [
          {
            "fieldPath": "pgPk",
            "columnName": "pgPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pgVersionId",
            "columnName": "pgVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "pgDestination",
            "columnName": "pgDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pgPending",
            "columnName": "pgPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "pgPk",
            "pgDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonGroupReplicate_pgPk_pgDestination_pgVersionId",
            "unique": false,
            "columnNames": [
              "pgPk",
              "pgDestination",
              "pgVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupReplicate_pgPk_pgDestination_pgVersionId` ON `${TABLE_NAME}` (`pgPk`, `pgDestination`, `pgVersionId`)"
          },
          {
            "name": "index_PersonGroupReplicate_pgDestination_pgPending",
            "unique": false,
            "columnNames": [
              "pgDestination",
              "pgPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupReplicate_pgDestination_pgPending` ON `${TABLE_NAME}` (`pgDestination`, `pgPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonGroupMemberReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pgmPk` INTEGER NOT NULL, `pgmVersionId` INTEGER NOT NULL DEFAULT 0, `pgmDestination` INTEGER NOT NULL, `pgmPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`pgmPk`, `pgmDestination`))",
        "fields": [
          {
            "fieldPath": "pgmPk",
            "columnName": "pgmPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pgmVersionId",
            "columnName": "pgmVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "pgmDestination",
            "columnName": "pgmDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pgmPending",
            "columnName": "pgmPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "pgmPk",
            "pgmDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonGroupMemberReplicate_pgmPk_pgmDestination_pgmVersionId",
            "unique": false,
            "columnNames": [
              "pgmPk",
              "pgmDestination",
              "pgmVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMemberReplicate_pgmPk_pgmDestination_pgmVersionId` ON `${TABLE_NAME}` (`pgmPk`, `pgmDestination`, `pgmVersionId`)"
          },
          {
            "name": "index_PersonGroupMemberReplicate_pgmDestination_pgmPending",
            "unique": false,
            "columnNames": [
              "pgmDestination",
              "pgmPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonGroupMemberReplicate_pgmDestination_pgmPending` ON `${TABLE_NAME}` (`pgmDestination`, `pgmPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonPictureReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ppPk` INTEGER NOT NULL, `ppVersionId` INTEGER NOT NULL DEFAULT 0, `ppDestination` INTEGER NOT NULL, `ppPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ppPk`, `ppDestination`))",
        "fields": [
          {
            "fieldPath": "ppPk",
            "columnName": "ppPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppVersionId",
            "columnName": "ppVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ppDestination",
            "columnName": "ppDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppPending",
            "columnName": "ppPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ppPk",
            "ppDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonPictureReplicate_ppPk_ppDestination_ppVersionId",
            "unique": false,
            "columnNames": [
              "ppPk",
              "ppDestination",
              "ppVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonPictureReplicate_ppPk_ppDestination_ppVersionId` ON `${TABLE_NAME}` (`ppPk`, `ppDestination`, `ppVersionId`)"
          },
          {
            "name": "index_PersonPictureReplicate_ppDestination_ppPending",
            "unique": false,
            "columnNames": [
              "ppDestination",
              "ppPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonPictureReplicate_ppDestination_ppPending` ON `${TABLE_NAME}` (`ppDestination`, `ppPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContainerReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`containerPk` INTEGER NOT NULL, `containerVersionId` INTEGER NOT NULL DEFAULT 0, `containerDestination` INTEGER NOT NULL, `containerPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`containerPk`, `containerDestination`))",
        "fields": [
          {
            "fieldPath": "containerPk",
            "columnName": "containerPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "containerVersionId",
            "columnName": "containerVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "containerDestination",
            "columnName": "containerDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "containerPending",
            "columnName": "containerPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "containerPk",
            "containerDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContainerReplicate_containerPk_containerDestination_containerVersionId",
            "unique": false,
            "columnNames": [
              "containerPk",
              "containerDestination",
              "containerVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContainerReplicate_containerPk_containerDestination_containerVersionId` ON `${TABLE_NAME}` (`containerPk`, `containerDestination`, `containerVersionId`)"
          },
          {
            "name": "index_ContainerReplicate_containerDestination_containerPending",
            "unique": false,
            "columnNames": [
              "containerDestination",
              "containerPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContainerReplicate_containerDestination_containerPending` ON `${TABLE_NAME}` (`containerDestination`, `containerPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "VerbEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`vePk` INTEGER NOT NULL, `veVersionId` INTEGER NOT NULL DEFAULT 0, `veDestination` INTEGER NOT NULL, `vePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`vePk`, `veDestination`))",
        "fields": [
          {
            "fieldPath": "vePk",
            "columnName": "vePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "veVersionId",
            "columnName": "veVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "veDestination",
            "columnName": "veDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vePending",
            "columnName": "vePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "vePk",
            "veDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_VerbEntityReplicate_vePk_veDestination_veVersionId",
            "unique": false,
            "columnNames": [
              "vePk",
              "veDestination",
              "veVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VerbEntityReplicate_vePk_veDestination_veVersionId` ON `${TABLE_NAME}` (`vePk`, `veDestination`, `veVersionId`)"
          },
          {
            "name": "index_VerbEntityReplicate_veDestination_vePending",
            "unique": false,
            "columnNames": [
              "veDestination",
              "vePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_VerbEntityReplicate_veDestination_vePending` ON `${TABLE_NAME}` (`veDestination`, `vePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "XObjectEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`xoePk` INTEGER NOT NULL, `xoeVersionId` INTEGER NOT NULL DEFAULT 0, `xoeDestination` INTEGER NOT NULL, `xoePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`xoePk`, `xoeDestination`))",
        "fields": [
          {
            "fieldPath": "xoePk",
            "columnName": "xoePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xoeVersionId",
            "columnName": "xoeVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "xoeDestination",
            "columnName": "xoeDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xoePending",
            "columnName": "xoePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "xoePk",
            "xoeDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_XObjectEntityReplicate_xoePk_xoeDestination_xoeVersionId",
            "unique": false,
            "columnNames": [
              "xoePk",
              "xoeDestination",
              "xoeVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_XObjectEntityReplicate_xoePk_xoeDestination_xoeVersionId` ON `${TABLE_NAME}` (`xoePk`, `xoeDestination`, `xoeVersionId`)"
          },
          {
            "name": "index_XObjectEntityReplicate_xoeDestination_xoePending",
            "unique": false,
            "columnNames": [
              "xoeDestination",
              "xoePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_XObjectEntityReplicate_xoeDestination_xoePending` ON `${TABLE_NAME}` (`xoeDestination`, `xoePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "StatementEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sePk` INTEGER NOT NULL, `seVersionId` INTEGER NOT NULL DEFAULT 0, `seDestination` INTEGER NOT NULL, `sePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`sePk`, `seDestination`))",
        "fields": [
          {
            "fieldPath": "sePk",
            "columnName": "sePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seVersionId",
            "columnName": "seVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "seDestination",
            "columnName": "seDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sePending",
            "columnName": "sePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sePk",
            "seDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_StatementEntityReplicate_sePk_seDestination_seVersionId",
            "unique": false,
            "columnNames": [
              "sePk",
              "seDestination",
              "seVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StatementEntityReplicate_sePk_seDestination_seVersionId` ON `${TABLE_NAME}` (`sePk`, `seDestination`, `seVersionId`)"
          },
          {
            "name": "index_StatementEntityReplicate_seDestination_sePending",
            "unique": false,
            "columnNames": [
              "seDestination",
              "sePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StatementEntityReplicate_seDestination_sePending` ON `${TABLE_NAME}` (`seDestination`, `sePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ContextXObjectStatementJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cxosjPk` INTEGER NOT NULL, `cxosjVersionId` INTEGER NOT NULL DEFAULT 0, `cxosjDestination` INTEGER NOT NULL, `cxosjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cxosjPk`, `cxosjDestination`))",
        "fields": [
          {
            "fieldPath": "cxosjPk",
            "columnName": "cxosjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cxosjVersionId",
            "columnName": "cxosjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cxosjDestination",
            "columnName": "cxosjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cxosjPending",
            "columnName": "cxosjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cxosjPk",
            "cxosjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ContextXObjectStatementJoinReplicate_cxosjPk_cxosjDestination_cxosjVersionId",
            "unique": false,
            "columnNames": [
              "cxosjPk",
              "cxosjDestination",
              "cxosjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContextXObjectStatementJoinReplicate_cxosjPk_cxosjDestination_cxosjVersionId` ON `${TABLE_NAME}` (`cxosjPk`, `cxosjDestination`, `cxosjVersionId`)"
          },
          {
            "name": "index_ContextXObjectStatementJoinReplicate_cxosjDestination_cxosjPending",
            "unique": false,
            "columnNames": [
              "cxosjDestination",
              "cxosjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ContextXObjectStatementJoinReplicate_cxosjDestination_cxosjPending` ON `${TABLE_NAME}` (`cxosjDestination`, `cxosjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "AgentEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`aePk` INTEGER NOT NULL, `aeVersionId` INTEGER NOT NULL DEFAULT 0, `aeDestination` INTEGER NOT NULL, `aePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`aePk`, `aeDestination`))",
        "fields": [
          {
            "fieldPath": "aePk",
            "columnName": "aePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aeVersionId",
            "columnName": "aeVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "aeDestination",
            "columnName": "aeDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aePending",
            "columnName": "aePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "aePk",
            "aeDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_AgentEntityReplicate_aePk_aeDestination_aeVersionId",
            "unique": false,
            "columnNames": [
              "aePk",
              "aeDestination",
              "aeVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AgentEntityReplicate_aePk_aeDestination_aeVersionId` ON `${TABLE_NAME}` (`aePk`, `aeDestination`, `aeVersionId`)"
          },
          {
            "name": "index_AgentEntityReplicate_aeDestination_aePending",
            "unique": false,
            "columnNames": [
              "aeDestination",
              "aePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AgentEntityReplicate_aeDestination_aePending` ON `${TABLE_NAME}` (`aeDestination`, `aePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "StateEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sePk` INTEGER NOT NULL, `seVersionId` INTEGER NOT NULL DEFAULT 0, `seDestination` INTEGER NOT NULL, `sePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`sePk`, `seDestination`))",
        "fields": [
          {
            "fieldPath": "sePk",
            "columnName": "sePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "seVersionId",
            "columnName": "seVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "seDestination",
            "columnName": "seDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sePending",
            "columnName": "sePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sePk",
            "seDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_StateEntityReplicate_sePk_seDestination_seVersionId",
            "unique": false,
            "columnNames": [
              "sePk",
              "seDestination",
              "seVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StateEntityReplicate_sePk_seDestination_seVersionId` ON `${TABLE_NAME}` (`sePk`, `seDestination`, `seVersionId`)"
          },
          {
            "name": "index_StateEntityReplicate_seDestination_sePending",
            "unique": false,
            "columnNames": [
              "seDestination",
              "sePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StateEntityReplicate_seDestination_sePending` ON `${TABLE_NAME}` (`seDestination`, `sePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "StateContentEntityReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`scePk` INTEGER NOT NULL, `sceVersionId` INTEGER NOT NULL DEFAULT 0, `sceDestination` INTEGER NOT NULL, `scePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`scePk`, `sceDestination`))",
        "fields": [
          {
            "fieldPath": "scePk",
            "columnName": "scePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sceVersionId",
            "columnName": "sceVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "sceDestination",
            "columnName": "sceDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scePending",
            "columnName": "scePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "scePk",
            "sceDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_StateContentEntityReplicate_scePk_sceDestination_sceVersionId",
            "unique": false,
            "columnNames": [
              "scePk",
              "sceDestination",
              "sceVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StateContentEntityReplicate_scePk_sceDestination_sceVersionId` ON `${TABLE_NAME}` (`scePk`, `sceDestination`, `sceVersionId`)"
          },
          {
            "name": "index_StateContentEntityReplicate_sceDestination_scePending",
            "unique": false,
            "columnNames": [
              "sceDestination",
              "scePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StateContentEntityReplicate_sceDestination_scePending` ON `${TABLE_NAME}` (`sceDestination`, `scePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "XLangMapEntryReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`xlmePk` INTEGER NOT NULL, `xlmeVersionId` INTEGER NOT NULL DEFAULT 0, `xlmeDestination` INTEGER NOT NULL, `xlmePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`xlmePk`, `xlmeDestination`))",
        "fields": [
          {
            "fieldPath": "xlmePk",
            "columnName": "xlmePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xlmeVersionId",
            "columnName": "xlmeVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "xlmeDestination",
            "columnName": "xlmeDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xlmePending",
            "columnName": "xlmePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "xlmePk",
            "xlmeDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_XLangMapEntryReplicate_xlmePk_xlmeDestination_xlmeVersionId",
            "unique": false,
            "columnNames": [
              "xlmePk",
              "xlmeDestination",
              "xlmeVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_XLangMapEntryReplicate_xlmePk_xlmeDestination_xlmeVersionId` ON `${TABLE_NAME}` (`xlmePk`, `xlmeDestination`, `xlmeVersionId`)"
          },
          {
            "name": "index_XLangMapEntryReplicate_xlmeDestination_xlmePending",
            "unique": false,
            "columnNames": [
              "xlmeDestination",
              "xlmePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_XLangMapEntryReplicate_xlmeDestination_xlmePending` ON `${TABLE_NAME}` (`xlmeDestination`, `xlmePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SchoolReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`schoolPk` INTEGER NOT NULL, `schoolVersionId` INTEGER NOT NULL DEFAULT 0, `schoolDestination` INTEGER NOT NULL, `schoolPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`schoolPk`, `schoolDestination`))",
        "fields": [
          {
            "fieldPath": "schoolPk",
            "columnName": "schoolPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolVersionId",
            "columnName": "schoolVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "schoolDestination",
            "columnName": "schoolDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schoolPending",
            "columnName": "schoolPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "schoolPk",
            "schoolDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SchoolReplicate_schoolPk_schoolDestination_schoolVersionId",
            "unique": false,
            "columnNames": [
              "schoolPk",
              "schoolDestination",
              "schoolVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolReplicate_schoolPk_schoolDestination_schoolVersionId` ON `${TABLE_NAME}` (`schoolPk`, `schoolDestination`, `schoolVersionId`)"
          },
          {
            "name": "index_SchoolReplicate_schoolDestination_schoolPending",
            "unique": false,
            "columnNames": [
              "schoolDestination",
              "schoolPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolReplicate_schoolDestination_schoolPending` ON `${TABLE_NAME}` (`schoolDestination`, `schoolPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SchoolMemberReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`smPk` INTEGER NOT NULL, `smVersionId` INTEGER NOT NULL DEFAULT 0, `smDestination` INTEGER NOT NULL, `smPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`smPk`, `smDestination`))",
        "fields": [
          {
            "fieldPath": "smPk",
            "columnName": "smPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "smVersionId",
            "columnName": "smVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "smDestination",
            "columnName": "smDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "smPending",
            "columnName": "smPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "smPk",
            "smDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SchoolMemberReplicate_smPk_smDestination_smVersionId",
            "unique": false,
            "columnNames": [
              "smPk",
              "smDestination",
              "smVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolMemberReplicate_smPk_smDestination_smVersionId` ON `${TABLE_NAME}` (`smPk`, `smDestination`, `smVersionId`)"
          },
          {
            "name": "index_SchoolMemberReplicate_smDestination_smPending",
            "unique": false,
            "columnNames": [
              "smDestination",
              "smPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SchoolMemberReplicate_smDestination_smPending` ON `${TABLE_NAME}` (`smDestination`, `smPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CommentsReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`commentsPk` INTEGER NOT NULL, `commentsVersionId` INTEGER NOT NULL DEFAULT 0, `commentsDestination` INTEGER NOT NULL, `commentsPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`commentsPk`, `commentsDestination`))",
        "fields": [
          {
            "fieldPath": "commentsPk",
            "columnName": "commentsPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsVersionId",
            "columnName": "commentsVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "commentsDestination",
            "columnName": "commentsDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commentsPending",
            "columnName": "commentsPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "commentsPk",
            "commentsDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CommentsReplicate_commentsPk_commentsDestination_commentsVersionId",
            "unique": false,
            "columnNames": [
              "commentsPk",
              "commentsDestination",
              "commentsVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CommentsReplicate_commentsPk_commentsDestination_commentsVersionId` ON `${TABLE_NAME}` (`commentsPk`, `commentsDestination`, `commentsVersionId`)"
          },
          {
            "name": "index_CommentsReplicate_commentsDestination_commentsPending",
            "unique": false,
            "columnNames": [
              "commentsDestination",
              "commentsPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CommentsReplicate_commentsDestination_commentsPending` ON `${TABLE_NAME}` (`commentsDestination`, `commentsPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ReportReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`reportPk` INTEGER NOT NULL, `reportVersionId` INTEGER NOT NULL DEFAULT 0, `reportDestination` INTEGER NOT NULL, `reportPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`reportPk`, `reportDestination`))",
        "fields": [
          {
            "fieldPath": "reportPk",
            "columnName": "reportPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportVersionId",
            "columnName": "reportVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "reportDestination",
            "columnName": "reportDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reportPending",
            "columnName": "reportPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "reportPk",
            "reportDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ReportReplicate_reportPk_reportDestination_reportVersionId",
            "unique": false,
            "columnNames": [
              "reportPk",
              "reportDestination",
              "reportVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReportReplicate_reportPk_reportDestination_reportVersionId` ON `${TABLE_NAME}` (`reportPk`, `reportDestination`, `reportVersionId`)"
          },
          {
            "name": "index_ReportReplicate_reportDestination_reportPending",
            "unique": false,
            "columnNames": [
              "reportDestination",
              "reportPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReportReplicate_reportDestination_reportPending` ON `${TABLE_NAME}` (`reportDestination`, `reportPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SiteReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sitePk` INTEGER NOT NULL, `siteVersionId` INTEGER NOT NULL DEFAULT 0, `siteDestination` INTEGER NOT NULL, `sitePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`sitePk`, `siteDestination`))",
        "fields": [
          {
            "fieldPath": "sitePk",
            "columnName": "sitePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteVersionId",
            "columnName": "siteVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "siteDestination",
            "columnName": "siteDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sitePending",
            "columnName": "sitePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sitePk",
            "siteDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SiteReplicate_sitePk_siteDestination_siteVersionId",
            "unique": false,
            "columnNames": [
              "sitePk",
              "siteDestination",
              "siteVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SiteReplicate_sitePk_siteDestination_siteVersionId` ON `${TABLE_NAME}` (`sitePk`, `siteDestination`, `siteVersionId`)"
          },
          {
            "name": "index_SiteReplicate_siteDestination_sitePending",
            "unique": false,
            "columnNames": [
              "siteDestination",
              "sitePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SiteReplicate_siteDestination_sitePending` ON `${TABLE_NAME}` (`siteDestination`, `sitePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LearnerGroupReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`lgPk` INTEGER NOT NULL, `lgVersionId` INTEGER NOT NULL DEFAULT 0, `lgDestination` INTEGER NOT NULL, `lgPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`lgPk`, `lgDestination`))",
        "fields": [
          {
            "fieldPath": "lgPk",
            "columnName": "lgPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lgVersionId",
            "columnName": "lgVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lgDestination",
            "columnName": "lgDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lgPending",
            "columnName": "lgPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "lgPk",
            "lgDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_LearnerGroupReplicate_lgPk_lgDestination_lgVersionId",
            "unique": false,
            "columnNames": [
              "lgPk",
              "lgDestination",
              "lgVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LearnerGroupReplicate_lgPk_lgDestination_lgVersionId` ON `${TABLE_NAME}` (`lgPk`, `lgDestination`, `lgVersionId`)"
          },
          {
            "name": "index_LearnerGroupReplicate_lgDestination_lgPending",
            "unique": false,
            "columnNames": [
              "lgDestination",
              "lgPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LearnerGroupReplicate_lgDestination_lgPending` ON `${TABLE_NAME}` (`lgDestination`, `lgPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "LearnerGroupMemberReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`lgmPk` INTEGER NOT NULL, `lgmVersionId` INTEGER NOT NULL DEFAULT 0, `lgmDestination` INTEGER NOT NULL, `lgmPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`lgmPk`, `lgmDestination`))",
        "fields": [
          {
            "fieldPath": "lgmPk",
            "columnName": "lgmPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lgmVersionId",
            "columnName": "lgmVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lgmDestination",
            "columnName": "lgmDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lgmPending",
            "columnName": "lgmPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "lgmPk",
            "lgmDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_LearnerGroupMemberReplicate_lgmPk_lgmDestination_lgmVersionId",
            "unique": false,
            "columnNames": [
              "lgmPk",
              "lgmDestination",
              "lgmVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LearnerGroupMemberReplicate_lgmPk_lgmDestination_lgmVersionId` ON `${TABLE_NAME}` (`lgmPk`, `lgmDestination`, `lgmVersionId`)"
          },
          {
            "name": "index_LearnerGroupMemberReplicate_lgmDestination_lgmPending",
            "unique": false,
            "columnNames": [
              "lgmDestination",
              "lgmPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LearnerGroupMemberReplicate_lgmDestination_lgmPending` ON `${TABLE_NAME}` (`lgmDestination`, `lgmPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "GroupLearningSessionReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`glsPk` INTEGER NOT NULL, `glsVersionId` INTEGER NOT NULL DEFAULT 0, `glsDestination` INTEGER NOT NULL, `glsPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`glsPk`, `glsDestination`))",
        "fields": [
          {
            "fieldPath": "glsPk",
            "columnName": "glsPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "glsVersionId",
            "columnName": "glsVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "glsDestination",
            "columnName": "glsDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "glsPending",
            "columnName": "glsPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "glsPk",
            "glsDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_GroupLearningSessionReplicate_glsPk_glsDestination_glsVersionId",
            "unique": false,
            "columnNames": [
              "glsPk",
              "glsDestination",
              "glsVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_GroupLearningSessionReplicate_glsPk_glsDestination_glsVersionId` ON `${TABLE_NAME}` (`glsPk`, `glsDestination`, `glsVersionId`)"
          },
          {
            "name": "index_GroupLearningSessionReplicate_glsDestination_glsPending",
            "unique": false,
            "columnNames": [
              "glsDestination",
              "glsPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_GroupLearningSessionReplicate_glsDestination_glsPending` ON `${TABLE_NAME}` (`glsDestination`, `glsPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SiteTermsReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`stPk` INTEGER NOT NULL, `stVersionId` INTEGER NOT NULL DEFAULT 0, `stDestination` INTEGER NOT NULL, `stPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`stPk`, `stDestination`))",
        "fields": [
          {
            "fieldPath": "stPk",
            "columnName": "stPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stVersionId",
            "columnName": "stVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "stDestination",
            "columnName": "stDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stPending",
            "columnName": "stPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "stPk",
            "stDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SiteTermsReplicate_stPk_stDestination_stVersionId",
            "unique": false,
            "columnNames": [
              "stPk",
              "stDestination",
              "stVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SiteTermsReplicate_stPk_stDestination_stVersionId` ON `${TABLE_NAME}` (`stPk`, `stDestination`, `stVersionId`)"
          },
          {
            "name": "index_SiteTermsReplicate_stDestination_stPending",
            "unique": false,
            "columnNames": [
              "stDestination",
              "stPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SiteTermsReplicate_stDestination_stPending` ON `${TABLE_NAME}` (`stDestination`, `stPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzContentJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ccjPk` INTEGER NOT NULL, `ccjVersionId` INTEGER NOT NULL DEFAULT 0, `ccjDestination` INTEGER NOT NULL, `ccjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ccjPk`, `ccjDestination`))",
        "fields": [
          {
            "fieldPath": "ccjPk",
            "columnName": "ccjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjVersionId",
            "columnName": "ccjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ccjDestination",
            "columnName": "ccjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ccjPending",
            "columnName": "ccjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ccjPk",
            "ccjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzContentJoinReplicate_ccjPk_ccjDestination_ccjVersionId",
            "unique": false,
            "columnNames": [
              "ccjPk",
              "ccjDestination",
              "ccjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzContentJoinReplicate_ccjPk_ccjDestination_ccjVersionId` ON `${TABLE_NAME}` (`ccjPk`, `ccjDestination`, `ccjVersionId`)"
          },
          {
            "name": "index_ClazzContentJoinReplicate_ccjDestination_ccjPending",
            "unique": false,
            "columnNames": [
              "ccjDestination",
              "ccjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzContentJoinReplicate_ccjDestination_ccjPending` ON `${TABLE_NAME}` (`ccjDestination`, `ccjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonParentJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ppjPk` INTEGER NOT NULL, `ppjVersionId` INTEGER NOT NULL DEFAULT 0, `ppjDestination` INTEGER NOT NULL, `ppjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`ppjPk`, `ppjDestination`))",
        "fields": [
          {
            "fieldPath": "ppjPk",
            "columnName": "ppjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjVersionId",
            "columnName": "ppjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "ppjDestination",
            "columnName": "ppjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ppjPending",
            "columnName": "ppjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ppjPk",
            "ppjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonParentJoinReplicate_ppjPk_ppjDestination_ppjVersionId",
            "unique": false,
            "columnNames": [
              "ppjPk",
              "ppjDestination",
              "ppjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonParentJoinReplicate_ppjPk_ppjDestination_ppjVersionId` ON `${TABLE_NAME}` (`ppjPk`, `ppjDestination`, `ppjVersionId`)"
          },
          {
            "name": "index_PersonParentJoinReplicate_ppjDestination_ppjPending",
            "unique": false,
            "columnNames": [
              "ppjDestination",
              "ppjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonParentJoinReplicate_ppjDestination_ppjPending` ON `${TABLE_NAME}` (`ppjDestination`, `ppjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ScopedGrantReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sgPk` INTEGER NOT NULL, `sgVersionId` INTEGER NOT NULL DEFAULT 0, `sgDestination` INTEGER NOT NULL, `sgPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`sgPk`, `sgDestination`))",
        "fields": [
          {
            "fieldPath": "sgPk",
            "columnName": "sgPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgVersionId",
            "columnName": "sgVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "sgDestination",
            "columnName": "sgDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sgPending",
            "columnName": "sgPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sgPk",
            "sgDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ScopedGrantReplicate_sgPk_sgDestination_sgVersionId",
            "unique": false,
            "columnNames": [
              "sgPk",
              "sgDestination",
              "sgVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ScopedGrantReplicate_sgPk_sgDestination_sgVersionId` ON `${TABLE_NAME}` (`sgPk`, `sgDestination`, `sgVersionId`)"
          },
          {
            "name": "index_ScopedGrantReplicate_sgDestination_sgPending",
            "unique": false,
            "columnNames": [
              "sgDestination",
              "sgPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ScopedGrantReplicate_sgDestination_sgPending` ON `${TABLE_NAME}` (`sgDestination`, `sgPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ErrorReportReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`erPk` INTEGER NOT NULL, `erVersionId` INTEGER NOT NULL DEFAULT 0, `erDestination` INTEGER NOT NULL, `erPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`erPk`, `erDestination`))",
        "fields": [
          {
            "fieldPath": "erPk",
            "columnName": "erPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erVersionId",
            "columnName": "erVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "erDestination",
            "columnName": "erDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "erPending",
            "columnName": "erPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "erPk",
            "erDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ErrorReportReplicate_erPk_erDestination_erVersionId",
            "unique": false,
            "columnNames": [
              "erPk",
              "erDestination",
              "erVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ErrorReportReplicate_erPk_erDestination_erVersionId` ON `${TABLE_NAME}` (`erPk`, `erDestination`, `erVersionId`)"
          },
          {
            "name": "index_ErrorReportReplicate_erDestination_erPending",
            "unique": false,
            "columnNames": [
              "erDestination",
              "erPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ErrorReportReplicate_erDestination_erPending` ON `${TABLE_NAME}` (`erDestination`, `erPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignmentReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`caPk` INTEGER NOT NULL, `caVersionId` INTEGER NOT NULL DEFAULT 0, `caDestination` INTEGER NOT NULL, `caPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`caPk`, `caDestination`))",
        "fields": [
          {
            "fieldPath": "caPk",
            "columnName": "caPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caVersionId",
            "columnName": "caVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "caDestination",
            "columnName": "caDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "caPending",
            "columnName": "caPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "caPk",
            "caDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzAssignmentReplicate_caPk_caDestination_caVersionId",
            "unique": false,
            "columnNames": [
              "caPk",
              "caDestination",
              "caVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignmentReplicate_caPk_caDestination_caVersionId` ON `${TABLE_NAME}` (`caPk`, `caDestination`, `caVersionId`)"
          },
          {
            "name": "index_ClazzAssignmentReplicate_caDestination_caPending",
            "unique": false,
            "columnNames": [
              "caDestination",
              "caPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignmentReplicate_caDestination_caPending` ON `${TABLE_NAME}` (`caDestination`, `caPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ClazzAssignmentContentJoinReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cacjPk` INTEGER NOT NULL, `cacjVersionId` INTEGER NOT NULL DEFAULT 0, `cacjDestination` INTEGER NOT NULL, `cacjPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cacjPk`, `cacjDestination`))",
        "fields": [
          {
            "fieldPath": "cacjPk",
            "columnName": "cacjPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjVersionId",
            "columnName": "cacjVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cacjDestination",
            "columnName": "cacjDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cacjPending",
            "columnName": "cacjPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cacjPk",
            "cacjDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ClazzAssignmentContentJoinReplicate_cacjPk_cacjDestination_cacjVersionId",
            "unique": false,
            "columnNames": [
              "cacjPk",
              "cacjDestination",
              "cacjVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignmentContentJoinReplicate_cacjPk_cacjDestination_cacjVersionId` ON `${TABLE_NAME}` (`cacjPk`, `cacjDestination`, `cacjVersionId`)"
          },
          {
            "name": "index_ClazzAssignmentContentJoinReplicate_cacjDestination_cacjPending",
            "unique": false,
            "columnNames": [
              "cacjDestination",
              "cacjPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ClazzAssignmentContentJoinReplicate_cacjDestination_cacjPending` ON `${TABLE_NAME}` (`cacjDestination`, `cacjPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PersonAuth2Replicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`paPk` INTEGER NOT NULL, `paVersionId` INTEGER NOT NULL DEFAULT 0, `paDestination` INTEGER NOT NULL, `paPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`paPk`, `paDestination`))",
        "fields": [
          {
            "fieldPath": "paPk",
            "columnName": "paPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paVersionId",
            "columnName": "paVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "paDestination",
            "columnName": "paDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paPending",
            "columnName": "paPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "paPk",
            "paDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_PersonAuth2Replicate_paPk_paDestination_paVersionId",
            "unique": false,
            "columnNames": [
              "paPk",
              "paDestination",
              "paVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonAuth2Replicate_paPk_paDestination_paVersionId` ON `${TABLE_NAME}` (`paPk`, `paDestination`, `paVersionId`)"
          },
          {
            "name": "index_PersonAuth2Replicate_paDestination_paPending",
            "unique": false,
            "columnNames": [
              "paDestination",
              "paPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_PersonAuth2Replicate_paDestination_paPending` ON `${TABLE_NAME}` (`paDestination`, `paPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "UserSessionReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`usPk` INTEGER NOT NULL, `usVersionId` INTEGER NOT NULL DEFAULT 0, `usDestination` INTEGER NOT NULL, `usPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`usPk`, `usDestination`))",
        "fields": [
          {
            "fieldPath": "usPk",
            "columnName": "usPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usVersionId",
            "columnName": "usVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "usDestination",
            "columnName": "usDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "usPending",
            "columnName": "usPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "usPk",
            "usDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_UserSessionReplicate_usPk_usDestination_usVersionId",
            "unique": false,
            "columnNames": [
              "usPk",
              "usDestination",
              "usVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserSessionReplicate_usPk_usDestination_usVersionId` ON `${TABLE_NAME}` (`usPk`, `usDestination`, `usVersionId`)"
          },
          {
            "name": "index_UserSessionReplicate_usDestination_usPending",
            "unique": false,
            "columnNames": [
              "usDestination",
              "usPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserSessionReplicate_usDestination_usPending` ON `${TABLE_NAME}` (`usDestination`, `usPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CoursePicture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`coursePictureUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coursePictureClazzUid` INTEGER NOT NULL, `coursePictureMasterCsn` INTEGER NOT NULL, `coursePictureLocalCsn` INTEGER NOT NULL, `coursePictureLastChangedBy` INTEGER NOT NULL, `coursePictureLct` INTEGER NOT NULL, `coursePictureUri` TEXT, `coursePictureMd5` TEXT, `coursePictureFileSize` INTEGER NOT NULL, `coursePictureTimestamp` INTEGER NOT NULL, `coursePictureMimeType` TEXT, `coursePictureActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "coursePictureUid",
            "columnName": "coursePictureUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureClazzUid",
            "columnName": "coursePictureClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureMasterCsn",
            "columnName": "coursePictureMasterCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureLocalCsn",
            "columnName": "coursePictureLocalCsn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureLastChangedBy",
            "columnName": "coursePictureLastChangedBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureLct",
            "columnName": "coursePictureLct",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureUri",
            "columnName": "coursePictureUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coursePictureMd5",
            "columnName": "coursePictureMd5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coursePictureFileSize",
            "columnName": "coursePictureFileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureTimestamp",
            "columnName": "coursePictureTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coursePictureMimeType",
            "columnName": "coursePictureMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coursePictureActive",
            "columnName": "coursePictureActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "coursePictureUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CoursePictureReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cpPk` INTEGER NOT NULL, `cpVersionId` INTEGER NOT NULL DEFAULT 0, `cpDestination` INTEGER NOT NULL, `cpPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`cpPk`, `cpDestination`))",
        "fields": [
          {
            "fieldPath": "cpPk",
            "columnName": "cpPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpVersionId",
            "columnName": "cpVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "cpDestination",
            "columnName": "cpDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cpPending",
            "columnName": "cpPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cpPk",
            "cpDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CoursePictureReplicate_cpPk_cpDestination_cpVersionId",
            "unique": false,
            "columnNames": [
              "cpPk",
              "cpDestination",
              "cpVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CoursePictureReplicate_cpPk_cpDestination_cpVersionId` ON `${TABLE_NAME}` (`cpPk`, `cpDestination`, `cpVersionId`)"
          },
          {
            "name": "index_CoursePictureReplicate_cpDestination_cpPending",
            "unique": false,
            "columnNames": [
              "cpDestination",
              "cpPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CoursePictureReplicate_cpDestination_cpPending` ON `${TABLE_NAME}` (`cpDestination`, `cpPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "Chat",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chatStartDate` INTEGER NOT NULL, `chatTitle` TEXT, `chatGroup` INTEGER NOT NULL, `chatLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "chatUid",
            "columnName": "chatUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatStartDate",
            "columnName": "chatStartDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatTitle",
            "columnName": "chatTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chatGroup",
            "columnName": "chatGroup",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatLct",
            "columnName": "chatLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chatUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ChatMember",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatMemberUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chatMemberChatUid` INTEGER NOT NULL, `chatMemberPersonUid` INTEGER NOT NULL, `chatMemberJoinedDate` INTEGER NOT NULL, `chatMemberLeftDate` INTEGER NOT NULL, `chatMemberLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "chatMemberUid",
            "columnName": "chatMemberUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberChatUid",
            "columnName": "chatMemberChatUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberPersonUid",
            "columnName": "chatMemberPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberJoinedDate",
            "columnName": "chatMemberJoinedDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberLeftDate",
            "columnName": "chatMemberLeftDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberLct",
            "columnName": "chatMemberLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chatMemberUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Message",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `messageSenderPersonUid` INTEGER NOT NULL, `messageTableId` INTEGER NOT NULL, `messageEntityUid` INTEGER NOT NULL, `messageText` TEXT, `messageTimestamp` INTEGER NOT NULL, `messageClazzUid` INTEGER NOT NULL, `messageLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "messageUid",
            "columnName": "messageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageSenderPersonUid",
            "columnName": "messageSenderPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageTableId",
            "columnName": "messageTableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageEntityUid",
            "columnName": "messageEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageText",
            "columnName": "messageText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "messageTimestamp",
            "columnName": "messageTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageClazzUid",
            "columnName": "messageClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageLct",
            "columnName": "messageLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messageUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "MessageReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messagePk` INTEGER NOT NULL, `messageVersionId` INTEGER NOT NULL DEFAULT 0, `messageDestination` INTEGER NOT NULL, `messagePending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`messagePk`, `messageDestination`))",
        "fields": [
          {
            "fieldPath": "messagePk",
            "columnName": "messagePk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageVersionId",
            "columnName": "messageVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "messageDestination",
            "columnName": "messageDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messagePending",
            "columnName": "messagePending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messagePk",
            "messageDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_MessageReplicate_messagePk_messageDestination_messageVersionId",
            "unique": false,
            "columnNames": [
              "messagePk",
              "messageDestination",
              "messageVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MessageReplicate_messagePk_messageDestination_messageVersionId` ON `${TABLE_NAME}` (`messagePk`, `messageDestination`, `messageVersionId`)"
          },
          {
            "name": "index_MessageReplicate_messageDestination_messagePending",
            "unique": false,
            "columnNames": [
              "messageDestination",
              "messagePending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MessageReplicate_messageDestination_messagePending` ON `${TABLE_NAME}` (`messageDestination`, `messagePending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ChatReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatPk` INTEGER NOT NULL, `chatVersionId` INTEGER NOT NULL DEFAULT 0, `chatDestination` INTEGER NOT NULL, `chatPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`chatPk`, `chatDestination`))",
        "fields": [
          {
            "fieldPath": "chatPk",
            "columnName": "chatPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatVersionId",
            "columnName": "chatVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "chatDestination",
            "columnName": "chatDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatPending",
            "columnName": "chatPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chatPk",
            "chatDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ChatReplicate_chatPk_chatDestination_chatVersionId",
            "unique": false,
            "columnNames": [
              "chatPk",
              "chatDestination",
              "chatVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatReplicate_chatPk_chatDestination_chatVersionId` ON `${TABLE_NAME}` (`chatPk`, `chatDestination`, `chatVersionId`)"
          },
          {
            "name": "index_ChatReplicate_chatDestination_chatPending",
            "unique": false,
            "columnNames": [
              "chatDestination",
              "chatPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatReplicate_chatDestination_chatPending` ON `${TABLE_NAME}` (`chatDestination`, `chatPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ChatMemberReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatMemberPk` INTEGER NOT NULL, `chatMemberVersionId` INTEGER NOT NULL DEFAULT 0, `chatMemberDestination` INTEGER NOT NULL, `chatMemberPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`chatMemberPk`, `chatMemberDestination`))",
        "fields": [
          {
            "fieldPath": "chatMemberPk",
            "columnName": "chatMemberPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberVersionId",
            "columnName": "chatMemberVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "chatMemberDestination",
            "columnName": "chatMemberDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatMemberPending",
            "columnName": "chatMemberPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chatMemberPk",
            "chatMemberDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ChatMemberReplicate_chatMemberPk_chatMemberDestination_chatMemberVersionId",
            "unique": false,
            "columnNames": [
              "chatMemberPk",
              "chatMemberDestination",
              "chatMemberVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatMemberReplicate_chatMemberPk_chatMemberDestination_chatMemberVersionId` ON `${TABLE_NAME}` (`chatMemberPk`, `chatMemberDestination`, `chatMemberVersionId`)"
          },
          {
            "name": "index_ChatMemberReplicate_chatMemberDestination_chatMemberPending",
            "unique": false,
            "columnNames": [
              "chatMemberDestination",
              "chatMemberPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatMemberReplicate_chatMemberDestination_chatMemberPending` ON `${TABLE_NAME}` (`chatMemberDestination`, `chatMemberPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "MessageRead",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageReadUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `messageReadPersonUid` INTEGER NOT NULL, `messageReadMessageUid` INTEGER NOT NULL, `messageReadEntityUid` INTEGER NOT NULL, `messageReadLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "messageReadUid",
            "columnName": "messageReadUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadPersonUid",
            "columnName": "messageReadPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadMessageUid",
            "columnName": "messageReadMessageUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadEntityUid",
            "columnName": "messageReadEntityUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadLct",
            "columnName": "messageReadLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messageReadUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "MessageReadReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageReadPk` INTEGER NOT NULL, `messageReadVersionId` INTEGER NOT NULL DEFAULT 0, `messageReadDestination` INTEGER NOT NULL, `messageReadPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`messageReadPk`, `messageReadDestination`))",
        "fields": [
          {
            "fieldPath": "messageReadPk",
            "columnName": "messageReadPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadVersionId",
            "columnName": "messageReadVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "messageReadDestination",
            "columnName": "messageReadDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageReadPending",
            "columnName": "messageReadPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messageReadPk",
            "messageReadDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_MessageReadReplicate_messageReadPk_messageReadDestination_messageReadVersionId",
            "unique": false,
            "columnNames": [
              "messageReadPk",
              "messageReadDestination",
              "messageReadVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MessageReadReplicate_messageReadPk_messageReadDestination_messageReadVersionId` ON `${TABLE_NAME}` (`messageReadPk`, `messageReadDestination`, `messageReadVersionId`)"
          },
          {
            "name": "index_MessageReadReplicate_messageReadDestination_messageReadPending",
            "unique": false,
            "columnNames": [
              "messageReadDestination",
              "messageReadPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MessageReadReplicate_messageReadDestination_messageReadPending` ON `${TABLE_NAME}` (`messageReadDestination`, `messageReadPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "CourseDiscussion",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseDiscussionUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `courseDiscussionTitle` TEXT, `courseDiscussionDesc` TEXT, `courseDiscussionClazzUid` INTEGER NOT NULL, `courseDiscussionActive` INTEGER NOT NULL, `courseDiscussionLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "courseDiscussionUid",
            "columnName": "courseDiscussionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseDiscussionTitle",
            "columnName": "courseDiscussionTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseDiscussionDesc",
            "columnName": "courseDiscussionDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseDiscussionClazzUid",
            "columnName": "courseDiscussionClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseDiscussionActive",
            "columnName": "courseDiscussionActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseDiscussionLct",
            "columnName": "courseDiscussionLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "courseDiscussionUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseDiscussionReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseDiscussionPk` INTEGER NOT NULL, `courseDiscussionVersionId` INTEGER NOT NULL DEFAULT 0, `courseDiscussionDestination` INTEGER NOT NULL, `courseDiscussionPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`courseDiscussionPk`, `courseDiscussionDestination`))",
        "fields": [
          {
            "fieldPath": "courseDiscussionPk",
            "columnName": "courseDiscussionPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseDiscussionVersionId",
            "columnName": "courseDiscussionVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "courseDiscussionDestination",
            "columnName": "courseDiscussionDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseDiscussionPending",
            "columnName": "courseDiscussionPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "courseDiscussionPk",
            "courseDiscussionDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_CourseDiscussionReplicate_courseDiscussionPk_courseDiscussionDestination_courseDiscussionVersionId",
            "unique": false,
            "columnNames": [
              "courseDiscussionPk",
              "courseDiscussionDestination",
              "courseDiscussionVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseDiscussionReplicate_courseDiscussionPk_courseDiscussionDestination_courseDiscussionVersionId` ON `${TABLE_NAME}` (`courseDiscussionPk`, `courseDiscussionDestination`, `courseDiscussionVersionId`)"
          },
          {
            "name": "index_CourseDiscussionReplicate_courseDiscussionDestination_courseDiscussionPending",
            "unique": false,
            "columnNames": [
              "courseDiscussionDestination",
              "courseDiscussionPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_CourseDiscussionReplicate_courseDiscussionDestination_courseDiscussionPending` ON `${TABLE_NAME}` (`courseDiscussionDestination`, `courseDiscussionPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionTopic",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionTopicUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `discussionTopicTitle` TEXT, `discussionTopicDesc` TEXT, `discussionTopicStartDate` INTEGER NOT NULL, `discussionTopicCourseDiscussionUid` INTEGER NOT NULL, `discussionTopicVisible` INTEGER NOT NULL, `discussionTopicArchive` INTEGER NOT NULL, `discussionTopicIndex` INTEGER NOT NULL, `discussionTopicClazzUid` INTEGER NOT NULL, `discussionTopicLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "discussionTopicUid",
            "columnName": "discussionTopicUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicTitle",
            "columnName": "discussionTopicTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionTopicDesc",
            "columnName": "discussionTopicDesc",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionTopicStartDate",
            "columnName": "discussionTopicStartDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicCourseDiscussionUid",
            "columnName": "discussionTopicCourseDiscussionUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicVisible",
            "columnName": "discussionTopicVisible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicArchive",
            "columnName": "discussionTopicArchive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicIndex",
            "columnName": "discussionTopicIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicClazzUid",
            "columnName": "discussionTopicClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicLct",
            "columnName": "discussionTopicLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "discussionTopicUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionTopicReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionTopicPk` INTEGER NOT NULL, `discussionTopicVersionId` INTEGER NOT NULL DEFAULT 0, `discussionTopicDestination` INTEGER NOT NULL, `discussionTopicPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`discussionTopicPk`, `discussionTopicDestination`))",
        "fields": [
          {
            "fieldPath": "discussionTopicPk",
            "columnName": "discussionTopicPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicVersionId",
            "columnName": "discussionTopicVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "discussionTopicDestination",
            "columnName": "discussionTopicDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicPending",
            "columnName": "discussionTopicPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "discussionTopicPk",
            "discussionTopicDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_DiscussionTopicReplicate_discussionTopicPk_discussionTopicDestination_discussionTopicVersionId",
            "unique": false,
            "columnNames": [
              "discussionTopicPk",
              "discussionTopicDestination",
              "discussionTopicVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DiscussionTopicReplicate_discussionTopicPk_discussionTopicDestination_discussionTopicVersionId` ON `${TABLE_NAME}` (`discussionTopicPk`, `discussionTopicDestination`, `discussionTopicVersionId`)"
          },
          {
            "name": "index_DiscussionTopicReplicate_discussionTopicDestination_discussionTopicPending",
            "unique": false,
            "columnNames": [
              "discussionTopicDestination",
              "discussionTopicPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DiscussionTopicReplicate_discussionTopicDestination_discussionTopicPending` ON `${TABLE_NAME}` (`discussionTopicDestination`, `discussionTopicPending`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionPostUid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `discussionPostTitle` TEXT, `discussionPostMessage` TEXT, `discussionPostStartDate` INTEGER NOT NULL, `discussionPostDiscussionTopicUid` INTEGER NOT NULL, `discussionPostVisible` INTEGER NOT NULL, `discussionPostArchive` INTEGER NOT NULL, `discussionPostStartedPersonUid` INTEGER NOT NULL, `discussionPostClazzUid` INTEGER NOT NULL, `discussionPostLct` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "discussionPostUid",
            "columnName": "discussionPostUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostTitle",
            "columnName": "discussionPostTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionPostMessage",
            "columnName": "discussionPostMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionPostStartDate",
            "columnName": "discussionPostStartDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostDiscussionTopicUid",
            "columnName": "discussionPostDiscussionTopicUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostVisible",
            "columnName": "discussionPostVisible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostArchive",
            "columnName": "discussionPostArchive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostStartedPersonUid",
            "columnName": "discussionPostStartedPersonUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostClazzUid",
            "columnName": "discussionPostClazzUid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostLct",
            "columnName": "discussionPostLct",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "discussionPostUid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionPostReplicate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionPostPk` INTEGER NOT NULL, `discussionPostVersionId` INTEGER NOT NULL DEFAULT 0, `discussionPostDestination` INTEGER NOT NULL, `discussionPostPending` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`discussionPostPk`, `discussionPostDestination`))",
        "fields": [
          {
            "fieldPath": "discussionPostPk",
            "columnName": "discussionPostPk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostVersionId",
            "columnName": "discussionPostVersionId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "discussionPostDestination",
            "columnName": "discussionPostDestination",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionPostPending",
            "columnName": "discussionPostPending",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "discussionPostPk",
            "discussionPostDestination"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_DiscussionPostReplicate_discussionPostPk_discussionPostDestination_discussionPostVersionId",
            "unique": false,
            "columnNames": [
              "discussionPostPk",
              "discussionPostDestination",
              "discussionPostVersionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DiscussionPostReplicate_discussionPostPk_discussionPostDestination_discussionPostVersionId` ON `${TABLE_NAME}` (`discussionPostPk`, `discussionPostDestination`, `discussionPostVersionId`)"
          },
          {
            "name": "index_DiscussionPostReplicate_discussionPostDestination_discussionPostPending",
            "unique": false,
            "columnNames": [
              "discussionPostDestination",
              "discussionPostPending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DiscussionPostReplicate_discussionPostDestination_discussionPostPending` ON `${TABLE_NAME}` (`discussionPostDestination`, `discussionPostPending`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '5e9d04645b5feb24c488f344eb9e6a4c')"
    ]
  }
}