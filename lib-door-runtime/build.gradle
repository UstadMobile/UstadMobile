
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.multiplatform'
}

apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion rootProject.ext.version_android_compile_sdk
    buildToolsVersion rootProject.ext.version_android_buildtools

    defaultConfig {
        minSdkVersion rootProject.ext.version_android_min_sdk
        targetSdkVersion rootProject.ext.version_android_target_sdk
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group rootProject.group
version rootProject.version

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }

        compilations.test.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }
    }

    android()

    js {
        nodejs()

        compilations.main.kotlinOptions {
            metaInfo = true
            sourceMap = true
            moduleKind = "commonjs"
        }
    }


    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$version_coroutines"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$version_kotlinx_serialization"
                implementation "io.ktor:ktor-client-core:$version_ktor"
                implementation "io.ktor:ktor-client-json:$version_ktor"
                implementation "com.github.aakira:napier:$version_napier"
                implementation "org.jetbrains.kotlinx:atomicfu-common:$atomicfu_version"
                compileOnly project(":lib-room-annotations")
            }
        }

//        jsTest {
//            dependencies {
//                implementation "org.jetbrains.kotlin:kotlin-test-js:$version_kotlin"
//            }
//        }

//        commonTest {
//            commonTest {
//                dependencies {
//                    implementation project(":lib-database-mpp")
//                }
//            }
//        }

        commonJvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"

                compileOnly "org.nanohttpd:nanohttpd:$version_nanohttpd"
                compileOnly "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"
            }
        }

        jvmMain {
            dependsOn commonJvmMain

            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlinx_serialization"
                implementation project(":lib-room-annotations")
                implementation "io.ktor:ktor-client-okhttp:$version_ktor"
                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"
                implementation "com.github.aakira:napier-jvm:$version_napier"
                compileOnly "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
            }
        }

        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$version_coroutines"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$version_kotlinx_serialization"
                implementation project(":lib-room-annotations")
                implementation "io.ktor:ktor-client-js:$version_ktor"
                implementation "io.ktor:ktor-client-serialization-js:$version_ktor"
                implementation "com.github.aakira:napier-js:$version_napier"
            }
        }

        androidMain {
            dependsOn commonJvmMain

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlinx_serialization"
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_androidx_lifecycle"
                implementation "androidx.paging:paging-runtime:$version_androidx_paging"
                implementation "io.ktor:ktor-client-okhttp:$version_ktor"
                implementation "com.github.aakira:napier-android:$version_napier"
            }
        }
        androidTest{
            dependencies{
                implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$version_kotlin_mockito"
                implementation "junit:junit:$version_junit"
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
            }
        }

        jvmTest {
            dependencies {
                implementation "junit:junit:$version_junit"
                implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$version_kotlin_mockito"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
            }
        }
    }
}

//Kotlin plugin applied using subprojects DSL on the root project as advised by documentation
apply plugin: "maven-publish"


publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}