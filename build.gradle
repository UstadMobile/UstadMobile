// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.version_kotlin = '1.9.21'
    ext.version_shadow = "8.1.1"
    ext.atomicfu_version = '0.23.1'
    ext.version_ktor = "2.3.6"
    ext.version_moko_resources = "0.23.0"

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()

        //Compose multiplatform as per https://github.com/JetBrains/compose-multiplatform-desktop-template/#readme
        maven {
            url "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        }
    }

}

plugins {
    id 'com.android.application' version '8.2.2' apply false
    id 'com.android.library' version '8.2.2' apply false
    id 'org.jetbrains.kotlin.android' version "$version_kotlin" apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version "$version_kotlin" apply false
    id 'org.jetbrains.kotlin.plugin.atomicfu' version "$version_kotlin" apply false
    id 'dev.icerock.mobile.multiplatform-resources' version "$version_moko_resources" apply false
    id "com.github.ben-manes.versions" version "0.49.0"
    id 'org.jetbrains.kotlin.jvm' version "$version_kotlin" apply false
    alias(libs.plugins.jetbrains.compose) apply false
    id 'com.github.gmazzo.buildconfig' version '5.3.5' apply false
}



allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()

        //Temp jitpack substitute
        maven {
            url "https://devserver3.ustadmobile.com/maven2"
        }

        maven {
            url "https://devserver3.ustadmobile.com/maven"
        }

        maven {
            url "https://devserver3.ustadmobile.com/repo-mvn"
        }

        maven {
            url "https://jitpack.io"
        }

        //WordPress Utils Android - https://github.com/wordpress-mobile/WordPress-Utils-Android
        // Used by Aztec
        maven {
            url "https://a8c-libs.s3.amazonaws.com/android"
        }
        maven {
            url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
        }

        //Compose multiplatform
        maven {
            url "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        }

        //Compose Multiplatform Webview requirement
        maven {
            url "https://jogamp.org/deployment/maven/"
        }

    }
}

//Major.minor.database version
version = "0.4.64"
group = "com.ustadmobile.app"

/**
 * Useful repository listings:
 * Android: https://maven.google.com/web/index.html
 * Kotlin: https://package-search.jetbrains.com/
 */
ext {
    ustadVersion = project.version
    ustadVersionCode = 288

    version_retriever = "0.0.1e"
    version_xmlpullparserkmp = '0.0.26'

    version_gradle_buildconfig_plugin = "1.1.7"
    version_ksp = "1.0.15"
    version_jacoco_tool = "0.8.5"
    version_kotlin_jvmTarget = "17"
    version_kotlinx_serialization = "1.6.1"
    version_xmlutil = "0.86.2"
    version_klock = "2.4.13"
    version_ktor = "2.3.6"
    version_coroutines = "1.7.3"
    version_atomicfu = "0.22.0"
    version_kotlinx_html = "0.9.1"
    version_kotlinx_datetime = "0.4.1"
    version_moko_resources = "0.23.0"


    version_turbine = "1.0.0"
    version_junit = "4.13.2"
    version_nanohttpd = "2.3.1"
    version_kxml = "2.3.0"
    version_json = "20231013"
    version_byte_buddy = "1.14.10"

    version_okhttp = "4.12.0"
    version_commons_io = "2.15.0"
    version_gson = "2.10.1"
    version_apache_commons_cli = "1.6.0"
    version_apache_commons_lang = "3.14.0"
    version_apache_commons_text = "1.8"
    version_apache_commons_dbcp2 = "2.11.0"
    version_mpandroidchart = "v3.1.0"

    version_sqlite_jdbc = "3.42.0.0"
    version_kotlin_mockito = "5.1.0"
    version_apache_commons_pool2 = "2.12.0"
    version_jsoup = "1.17.1"
    version_selenium = "4.15.0"
    version_nv_lang = "1.29"
    version_web_driver = "5.6.2"
    version_postgres_jdbc = "42.6.0"
    version_log4j = "2.21.1"
    version_browser_proxy = "2.1.5"
    version_logback = "1.4.13"
    version_kodein_di = "7.21.0"
    version_netty_tcnative = "2.0.62.Final"
    version_httpcomponents_core5 = "5.2.3"
    version_argparse4j = "0.9.0"

    version_android_buildtools = "30.0.2"
    version_android_compile_sdk = 34
    version_android_target_sdk = 34
    version_android_min_sdk = 21
    version_android_picasso = "2.8"
    version_android_desugar_jdk_libs = "2.0.4"

    //Androidx versions as per https://developer.android.com/jetpack/androidx/versions
    version_androidx_annotation = "1.7.0"

    version_androidx_appcompat = "1.6.1"

    version_compose_bom = "2023.10.01"

    version_compose_accompanist = "0.32.0"

    //As per https://github.com/material-components/material-components-android-compose-theme-adapter/releases
    version_compose_theme_adapter = "0.32.0"

    //List reordering for compose: https://github.com/aclassen/ComposeReorderable
    version_composereorderable = "0.9.6"

    version_androidx_legacy_support = "1.0.0"
    version_androidx_activity = "1.8.1"
    version_androidx_fragment = "1.6.2"
    version_androidx_core = '1.12.0'
    version_androidx_cardview = "1.0.0"
    version_androidx_coordinatorlayout = "1.2.0"
    version_androidx_lifecycle = "2.6.2"
    version_androidx_legacy = "1.0.0"
    version_android_room = "2.6.0"
    version_androidx_arch = "2.1.0"
    version_androidx_recyclerview = "1.3.2"
    version_android_multidex = "2.0.1"
    version_android_workmanager = "2.8.1"
    version_android_datastore = "1.0.0"
    version_android_flexbox = "3.0.0"
    version_android_espresso = "3.5.1"
    version_android_acra = "5.11.3"
    version_androidx_test_core = "1.5.0"
    version_androidx_orchestrator = "1.4.2"
    version_androidx_test_rules = "1.5.0"
    version_android_junit_runner = "1.5.2"
    version_androidx_test_ext_junit = "1.1.5" //see https://mvnrepository.com/artifact/androidx.test.ext/junit
    version_android_espresso_recyclerviewchildactions = "1.0"
    version_androidx_databinding = "7.0.4"
    version_android_mockito = "5.7.0"
    version_android_roboelectric = "4.10.3"
    version_android_uiautomator = "2.2.0"
    version_android_firebase_auth = "16.0.4"
    version_android_facebook_login = "4.37.0"
    version_android_twitter_login = "3.3.0"
    version_android_seismic = "1.0.3"
    version_play_core = "1.10.3"
    version_android_leakcanary = "2.10"
    version_android_play_services_safetynet = "17.0.0"
    version_android_circleimageview = "3.1.0"
    version_androidx_viewpager2 = "1.1.0-rc01"
    version_android_wordpress_utils = "2.0.0"

    version_android_litr = "1.5.5"  //see https://github.com/linkedin/LiTr
    version_android_sharp = "1.1.3@aar"

    version_android_panickit = "1.0"

    version_js_node = "10.15.1"
    version_js_yarn="1.13.0"

    version_jakartamail="2.0.1"

    version_persian_date_picker_aliab="1.7.1"
    version_better_link_movement="2.2.0"

    version_jcabi_manifests = "2.1.0"


    /*Kotlin react web app*/
    kotlinWrappersVersion = "1.0.0-pre.651"

    version_npm_mement_io = "^2.14.0"

    //Should be as specified by kotlinx datetime lib https://github.com/Kotlin/kotlinx-datetime#note-about-time-zones-in-js
    version_npm_joda_timezone = "2.3.0"

    version_npm_timezones = "^1.6.1"

    version_npm_emotion = "11.10.5"
    version_npm_google_charts = "^3.0.15"
    version_npm_html_to_image = "^1.9.0"
    version_npm_date_fns = "2.29.1"
    version_npm_mime_matcher = "^1.0.5"
    version_npm_react_quill = "2.0.0"

    version_npm_striptags = "^3.2.0"
    version_npm_react_easy_sort = "^1.5.1"
    version_npm_mui_tel_input = "4.0.1"
    version_npm_libphonenumber_js = "^1.10.47"
    version_npm_linkify = "^4.1.3"
    version_pdfview_android = "1.1.0"
    version_pdfview_android = "1.1.0"

    version_npm_uuid = "^9.0.1"
    version_compressorjs = "^1.2.1"
}

/*
 * Look for a command. If a variable in buildconfig specifies the path, and the file exists, then
 * use the variable value. Otherwise search the system path.
 */
ext.findCommand = {String command, String buildConfigVarName ->
    if(ext.buildConfigProperties.containsKey(buildConfigVarName) && rootProject.file(ext.buildConfigProperties.getProperty(buildConfigVarName)).exists()) {
        return ext.buildConfigProperties.getProperty(buildConfigVarName)
    }else {
        def pathDirs = System.getenv("PATH").split(File.pathSeparator)
        for(path in pathDirs) {
            if(file("$path/$command").exists()) {
                return "$path/$command"
            }
        }
    }

    return "PATHNOTFOUND"
}


ext.buildConfigProperties = new Properties()
ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.default.properties")))
if(project.file("buildconfig.local.properties").exists()) {
    ext.buildConfigProperties.load(new FileInputStream(project.file("buildconfig.local.properties")))
}

if(System.getenv("TESTSERVER_HOST") != null) {
    ext.buildConfigProperties["test.um_http_testserver"] = System.getenv("TESTSERVER_HOST")
}

if(System.getenv("TESTSERVER_PORT") != null) {
    ext.buildConfigProperties["test.um_http_testserver_controlport"] = System.getenv("TESTSERVER_PORT")
}

ext.localProperties = new Properties()
if(project.file("local.properties").exists()) {
    ext.localProperties.load(new FileInputStream(project.file("local.properties")))
}

if(System.getenv("ACRA_HTTP_URI") != null) {
    ext.buildConfigProperties["android.acra.url"] = System.getenv("ACRA_HTTP_URI")
}

if(System.getenv("ACRA_BASIC_LOGIN") != null) {
    ext.buildConfigProperties["android.acra.user"] = System.getenv("ACRA_BASIC_LOGIN")
}

if(System.getenv("ACRA_BASIC_PASS") != null) {
    ext.buildConfigProperties["android.acra.auth"] = System.getenv("ACRA_BASIC_PASS")
}

if(System.getenv("DOORDB_POSTGRES_URL") != null) {
    ext.buildConfigProperties["doordb_postgres_url"] = System.getenv("DOORDB_POSTGRES_URL")
}

if(System.getenv("DOORDB_POSTGRES_USER") != null) {
    ext.buildConfigProperties["doordb_postgres_user"] = System.getenv("DOORDB_POSTGRES_USER")
}

if(System.getenv("DOORDB_POSTGRES_PASSWORD") != null) {
    ext.buildConfigProperties["doordb_postgres_password"] = System.getenv("DOORDB_POSTGRES_PASSWORD")
}

//Find stable updates only as per https://github.com/ben-manes/gradle-versions-plugin
def isNonStable = { String version ->
    def hasPreReleaseKeywords = ["BETA", "ALPHA", "RC"].any { it -> version.toUpperCase().contains(it)}
    return hasPreReleaseKeywords
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
