
plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.atomicfu'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.android.library'
    id 'maven-publish'
    alias(libs.plugins.moko.resources.plugin)
}


android {
    compileSdkVersion rootProject.ext.version_android_compile_sdk

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.version_android_target_sdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        resources {
            // .kotlin_metadata files come from multiplatform modules, but are not needed unless we
            // use kotlin reflection, which we don't.
            excludes += ['META-INF/INDEX.LIST', '**/*.kotlin_metadata', 'META-INF/*.kotlin_module', 'licenses/**.TXT']
        }
    }


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    namespace 'com.ustadmobile.core'
    lint {
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "17"
            freeCompilerArgs += "-Xexpect-actual-classes"
        }
    }

}

sourceCompatibility = '17'
targetCompatibility = '17'

group rootProject.group
version rootProject.version

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}


kotlin {
    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }

        compilations.test.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }
    }

    android()

    js(IR) {
        useCommonJs()

        browser {
            testTask {
                useKarma {
                    useChromeHeadless() //change to useChrome to run the actual browser
                }
            }
        }
    }

    sourceSets {

        commonMain {
            dependencies {
                api libs.moko.resources
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
                api "io.ktor:ktor-client-core:$version_ktor"
                api "io.ktor:ktor-client-json:$version_ktor"
                api "io.ktor:ktor-client-content-negotiation:$version_ktor"
                api "io.ktor:ktor-io:$version_ktor"
                implementation libs.napier
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation libs.door.runtime
                implementation "org.kodein.di:kodein-di:$version_kodein_di"
                api project(':lib-database')
                implementation libs.door.runtime
                implementation project(":lib-util")
                implementation "com.github.UstadMobile:xmlpullparserkmp:$version_xmlpullparserkmp"
                implementation "org.jetbrains.kotlinx:atomicfu:$version_atomicfu"
                implementation "org.jetbrains.kotlinx:kotlinx-datetime:$version_kotlinx_datetime"
                api libs.kotlinxio.core
                api libs.xmlutil.core
                api libs.xmlutil.serialization
                api libs.precompose
                api libs.precompose.viewmodel
                api libs.multiplatformsettings
                api libs.cache4k
                implementation libs.urlencoder
            }
        }

        commonJvmMain {
            dependsOn commonMain

            dependencies {
                implementation kotlin('stdlib-common')
                implementation project(":lib-database")
                implementation project(":lib-cache")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation libs.ktor.client.okhttp
                implementation "io.ktor:ktor-client-cio:$version_ktor"
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"
                implementation "org.kodein.di:kodein-di:$version_kodein_di"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                api "io.ktor:ktor-serialization-kotlinx-json:$version_ktor"
                compileOnly "net.sf.kxml:kxml2:$version_kxml"
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines"
            }
        }

        jvmMain {
            dependsOn commonMain
            dependsOn commonJvmMain
            resources.srcDirs += ["src/main/assets"]

            dependencies {
                implementation "org.apache.pdfbox:pdfbox:$version_pdfbox_apache"
                implementation "org.jsoup:jsoup:$version_jsoup"
                implementation "com.google.code.gson:gson:$version_gson"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation libs.quartz
                implementation "io.ktor:ktor-server-core:$version_ktor"
                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"
                implementation libs.javaffmpeg
                implementation libs.libphonenumber.google
                implementation libs.thumbnailator
                implementation libs.webpimageio
            }
        }

        jvmTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:$version_kotlin"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$version_kotlin"
                implementation libs.mockito.kotlin
                implementation "com.soywiz.korlibs.klock:klock:$version_klock"
                implementation "junit:junit:$version_junit"
                implementation "io.ktor:ktor-server-content-negotiation:$version_ktor"

                implementation project(":sharedse")
                implementation project(":lib-test-common")
                implementation project(":app-ktor-server")

                implementation libs.simplejndi
                implementation "org.apache.commons:commons-pool2:$version_apache_commons_pool2"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "org.apache.commons:commons-dbcp2:$version_apache_commons_dbcp2"

                implementation "org.nanohttpd:nanohttpd:$version_nanohttpd"
                implementation "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"

                implementation libs.mockwebserver
                implementation "io.ktor:ktor-server-netty:$version_ktor"
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"

                implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$version_kodein_di"

                implementation "net.bytebuddy:byte-buddy:$version_byte_buddy"
                implementation "app.cash.turbine:turbine:$version_turbine"

                implementation "io.ktor:ktor-server-call-logging:$version_ktor"
            }
        }

        androidMain {
            dependsOn commonJvmMain

            dependencies {

                implementation "com.dmitryborodin:pdfview-android:$version_pdfview_android"

                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
                implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_androidx_lifecycle"
                implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_androidx_lifecycle"
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation "com.google.code.gson:gson:$version_gson"

                implementation libs.androidx.appcompat
                implementation "androidx.legacy:legacy-support-v4:$version_androidx_legacy"

                //Seems to fix things when we put a specific dependency here
                implementation "androidx.coordinatorlayout:coordinatorlayout:$version_androidx_coordinatorlayout"
                implementation "androidx.recyclerview:recyclerview:$version_androidx_recyclerview"
                implementation "androidx.room:room-runtime:$version_android_room"
                implementation(libs.androidx.paging.runtime)
                implementation "androidx.work:work-runtime:$version_android_workmanager"
                implementation "androidx.work:work-runtime-ktx:$version_android_workmanager"
                implementation "org.jsoup:jsoup:$version_jsoup"
                //Image loading library
                implementation "com.squareup.picasso:picasso:$version_android_picasso"
                implementation "io.ktor:ktor-client-android:$version_ktor"
                implementation "io.ktor:ktor-serialization-gson:$version_ktor"

                implementation "com.linkedin.android.litr:litr:$version_android_litr"

                //dependency injection
                implementation "org.kodein.di:kodein-di-framework-android-x:$version_kodein_di"

                implementation libs.okhttp

                implementation libs.androidx.navigation.fragment.ktx
                implementation libs.androidx.navigation.ui.ktx

                implementation libs.android.material
                implementation libs.libphonenumber.android

                implementation libs.process.phoenix
                implementation libs.compressor
                implementation libs.coil
            }
        }

        androidUnitTest {
            dependencies {
                implementation "androidx.test:runner:$version_android_junit_runner"
                implementation "junit:junit:$version_junit"
                implementation "org.robolectric:robolectric:$version_android_roboelectric"
                implementation "androidx.test:core:$version_androidx_test_core"
            }
        }

        jsMain {
            //Note: if dependsOn commonMain is not explicitly added below, MokoResources will not
            // generate string resources for JS as required.
            dependsOn commonMain

            dependencies {
                implementation "io.ktor:ktor-client-js:$version_ktor"
                implementation "io.ktor:ktor-client-json-js:$version_ktor"
                implementation "io.ktor:ktor-client-serialization-js:$version_ktor"

                implementation enforcedPlatform("org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom:$kotlinWrappersVersion")
                implementation "org.jetbrains.kotlin-wrappers:kotlin-extensions"
                implementation "org.jetbrains.kotlin-wrappers:kotlin-react"
                implementation "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom"

                implementation npm("libphonenumber-js", "$version_npm_libphonenumber_js")
                implementation npm("uuid", "$version_npm_uuid")
                implementation npm("compressorjs", "$version_compressorjs")
            }
        }

        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }

    }
}

dependencies {
    coreLibraryDesugaring libs.android.desugar.libs
}

afterEvaluate {

}

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}


multiplatformResources {
    multiplatformResourcesPackage = "com.ustadmobile.core"
    iosBaseLocalizationRegion = "en"
}
