ktor {
    deployment {
        port = 8087

        # Uncomment this to enable SSL. If this is enabled, a certificate must be provided (see
        # security section below)
        # sslPort = 8889

    }

    application {
        modules = [ com.ustadmobile.lib.rest.UmRestApplicationKt.umRestApplication ]
    }

    ustad {
        # dbmode can be singleton or virtualhost .  If the dbmode is virtualhost, then multiple
        # instances can run using the same server.
        dbmode = singleton
        datadir = data
    }

    database {
        #Change to "org.sqlite.JDBC" to use Sqlite. Postgres is recommended for production
        #use
        driver = "org.postgresql.Driver"

        # If you are using the virtualhost dbmode, then you will need to add the (hostname)
        # variable to the database url e.g.
        #   url=jdbc:postgres:///ustad_(hostname)
        # Any non alphanumeric characters in hostname (e.g. ., -, etc) will be replaced with _
        #
        # If you are simply running a single instance (e.g. no virtual hosting), just enter the JDBC
        # database url here.
        #
        # For Sqlite:
        #  jdbc:sqlite:path/to/file.sqlite?parameters
        # recommended parameters: journal_mode=WAL&synchronous=OFF&busy_timeout=30000
        # For Postgres
        #  jdbc:postgresql:///dbName
        #url = "jdbc:sqlite:data/singleton/UmAppDatabase.sqlite?journal_mode=WAL&synchronous=OFF&busy_timeout=30000"
        url = "jdbc:postgresql:///goldozi11"

        # Enter the Postgres database username and password here if using Postgres. If using SQLite,
        # these can be left blank
        user = "postgres"
        password = "varuna"
    }

    # The database for Quartz is stored separately. Quartz is a library used to trigger timed tasks.
    # There is always one (and only one) quartz database, even when there are multiple virtual
    # servers.
    quartz {
        # Change to org.postgresql.Driver to use Postgres. SQLite is fine for Quartz for production
        # and testing use.
        driver = "org.sqlite.JDBC"


        url = "jdbc:sqlite:data/quartz.sqlite?journal_mode=WAL&synchronous=OFF&busy_timeout=30000"

        user = ""
        password = ""
    }

    security {
        # It is strongly recommended to configure SSL here so the app can use HTTP2. See INSTALL.md
        # for instructions. This applies even when the app is used behind a reverse proxy (because
        # HTTP2 defacto requires SSL).
        # ssl {
        #     keyStore = /etc/letsencrypt/live/mydomain.com/keystore.jks
        #     keyAlias = myalias
        #     keyStorePassword = password
        #     privateKeyPassword = password
        # }
    }
}
