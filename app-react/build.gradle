plugins {
    id 'org.jetbrains.kotlin.js'
}

apply plugin: 'kotlinx-serialization'

group = rootProject.group
version = rootProject.version

repositories {
    mavenCentral()
}

kotlin {
    js(LEGACY) {
        browser {
            //Specify distribution bundle output directory
            distribution {
                directory = rootProject.file("app-ktor-server/src/main/resources/umapp")
            }

            binaries.executable()
            webpackTask {
                cssSupport.enabled = true
            }
            runTask {
                cssSupport.enabled = true
            }
            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
    }
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation "org.jetbrains.kotlin-wrappers:kotlin-react:$version_kotlin_react"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-react-dom:$version_kotlin_react"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-styled:$version_kotlin_styled"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom:$version_kotlin_react_router_dom"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-redux:$version_kotlin_redux"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-react-redux:$version_kotlin_react_redux"
    implementation "org.jetbrains.kotlin-wrappers:kotlin-mui:$version_kotlin_mui"
    implementation project(":lib-database-mpp")
    implementation project(":core")
    implementation project(":lib-util")
    implementation project(":lib-database")
    implementation project(":lib-database-entities")
    implementation npm("@emotion/react", "$version_npm_emotion")
    implementation npm("@emotion/styled", "$version_npm_emotion")
    implementation npm("moment","$version_npm_moment")
    implementation npm("moment-timezone","$version_npm_moment_timezone")
    implementation npm("@date-io/moment","$version_npm_mement_io")
    implementation npm("@mui/lab","$version_npm_mui_lab")
    implementation npm("date-fns","$version_npm_date_fns")
    implementation npm("html-to-image","$version_npm_html_to_image")
    implementation "com.github.UstadMobile.door:room-annotations:$version_door"
    implementation "org.kodein.di:kodein-di:$version_kodein_di"
    implementation npm("react-google-charts","$version_npm_google_charts")
    implementation "com.github.UstadMobile.door:door-runtime:$version_door"
    implementation "io.ktor:ktor-client-js:$version_ktor"
    implementation "io.ktor:ktor-client-json-js:$version_ktor"
    implementation npm("timezones.json","$version_npm_timezones")
    implementation npm("mime-matcher","^1.0.5")
    implementation "com.ustadmobile.xmlpullparserkmp:xmlpullparserkmp:$version_xmlpullparserkmp"
    implementation "io.github.aakira:napier:$version_napier"
}

task generateProductionBundle{
    dependsOn ":app-ktor-server:deleteAppResources"
    dependsOn ":app-react:browserDistribution"
    tasks.findByPath(":app-react:browserDistribution").mustRunAfter ":app-ktor-server:deleteAppResources"
    tasks.findByPath(":app-ktor-server:shadowJar").mustRunAfter ":app-react:browserDistribution"
}
